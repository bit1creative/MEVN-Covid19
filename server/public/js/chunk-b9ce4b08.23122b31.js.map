{"version":3,"sources":["webpack:///./node_modules/diacritics/index.js","webpack:///./node_modules/core-js/internals/get-substitution.js","webpack:///./node_modules/i18n-iso-countries/index.js","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/vue-chart-map/src/App.vue?4861","webpack:///./node_modules/chroma-js/chroma.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./src/views/StatsPage.vue?2baa","webpack:///./src/components/StatsPageContent/index.vue?2781","webpack:///./src/components/StatsPageContent/components/ChartMap/index.vue?1908","webpack:///./node_modules/vue-chart-map/src/App.vue?e3fa","webpack:///./node_modules/vue-chart-map/src/Map.vue?8b34","webpack:///node_modules/vue-chart-map/src/Map.vue","webpack:///./node_modules/vue-chart-map/src/Map.vue?bbd9","webpack:///./node_modules/vue-chart-map/src/Map.vue","webpack:///./node_modules/vue-chart-map/src/dynamic-map-css.js","webpack:///node_modules/vue-chart-map/src/App.vue","webpack:///./node_modules/vue-chart-map/src/App.vue?42ae","webpack:///./node_modules/vue-chart-map/src/App.vue","webpack:///./src/components/StatsPageContent/components/ChartMap/components/ChartMapLoading.vue?ccfb","webpack:///src/components/StatsPageContent/components/ChartMap/components/ChartMapLoading.vue","webpack:///./src/components/StatsPageContent/components/ChartMap/components/ChartMapLoading.vue?a899","webpack:///./src/components/StatsPageContent/components/ChartMap/components/ChartMapLoading.vue","webpack:///./src/components/StatsPageContent/components/ChartMap/components/ChartMapError.vue?b9a9","webpack:///src/components/StatsPageContent/components/ChartMap/components/ChartMapError.vue","webpack:///./src/components/StatsPageContent/components/ChartMap/components/ChartMapError.vue?ef62","webpack:///./src/components/StatsPageContent/components/ChartMap/components/ChartMapError.vue","webpack:///src/components/StatsPageContent/components/ChartMap/index.vue","webpack:///./src/components/StatsPageContent/components/ChartMap/index.vue?c2ef","webpack:///./src/components/StatsPageContent/components/ChartMap/index.vue","webpack:///./src/components/StatsPageContent/components/NavBar.vue?1f5f","webpack:///src/components/StatsPageContent/components/NavBar.vue","webpack:///./src/components/StatsPageContent/components/NavBar.vue?ce93","webpack:///./src/components/StatsPageContent/components/NavBar.vue","webpack:///./src/components/StatsPageContent/components/Date.vue?40c1","webpack:///src/components/StatsPageContent/components/Date.vue","webpack:///./src/components/StatsPageContent/components/Date.vue?3b3e","webpack:///./src/components/StatsPageContent/components/Date.vue","webpack:///./src/components/StatsPageContent/components/DataCards.vue?b39c","webpack:///src/components/StatsPageContent/components/DataCards.vue","webpack:///./src/components/StatsPageContent/components/DataCards.vue?6abe","webpack:///./src/components/StatsPageContent/components/DataCards.vue","webpack:///./src/components/StatsPageContent/components/RouterLinkToCountry.vue?b8a5","webpack:///src/components/StatsPageContent/components/RouterLinkToCountry.vue","webpack:///./src/components/StatsPageContent/components/RouterLinkToCountry.vue?e9dd","webpack:///./src/components/StatsPageContent/components/RouterLinkToCountry.vue","webpack:///src/components/StatsPageContent/index.vue","webpack:///./src/components/StatsPageContent/index.vue?be9a","webpack:///./src/components/StatsPageContent/index.vue","webpack:///src/views/StatsPage.vue","webpack:///./src/views/StatsPage.vue?26a6","webpack:///./src/views/StatsPage.vue","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./node_modules/i18n-iso-countries/langs sync ^\\.\\/.*\\.json$"],"names":["exports","remove","removeDiacritics","replacementList","base","chars","diacriticsMap","i","length","j","str","replace","c","toObject","floor","Math","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","matched","position","captures","namedCaptures","replacement","tailPos","m","symbols","undefined","call","match","ch","capture","charAt","slice","n","f","codes","registeredLocales","alpha2","alpha3","numeric","invertedNumeric","formatNumericCode","code","String","hasOwnProperty","object","property","Object","prototype","localeFilter","localeList","filter","keys","reduce","newLocaleList","nameList","filterNameBy","type","countryNameList","Array","isArray","TypeError","alpha3ToAlpha2","alpha2ToAlpha3","alpha3ToNumeric","alpha2ToNumeric","numericToAlpha3","padded","numericToAlpha2","toAlpha3","test","toUpperCase","toAlpha2","forEach","codeInformation","s","registerLocale","localeData","locale","countries","getName","lang","options","select","codeMaps","toLowerCase","err","getNames","getAlpha2Code","name","normalizeString","string","areSimilar","a","b","codenames","p","mappedName","getSimpleAlpha2Code","getAlpha2Codes","getAlpha3Code","getSimpleAlpha3Code","getAlpha3Codes","getNumericCodes","langs","isValid","coerced","toString","fixRegExpWellKnownSymbolLogic","anObject","toLength","toInteger","requireObjectCoercible","advanceStringIndex","getSubstitution","regExpExec","max","min","maybeToString","it","REPLACE","nativeReplace","maybeCallNative","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","this","replacer","regexp","indexOf","res","done","value","rx","S","functionalReplace","global","fullUnicode","unicode","lastIndex","results","result","push","matchStr","accumulatedResult","nextSourcePosition","index","groups","replacerArgs","concat","apply","whitespaces","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","start","end","trim","Color","DEG2RAD","LAB_CONSTANTS","PI","PITHIRD","RAD2DEG","TWOPI","_average_lrgb","_guess_formats","_guess_formats_sorted","_input","_interpolators","abs","atan2","bezier","blend","blend_f","brewer","burn","chroma","clip_rgb","cmyk2rgb","cos","css2rgb","darken","dodge","each","hcg2rgb","hex2rgb","hsi2rgb","hsl2css","hsl2rgb","hsv2rgb","interpolate","interpolate_hsx","interpolate_lab","interpolate_lrgb","interpolate_num","interpolate_rgb","lab2lch","lab2rgb","lab_xyz","lch2lab","lch2rgb","lighten","limit","log","luminance_x","multiply","normal","num2rgb","overlay","pow","rgb2cmyk","rgb2css","rgb2hcg","rgb2hex","rgb2hsi","rgb2hsl","rgb2hsv","rgb2lab","rgb2lch","rgb2luminance","rgb2num","rgb2temperature","rgb2xyz","rgb_xyz","rnd","round","screen","sin","sqrt","temperature2rgb","unpack","w3cx11","xyz_lab","xyz_rgb","classToType","len","o","ref","split","obj","strType","x","args","rgb","_clipped","_unclipped","arguments","func","ctor","child","version","arg","chk","len1","me","mode","w","_rgb","sort","console","warn","hex","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","key","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","colors","g","l","r","y","z","isNaN","Yn","Xn","Zn","t","t1","t2","t0","Kn","t3","ref1","lab","I","I0","I1","lab0","lab1","lab2","lab3","ref2","scale","cubehelix","rotations","hue","gamma","lightness","dh","dl","fract","amp","cos_a","h","sin_a","random","digits","col1","col2","interpol","alpha","mix","k","v","map","rgba","lrgb","xyz0","xyz1","col","xyz","average","A","cnt","dx","dy","first","xyz2","splice","get","u","substr","parseInt","css","channels","hxa","Number","NaN","hsl","q","ref3","ref4","ref5","delta","hsv","num","_c","_g","hcg","aa","ab","join","named","L","lch","hcl","reverse","cmyk","gl","luminance","lum","cur_lum","eps","max_iter","lm","kelvin","temp","maxTemp","minTemp","temperature","K","contrast","l1","l2","distance","d","sum_sq","deltaE","C","L1","L2","a1","a2","b1","b2","c1","c2","c4","dH2","delA","delB","delC","delL","h1","sc","sh","sl","v1","v2","v3","modechan","channel","src","set","clipped","amount","brighten","darker","brighter","saturate","desaturate","premultiply","bottom","top","c0","out","analyze","data","val","MAX_VALUE","sum","values","count","domain","limits","positions","_classes","_colorCache","_colors","_correctLightness","_domain","_gamma","_max","_min","_mode","_nacol","_out","_padding","_pos","_spread","_useCache","getClass","getColor","resetCache","setColors","tmap","maxc","minc","bypassMap","classes","_m","range","_o","spread","correctLightness","L0","L_actual","L_diff","L_ideal","pol","padding","numColors","dd","dm","samples","cache","nodata","scales","cool","hot","add","visit","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","assignments","best","centroids","cluster","clusterSizes","dist","kClusters","max_log","min_log","mindist","nb_iters","newCentroids","pb","pr","ref10","ref11","ref12","ref13","ref14","ref6","ref7","ref8","ref9","repeat","tmpKMeansBreaks","LOG10E","acos","hsi","hue0","hue1","lbv","lbv0","lbv1","sat","sat0","sat1","n1","n2","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","isObject","setPrototypeOf","dummy","Wrapper","NewTarget","NewTargetPrototype","constructor","render","_vm","_h","$createElement","_self","staticClass","staticRenderFns","attrs","on","onClickTypeOfCasesData","chartToShow","isLoading","error","theme","countryData","highColor","lowColor","defaultCountryFillColor","LangUser","onHoverCountry","onHoverLeaveCountry","directives","rawName","legend","notShow","expression","style","left","positionLeftTooltip","positionTopTooltip","legendBoxShadowCss","legendBorderCss","legendHeaderBackgroundColor","legendFontColorHeader","_v","_s","_e","legendContentBackgroundColor","legendFontColorContent","renderValue","codeLang","component","getColorScaleUnit","getMaxAndMinCountryDataValues","getBaseCss","countryStrokeColor","legendBorderRadius","legendBorderColor","legendBoxShadow","getDynamicMapCss","chromaScale","chromaScaleOn","colorScaleUnit","scaleValue","getCombinedCssString","baseCss","dynamicCss","components","watch","renderMapCSS","props","default","required","showEmptyValue","Boolean","currencyAdd","currencyOnlySign","currencyCurrent","node","document","createElement","keysLegend","computed","getKeyLegend","$props","methods","country","notShowLegendEmpty","$emit","$data","innerHTML","dynamicMapCss","currencyNumber","formatter","Intl","NumberFormat","currency","format","mounted","body","appendChild","created","showContacts","casesTypeId","$event","changeCasesType","casesTypes","clickedTypeOfCasesData","date","substring","_l","dataType","totalValue","DESCRIPTORS","isForced","redefine","has","classof","inheritIfRequired","toPrimitive","fails","create","getOwnPropertyNames","getOwnPropertyDescriptor","NUMBER","NativeNumber","NumberPrototype","BROKEN_CLASSOF","toNumber","argument","third","radix","maxCode","charCodeAt","NumberWrapper","valueOf","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","resolve"],"mappings":"+gkBAAAA,EAAQC,OAASC,EA6SjB,IA3SA,IAAIC,EAAkB,CACpB,CACEC,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,qCACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,OACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,MACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,WACN,CACDD,KAAM,IACNC,MAAO,gBACN,CACDD,KAAM,IACNC,MAAO,iBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,MACN,CACDD,KAAM,KACNC,MAAO,MACN,CACDD,KAAM,IACNC,MAAO,mCACN,CACDD,KAAM,IACNC,MAAO,UACN,CACDD,KAAM,IACNC,MAAO,mBACN,CACDD,KAAM,IACNC,MAAO,iBACN,CACDD,KAAM,IACNC,MAAO,uBACN,CACDD,KAAM,IACNC,MAAO,SACN,CACDD,KAAM,IACNC,MAAO,iBACN,CACDD,KAAM,IACNC,MAAO,qBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,YACN,CACDD,KAAM,IACNC,MAAO,oBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,8CACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,aACN,CACDD,KAAM,IACNC,MAAO,SACN,CACDD,KAAM,IACNC,MAAO,oBACN,CACDD,KAAM,IACNC,MAAO,oBACN,CACDD,KAAM,IACNC,MAAO,kBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,qCACN,CACDD,KAAM,IACNC,MAAO,WACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,aACN,CACDD,KAAM,IACNC,MAAO,QACN,CACDD,KAAM,IACNC,MAAO,kBACN,CACDD,KAAM,IACNC,MAAO,iBACN,CACDD,KAAM,IACNC,MAAO,uCACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,OACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,MACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,aACN,CACDD,KAAM,IACNC,MAAO,gBACN,CACDD,KAAM,IACNC,MAAO,oBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,MACN,CACDD,KAAM,IACNC,MAAO,iCACN,CACDD,KAAM,IACNC,MAAO,QACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,MACNC,MAAO,KACN,CACDD,KAAM,MACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,kBACN,CACDD,KAAM,IACNC,MAAO,kBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,uBACN,CACDD,KAAM,IACNC,MAAO,SACN,CACDD,KAAM,IACNC,MAAO,iBACN,CACDD,KAAM,IACNC,MAAO,uBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,WACN,CACDD,KAAM,IACNC,MAAO,sBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,+CACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,cACN,CACDD,KAAM,IACNC,MAAO,SACN,CACDD,KAAM,IACNC,MAAO,oBACN,CACDD,KAAM,IACNC,MAAO,qBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,mBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,qCACN,CACDD,KAAM,IACNC,MAAO,WACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,cACN,CACDD,KAAM,IACNC,MAAO,QACN,CACDD,KAAM,IACNC,MAAO,mBACN,CACDD,KAAM,IACNC,MAAO,kBAIPC,EAAgB,GACXC,EAAI,EAAGA,EAAIJ,EAAgBK,OAAQD,GAAK,EAE/C,IADA,IAAIF,EAAQF,EAAgBI,GAAGF,MACtBI,EAAI,EAAGA,EAAIJ,EAAMG,OAAQC,GAAK,EACrCH,EAAcD,EAAMI,IAAMN,EAAgBI,GAAGH,KAIjD,SAASF,EAAiBQ,GACxB,OAAOA,EAAIC,QAAQ,qBAAqB,SAASC,GAC/C,OAAON,EAAcM,IAAMA,KAI/BZ,EAAQG,gBAAkBA,EAC1BH,EAAQM,cAAgBA,G,uBC3TxB,IAAIO,EAAW,EAAQ,QAEnBC,EAAQC,KAAKD,MACbH,EAAU,GAAGA,QACbK,EAAuB,4BACvBC,EAAgC,oBAGpCC,EAAOlB,QAAU,SAAUmB,EAAST,EAAKU,EAAUC,EAAUC,EAAeC,GAC1E,IAAIC,EAAUJ,EAAWD,EAAQX,OAC7BiB,EAAIJ,EAASb,OACbkB,EAAUT,EAKd,YAJsBU,IAAlBL,IACFA,EAAgBT,EAASS,GACzBI,EAAUV,GAELL,EAAQiB,KAAKL,EAAaG,GAAS,SAAUG,EAAOC,GACzD,IAAIC,EACJ,OAAQD,EAAGE,OAAO,IAChB,IAAK,IAAK,MAAO,IACjB,IAAK,IAAK,OAAOb,EACjB,IAAK,IAAK,OAAOT,EAAIuB,MAAM,EAAGb,GAC9B,IAAK,IAAK,OAAOV,EAAIuB,MAAMT,GAC3B,IAAK,IACHO,EAAUT,EAAcQ,EAAGG,MAAM,GAAI,IACrC,MACF,QACE,IAAIC,GAAKJ,EACT,GAAU,IAANI,EAAS,OAAOL,EACpB,GAAIK,EAAIT,EAAG,CACT,IAAIU,EAAIrB,EAAMoB,EAAI,IAClB,OAAU,IAANC,EAAgBN,EAChBM,GAAKV,OAA8BE,IAApBN,EAASc,EAAI,GAAmBL,EAAGE,OAAO,GAAKX,EAASc,EAAI,GAAKL,EAAGE,OAAO,GACvFH,EAETE,EAAUV,EAASa,EAAI,GAE3B,YAAmBP,IAAZI,EAAwB,GAAKA,O,i05CCnCxC,MAAMK,EAAQ,EAAQ,QAChBlC,EAAmB,EAAQ,QAAcD,OACzCoC,EAAoB,GAKpBC,EAAS,GACbC,EAAS,GACTC,EAAU,GACVC,EAAkB,GAcpB,SAASC,EAAkBC,GACzB,OAAOC,OAAO,OAASD,GAAc,KAAKV,OAAO,GASnD,SAASY,EAAeC,EAAQC,GAC9B,OAAOC,OAAOC,UAAUJ,eAAejB,KAAKkB,EAAQC,GAYtD,SAASG,EAAaC,EAAYC,GAChC,OAAOJ,OAAOK,KAAKF,GAAYG,QAAO,SAAUC,EAAejB,GAC7D,MAAMkB,EAAWL,EAAWb,GAE5B,OADAiB,EAAcjB,GAAUc,EAAOI,EAAUlB,GAClCiB,IACN,IAYL,SAASE,EAAaC,EAAMC,GAC1B,OAAQD,GACN,IAAK,WACH,OAAOE,MAAMC,QAAQF,GACjBA,EAAgB,GAChBA,EAEN,IAAK,MACH,MAAkC,kBAApBA,EACV,CAACA,GACDA,EAEN,IAAK,QACH,OAAOC,MAAMC,QAAQF,GACjBA,EAAgB,IAAMA,EAAgB,GACtCA,EAEN,QACE,MAAM,IAAIG,UACR,+DA2BR,SAASC,EAAepB,GACtB,OAAOJ,EAAOI,GAQhB,SAASqB,EAAerB,GACtB,OAAOL,EAAOK,GAQhB,SAASsB,EAAgBtB,GACvB,OAAOF,EAAgBsB,EAAepB,IAQxC,SAASuB,EAAgBvB,GACvB,OAAOF,EAAgBE,GAQzB,SAASwB,EAAgBxB,GACvB,MAAMyB,EAAS1B,EAAkBC,GACjC,OAAOqB,EAAexB,EAAQ4B,IAQhC,SAASC,EAAgB1B,GACvB,MAAMyB,EAAS1B,EAAkBC,GACjC,OAAOH,EAAQ4B,GAQjB,SAASE,EAAS3B,GAChB,GAAoB,kBAATA,EAAmB,CAC5B,GAAI,WAAW4B,KAAK5B,GAClB,OAAOwB,EAAgBxB,GAEzB,GAAoB,IAAhBA,EAAKnC,OACP,OAAOwD,EAAerB,EAAK6B,eAE7B,GAAoB,IAAhB7B,EAAKnC,OACP,OAAOmC,EAAK6B,cAGhB,GAAoB,kBAAT7B,EACT,OAAOwB,EAAgBxB,GAU3B,SAAS8B,EAAS9B,GAChB,GAAoB,kBAATA,EAAmB,CAC5B,GAAI,WAAW4B,KAAK5B,GAClB,OAAO0B,EAAgB1B,GAEzB,GAAoB,IAAhBA,EAAKnC,OACP,OAAOmC,EAAK6B,cAEd,GAAoB,IAAhB7B,EAAKnC,OACP,OAAOuD,EAAepB,EAAK6B,eAG/B,GAAoB,kBAAT7B,EACT,OAAO0B,EAAgB1B,GA9L3BP,EAAMsC,SAAQ,SAAUC,GACtB,MAAMC,EAAID,EACVrC,EAAOsC,EAAE,IAAMA,EAAE,GACjBrC,EAAOqC,EAAE,IAAMA,EAAE,GACjBpC,EAAQoC,EAAE,IAAMA,EAAE,GAClBnC,EAAgBmC,EAAE,IAAMA,EAAE,MA6E5B5E,EAAQ6E,eAAiB,SAAUC,GACjC,IAAKA,EAAWC,OACd,MAAM,IAAIjB,UAAU,6BAGtB,IAAKgB,EAAWE,UACd,MAAM,IAAIlB,UAAU,gCAGtBzB,EAAkByC,EAAWC,QAAUD,EAAWE,WAUpDhF,EAAQ+D,eAAiBA,EASzB/D,EAAQgE,eAAiBA,EASzBhE,EAAQiE,gBAAkBA,EAS1BjE,EAAQkE,gBAAkBA,EAU1BlE,EAAQmE,gBAAkBA,EAU1BnE,EAAQqE,gBAAkBA,EAuB1BrE,EAAQsE,SAAWA,EAuBnBtE,EAAQyE,SAAWA,EAQnBzE,EAAQiF,QAAU,SAAUtC,EAAMuC,EAAMC,EAAU,IAC1C,WAAYA,IAChBA,EAAQC,OAAS,YAEnB,IACE,MAAMC,EAAWhD,EAAkB6C,EAAKI,eAClC9B,EAAW6B,EAASZ,EAAS9B,IACnC,OAAOc,EAAa0B,EAAQC,OAAQ5B,GACpC,MAAO+B,GACP,SAUJvF,EAAQwF,SAAW,SAAUN,EAAMC,EAAU,IACrC,WAAYA,IAChBA,EAAQC,OAAS,YAEnB,MAAMjC,EAAad,EAAkB6C,EAAKI,eAC1C,YAAmB3D,IAAfwB,EAAiC,GAC9BD,EAAaC,GAAY,SAAUK,GACxC,OAAOC,EAAa0B,EAAQC,OAAQ5B,OASxCxD,EAAQyF,cAAgB,SAAUC,EAAMR,GACtC,MAAMS,EAAmBC,GAAWA,EAAON,cACrCO,EAAa,CAACC,EAAGC,IAAMJ,EAAgBG,KAAOH,EAAgBI,GAEpE,IACE,MAAMC,EAAY3D,EAAkB6C,EAAKI,eACzC,IAAK,MAAMW,KAAKD,EACd,GAAKnD,EAAemD,EAAWC,GAA/B,CAGA,GAA4B,kBAAjBD,EAAUC,IACfJ,EAAWG,EAAUC,GAAIP,GAC3B,OAAOO,EAGX,GAAIrC,MAAMC,QAAQmC,EAAUC,IAC1B,IAAK,MAAMC,KAAcF,EAAUC,GACjC,GAAIJ,EAAWK,EAAYR,GACzB,OAAOO,EAKf,OACA,MAAOV,GACP,SASJvF,EAAQmG,oBAAsB,SAAUT,EAAMR,GAC5C,MAAMS,EAAmBC,GAAW1F,EAAiB0F,EAAON,eACtDO,EAAa,CAACC,EAAGC,IAAMJ,EAAgBG,KAAOH,EAAgBI,GAEpE,IACE,MAAMC,EAAY3D,EAAkB6C,EAAKI,eACzC,IAAK,MAAMW,KAAKD,EACd,GAAKnD,EAAemD,EAAWC,GAA/B,CAGA,GAA4B,kBAAjBD,EAAUC,IACfJ,EAAWG,EAAUC,GAAIP,GAC3B,OAAOO,EAGX,GAAIrC,MAAMC,QAAQmC,EAAUC,IAC1B,IAAK,MAAMC,KAAcF,EAAUC,GACjC,GAAIJ,EAAWK,EAAYR,GACzB,OAAOO,EAKf,OACA,MAAOV,GACP,SAOJvF,EAAQoG,eAAiB,WACvB,OAAO9D,GAQTtC,EAAQqG,cAAgB,SAAUX,EAAMR,GACtC,MAAM5C,EAAStC,EAAQyF,cAAcC,EAAMR,GAC3C,OAAI5C,EACKtC,EAAQsE,SAAShC,QAExB,GASJtC,EAAQsG,oBAAsB,SAAUZ,EAAMR,GAC5C,MAAM5C,EAAStC,EAAQmG,oBAAoBT,EAAMR,GACjD,OAAI5C,EACKtC,EAAQsE,SAAShC,QAExB,GAOJtC,EAAQuG,eAAiB,WACvB,OAAOhE,GAMTvC,EAAQwG,gBAAkB,WACxB,OAAOhE,GAMTxC,EAAQyG,MAAQ,WACd,OAAOzD,OAAOK,KAAKhB,IAOrBrC,EAAQ0G,QAAU,SAAU/D,GAC1B,IAAKA,EACH,OAAO,EAGT,MAAMgE,EAAUhE,EAAKiE,WAAWpC,cAChC,OACE3B,EAAeN,EAAQoE,IACvB9D,EAAeP,EAAQqE,IACvB9D,EAAeL,EAASmE,K,0m5DC9X5B,IAAIE,EAAgC,EAAQ,QACxCC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAY,EAAQ,QACpBC,EAAyB,EAAQ,QACjCC,EAAqB,EAAQ,QAC7BC,EAAkB,EAAQ,QAC1BC,EAAa,EAAQ,QAErBC,EAAMtG,KAAKsG,IACXC,EAAMvG,KAAKuG,IAEXC,EAAgB,SAAUC,GAC5B,YAAc7F,IAAP6F,EAAmBA,EAAK5E,OAAO4E,IAIxCX,EAA8B,UAAW,GAAG,SAAUY,EAASC,EAAeC,EAAiBC,GAC7F,IAAIC,EAA+CD,EAAOC,6CACtDC,EAAmBF,EAAOE,iBAC1BC,EAAoBF,EAA+C,IAAM,KAE7E,MAAO,CAGL,SAAiBG,EAAaC,GAC5B,IAAIC,EAAIjB,EAAuBkB,MAC3BC,OAA0BzG,GAAfqG,OAA2BrG,EAAYqG,EAAYP,GAClE,YAAoB9F,IAAbyG,EACHA,EAASxG,KAAKoG,EAAaE,EAAGD,GAC9BP,EAAc9F,KAAKgB,OAAOsF,GAAIF,EAAaC,IAIjD,SAAUI,EAAQJ,GAChB,IACIJ,GAAgDC,GACzB,kBAAjBG,IAA0E,IAA7CA,EAAaK,QAAQP,GAC1D,CACA,IAAIQ,EAAMZ,EAAgBD,EAAeW,EAAQF,KAAMF,GACvD,GAAIM,EAAIC,KAAM,OAAOD,EAAIE,MAG3B,IAAIC,EAAK5B,EAASuB,GACdM,EAAI/F,OAAOuF,MAEXS,EAA4C,oBAAjBX,EAC1BW,IAAmBX,EAAerF,OAAOqF,IAE9C,IAAIY,EAASH,EAAGG,OAChB,GAAIA,EAAQ,CACV,IAAIC,EAAcJ,EAAGK,QACrBL,EAAGM,UAAY,EAEjB,IAAIC,EAAU,GACd,MAAO,EAAM,CACX,IAAIC,EAAS9B,EAAWsB,EAAIC,GAC5B,GAAe,OAAXO,EAAiB,MAGrB,GADAD,EAAQE,KAAKD,IACRL,EAAQ,MAEb,IAAIO,EAAWxG,OAAOsG,EAAO,IACZ,KAAbE,IAAiBV,EAAGM,UAAY9B,EAAmByB,EAAG5B,EAAS2B,EAAGM,WAAYF,IAKpF,IAFA,IAAIO,EAAoB,GACpBC,EAAqB,EAChB/I,EAAI,EAAGA,EAAI0I,EAAQzI,OAAQD,IAAK,CACvC2I,EAASD,EAAQ1I,GAUjB,IARA,IAAIY,EAAUyB,OAAOsG,EAAO,IACxB9H,EAAWiG,EAAIC,EAAIN,EAAUkC,EAAOK,OAAQZ,EAAEnI,QAAS,GACvDa,EAAW,GAMNZ,EAAI,EAAGA,EAAIyI,EAAO1I,OAAQC,IAAKY,EAAS8H,KAAK5B,EAAc2B,EAAOzI,KAC3E,IAAIa,EAAgB4H,EAAOM,OAC3B,GAAIZ,EAAmB,CACrB,IAAIa,EAAe,CAACtI,GAASuI,OAAOrI,EAAUD,EAAUuH,QAClChH,IAAlBL,GAA6BmI,EAAaN,KAAK7H,GACnD,IAAIC,EAAcqB,OAAOqF,EAAa0B,WAAMhI,EAAW8H,SAEvDlI,EAAc4F,EAAgBhG,EAASwH,EAAGvH,EAAUC,EAAUC,EAAe2G,GAE3E7G,GAAYkI,IACdD,GAAqBV,EAAE1G,MAAMqH,EAAoBlI,GAAYG,EAC7D+H,EAAqBlI,EAAWD,EAAQX,QAG5C,OAAO6I,EAAoBV,EAAE1G,MAAMqH,S,y3kBC7FzCpI,EAAOlB,QAAU,iD,uBCDjB,IAAIiH,EAAyB,EAAQ,QACjC2C,EAAc,EAAQ,QAEtBC,EAAa,IAAMD,EAAc,IACjCE,EAAQC,OAAO,IAAMF,EAAaA,EAAa,KAC/CG,EAAQD,OAAOF,EAAaA,EAAa,MAGzCI,EAAe,SAAUC,GAC3B,OAAO,SAAUC,GACf,IAAIvE,EAAShD,OAAOqE,EAAuBkD,IAG3C,OAFW,EAAPD,IAAUtE,EAASA,EAAOjF,QAAQmJ,EAAO,KAClC,EAAPI,IAAUtE,EAASA,EAAOjF,QAAQqJ,EAAO,KACtCpE,IAIX1E,EAAOlB,QAAU,CAGfoK,MAAOH,EAAa,GAGpBI,IAAKJ,EAAa,GAGlBK,KAAML,EAAa,K,gsSC1BrB,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICmCA,WACE,IAAIM,EAAOC,EAASC,EAAeC,EAAIC,EAASC,EAASC,EAAOC,EAAeC,EAAgBC,EAAuBC,EAAQC,EAAgBC,EAAKC,EAAOC,EAAQC,EAAOC,EAASC,EAAQC,EAAMC,EAAQC,EAAUC,EAAkBC,EAAKC,EAASC,EAAQC,EAAOC,EAAMnL,EAAOoL,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,EAAaC,EAAiBC,EAAiBC,EAAkBC,EAAiBC,EAAiBC,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,EAAOC,EAAKC,EAAa7L,EAAG4F,GAAKkG,GAAUC,GAAQC,GAASC,GAASC,GAAKC,GAAUC,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,GAAeC,GAASC,GAAiBC,GAASC,GAASC,GAAWC,GAAOC,GAAQC,GAAKC,GAAMC,GAAiBrL,GAAMsL,GAAQC,GAAQC,GAASC,GACvwBlN,GAAQ,GAAGA,MAEbyB,GAAO,WAML,IAAI0L,EAAaC,EAAK3J,EAAM4J,EAAGC,EAG/B,IAFAH,EAAc,GACdG,EAAM,kEAAkEC,MAAM,KACzEF,EAAI,EAAGD,EAAME,EAAI/O,OAAQ8O,EAAID,EAAKC,IACrC5J,EAAO6J,EAAID,GACXF,EAAY,WAAa1J,EAAO,KAAOA,EAAKJ,cAE9C,OAAO,SAASmK,GACd,IAAIC,EAEJ,OADAA,EAAU1M,OAAOC,UAAU2D,SAAShF,KAAK6N,GAClCL,EAAYM,IAAY,UAhB5B,GAoBPtC,EAAQ,SAASuC,EAAGrI,EAAKD,GAavB,OAZW,MAAPC,IACFA,EAAM,GAEG,MAAPD,IACFA,EAAM,GAEJsI,EAAIrI,IACNqI,EAAIrI,GAEFqI,EAAItI,IACNsI,EAAItI,GAECsI,GAGTX,GAAS,SAASY,GAChB,OAAIA,EAAKpP,QAAU,EACVoD,MAAMX,UAAUhB,MAAML,KAAKgO,GAE3BA,EAAK,IAIhBjE,EAAW,SAASkE,GAClB,IAAItP,EAAG+O,EAGP,IAFAO,EAAIC,UAAW,EACfD,EAAIE,WAAaF,EAAI5N,MAAM,GACtB1B,EAAI+O,EAAI,EAAGA,EAAI,EAAG/O,IAAM+O,EACvB/O,EAAI,IACFsP,EAAItP,GAAK,GAAKsP,EAAItP,GAAK,OACzBsP,EAAIC,UAAW,GAEbD,EAAItP,GAAK,IACXsP,EAAItP,GAAK,GAEPsP,EAAItP,GAAK,MACXsP,EAAItP,GAAK,MAEI,IAANA,IACLsP,EAAItP,GAAK,IACXsP,EAAItP,GAAK,GAEPsP,EAAItP,GAAK,IACXsP,EAAItP,GAAK,IAOf,OAHKsP,EAAIC,iBACAD,EAAIE,WAENF,GAGTnF,EAAK3J,KAAK2J,GAAIiE,GAAQ5N,KAAK4N,MAAO9C,EAAM9K,KAAK8K,IAAK/K,EAAQC,KAAKD,MAAO6M,GAAM5M,KAAK4M,IAAKN,EAAMtM,KAAKsM,IAAKwB,GAAM9N,KAAK8N,IAAKC,GAAO/N,KAAK+N,KAAM1D,EAAQrK,KAAKqK,MAAO/D,GAAMtG,KAAKsG,IAAK8D,EAAMpK,KAAKoK,IAEvLN,EAAa,EAALH,EAERC,EAAUD,EAAK,EAEfF,EAAUE,EAAK,IAEfE,EAAU,IAAMF,EAEhBgB,EAAS,WACP,OAAIsE,UAAU,aAAczF,EACnByF,UAAU,GAEZ,SAAUC,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOyF,WAAW,gBAGvBtE,EAAO,WAAaA,EAEpBR,EAAiB,GAEgC,OAAXhK,GAAuC,MAAlBA,EAAOlB,UAChEkB,EAAOlB,QAAU0L,GAIjB,EAAO,GAAI,EAAF,WACP,OAAOA,GACR,qCAMHA,EAAO0E,QAAU,QAEjBnF,EAAS,GAETF,EAAiB,GAEjBC,GAAwB,EAExBT,EAAQ,WACN,SAASA,IACP,IAAI8F,EAAKT,EAAMU,EAAKjB,EAAKkB,EAAMC,EAAIC,EAAMnB,EAAGoB,EAG5C,IAFAF,EAAKrI,KACLyH,EAAO,GACFN,EAAI,EAAGD,EAAMW,UAAUxP,OAAQ8O,EAAID,EAAKC,IAC3Ce,EAAML,UAAUV,GACL,MAAPe,GACFT,EAAKzG,KAAKkH,GAMd,GAHIT,EAAKpP,OAAS,IAChBiQ,EAAOb,EAAKA,EAAKpP,OAAS,IAER,MAAhByK,EAAOwF,GACTD,EAAGG,KAAOhF,EAASV,EAAOwF,GAAMzB,GAAOY,EAAK3N,MAAM,GAAI,UACjD,CAOL,IANK+I,IACHD,EAAiBA,EAAe6F,MAAK,SAAS9K,EAAGC,GAC/C,OAAOA,EAAEE,EAAIH,EAAEG,KAEjB+E,GAAwB,GAErB0F,EAAI,EAAGH,EAAOxF,EAAevK,OAAQkQ,EAAIH,EAAMG,IAGlD,GAFAJ,EAAMvF,EAAe2F,GACrBD,EAAOH,EAAI/L,KAAKoF,MAAM2G,EAAKV,GACvBa,EACF,MAGAA,IACFD,EAAGG,KAAOhF,EAASV,EAAOwF,GAAM9G,MAAMsB,EAAQ2E,KAGnC,MAAXY,EAAGG,MACLE,QAAQC,KAAK,mBAAqBlB,GAErB,MAAXY,EAAGG,OACLH,EAAGG,KAAO,CAAC,EAAG,EAAG,IAEI,IAAnBH,EAAGG,KAAKnQ,QACVgQ,EAAGG,KAAKxH,KAAK,GAQjB,OAJAoB,EAAMtH,UAAU2D,SAAW,WACzB,OAAOuB,KAAK4I,OAGPxG,EAjDD,GAqDRmB,EAAOT,OAASA;;;;;;;;;;;;;;;;;;;AAsBhBS,EAAOF,OAASA,EAAS,CACvBwF,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChGC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChGC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACjGC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClGC,SAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACzHC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrHC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACpFC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACtFC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/FC,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChIC,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACrFC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClIC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvFC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAGpG,WACE,IAAIC,EAAKnK,EAET,IAAKmK,KADLnK,EAAU,GACEuC,EACVvC,EAAQE,KAAKqC,EAAO4H,EAAI9N,eAAiBkG,EAAO4H,IAJpD,GAgBAnE,GAAS,CACPoE,UAAW,UACXC,aAAc,UACdC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,MAAO,UACPC,eAAgB,UAChBC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,UAAW,UACXC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,MAAO,UACPC,WAAY,UACZC,eAAgB,UAChBC,SAAU,UACVC,QAAS,UACTC,KAAM,UACNC,SAAU,UACVC,SAAU,UACVC,cAAe,UACfC,SAAU,UACVC,UAAW,UACXC,SAAU,UACVC,UAAW,UACXC,YAAa,UACbC,eAAgB,UAChBC,WAAY,UACZC,WAAY,UACZC,QAAS,UACTC,WAAY,UACZC,aAAc,UACdC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,SAAU,UACVC,YAAa,UACbC,QAAS,UACTC,QAAS,UACTC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,WAAY,UACZC,KAAM,UACNC,UAAW,UACXC,KAAM,UACNC,MAAO,UACPC,YAAa,UACbC,KAAM,UACNC,SAAU,UACVC,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,SAAU,UACVC,cAAe,UACfC,UAAW,UACXC,aAAc,UACdC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,eAAgB,UAChBC,qBAAsB,UACtBC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,cAAe,UACfC,aAAc,UACdC,eAAgB,UAChBC,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,KAAM,UACNC,UAAW,UACXC,MAAO,UACPC,QAAS,UACTC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,iBAAkB,UAClBC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,eAAgB,UAChBC,gBAAiB,UACjBC,kBAAmB,UACnBC,gBAAiB,UACjBC,gBAAiB,UACjBC,aAAc,UACdC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,YAAa,UACbC,KAAM,UACNC,QAAS,UACTC,MAAO,UACPC,UAAW,UACXC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,cAAe,UACfC,UAAW,UACXC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,UAAW,UACXC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,WAAY,UACZC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,cAAe,UACfC,IAAK,UACLC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,OAAQ,UACRC,WAAY,UACZC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,KAAM,UACNC,YAAa,UACbC,UAAW,UACXC,IAAK,UACLC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,OAAQ,UACRC,YAAa,WAGfrR,EAAOsR,OAAkB/N,GAEzBlC,EAAU,WACR,IAAIjH,EAAG8J,EAAM7J,EAAGkX,EAAGC,EAAGC,EAAGxN,EAAGyN,EAAGC,EAY/B,OAXAzN,EAAOZ,GAAOgB,WACdkN,EAAItN,EAAK,GAAI9J,EAAI8J,EAAK,GAAI7J,EAAI6J,EAAK,GACnCwN,GAAKF,EAAI,IAAM,IACfvN,EAAI2N,MAAMxX,GAAKsX,EAAIA,EAAItX,EAAI,IAC3BuX,EAAIC,MAAMvX,GAAKqX,EAAIA,EAAIrX,EAAI,IAC3BqX,EAAI3S,EAAc8S,GAAKvQ,EAAQoQ,GAC/BzN,EAAIlF,EAAc+S,GAAKxQ,EAAQ2C,GAC/B0N,EAAI5S,EAAcgT,GAAKzQ,EAAQqQ,GAC/BF,EAAIhO,GAAQ,UAAYQ,EAAI,UAAYyN,EAAI,SAAYC,GACxDJ,EAAI9N,IAAS,QAAYQ,EAAI,UAAYyN,EAAI,QAAYC,GACzDtX,EAAIoJ,GAAQ,SAAYQ,EAAI,SAAYyN,EAAI,UAAYC,GACjD,CAACF,EAAGF,EAAGlX,EAAG6J,EAAKpP,OAAS,EAAIoP,EAAK,GAAK,IAG/CT,GAAU,SAASgO,GACjB,OAAO,KAAOA,GAAK,OAAU,MAAQA,EAAI,MAAQxP,GAAIwP,EAAG,EAAI,KAAO,OAGrEnQ,EAAU,SAAS0Q,GACjB,OAAIA,EAAIjT,EAAckT,GACbD,EAAIA,EAAIA,EAERjT,EAAcmT,IAAMF,EAAIjT,EAAcoT,KAIjDpT,EAAgB,CACdqT,GAAI,GACJN,GAAI,OACJD,GAAI,EACJE,GAAI,QACJI,GAAI,WACJF,GAAI,WACJC,GAAI,UACJG,GAAI,YAGN5P,GAAU,WACR,IAAIpI,EAAGkX,EAAGE,EAAG5N,EAAKyO,EAAMrO,EAAGyN,EAAGC,EAG9B,OAFA9N,EAAMP,GAAOgB,WAAYmN,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,GACzDyO,EAAOxP,GAAQ2O,EAAGF,EAAGlX,GAAI4J,EAAIqO,EAAK,GAAIZ,EAAIY,EAAK,GAAIX,EAAIW,EAAK,GACrD,CAAC,IAAMZ,EAAI,GAAI,KAAOzN,EAAIyN,GAAI,KAAOA,EAAIC,KAGlD5O,GAAU,SAAS0O,GACjB,OAAKA,GAAK,MAAQ,OACTA,EAAI,MAEJxP,IAAKwP,EAAI,MAAS,MAAO,MAIpCjO,GAAU,SAASwO,GACjB,OAAIA,EAAIjT,EAAcsT,GACbpQ,GAAI+P,EAAG,EAAI,GAEXA,EAAIjT,EAAcmT,GAAKnT,EAAcoT,IAIhDrP,GAAU,WACR,IAAIzI,EAAGkX,EAAGE,EAAG5N,EAAKI,EAAGyN,EAAGC,EAQxB,OAPA9N,EAAMP,GAAOgB,WAAYmN,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,GACzD4N,EAAI1O,GAAQ0O,GACZF,EAAIxO,GAAQwO,GACZlX,EAAI0I,GAAQ1I,GACZ4J,EAAIT,IAAS,SAAYiO,EAAI,SAAYF,EAAI,SAAYlX,GAAK0E,EAAc+S,IAC5EJ,EAAIlO,IAAS,SAAYiO,EAAI,SAAYF,EAAI,QAAYlX,GAAK0E,EAAc8S,IAC5EF,EAAInO,IAAS,SAAYiO,EAAI,QAAYF,EAAI,SAAYlX,GAAK0E,EAAcgT,IACrE,CAAC9N,EAAGyN,EAAGC,IAGhB3R,EAAOuS,IAAM,WACX,OAAO,SAAUhO,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOtI,GAAML,KAAKoO,WAAWtG,OAAO,CAAC,SAAS,gBAGnDuB,EAAOgT,IAAMlR,EAEbxC,EAAMtH,UAAUgb,IAAM,WACpB,OAAO9P,GAAQhG,KAAKwI,OAGtBtF,EAAS,SAAS2R,GAChB,IAAIkB,EAAGC,EAAIC,EAAIxd,EAAGyd,EAAMC,EAAMC,EAAMC,EAAMjP,EAAKyO,EAAMS,EAuFrD,OAtFAzB,EAAS,WACP,IAAI3N,EAAKC,EAAGrG,EAEZ,IADAA,EAAU,GACLqG,EAAI,EAAGD,EAAM2N,EAAOxc,OAAQ8O,EAAID,EAAKC,IACxC1O,EAAIoc,EAAO1N,GACXrG,EAAQE,KAAKuC,EAAO9K,IAEtB,OAAOqI,EAPA,GASa,IAAlB+T,EAAOxc,QACT+O,EAAM,WACJ,IAAIF,EAAKC,EAAGrG,EAEZ,IADAA,EAAU,GACLqG,EAAI,EAAGD,EAAM2N,EAAOxc,OAAQ8O,EAAID,EAAKC,IACxC1O,EAAIoc,EAAO1N,GACXrG,EAAQE,KAAKvI,EAAEqd,OAEjB,OAAOhV,EAPH,GAQAoV,EAAO9O,EAAI,GAAI+O,EAAO/O,EAAI,GAChC2O,EAAI,SAASR,GACX,IAAInd,EAAG0d,EASP,OARAA,EAAM,WACJ,IAAI3O,EAAGrG,EAEP,IADAA,EAAU,GACL1I,EAAI+O,EAAI,EAAGA,GAAK,EAAG/O,IAAM+O,EAC5BrG,EAAQE,KAAKkV,EAAK9d,GAAKmd,GAAKY,EAAK/d,GAAK8d,EAAK9d,KAE7C,OAAO0I,EANH,GAQCyC,EAAOuS,IAAItU,MAAM+B,EAAQuS,KAEP,IAAlBjB,EAAOxc,QAChBwd,EAAO,WACL,IAAI3O,EAAKC,EAAGrG,EAEZ,IADAA,EAAU,GACLqG,EAAI,EAAGD,EAAM2N,EAAOxc,OAAQ8O,EAAID,EAAKC,IACxC1O,EAAIoc,EAAO1N,GACXrG,EAAQE,KAAKvI,EAAEqd,OAEjB,OAAOhV,EAPF,GAQDoV,EAAOL,EAAK,GAAIM,EAAON,EAAK,GAAIO,EAAOP,EAAK,GAClDE,EAAI,SAASR,GACX,IAAInd,EAAG0d,EASP,OARAA,EAAM,WACJ,IAAI3O,EAAGrG,EAEP,IADAA,EAAU,GACL1I,EAAI+O,EAAI,EAAGA,GAAK,EAAG/O,IAAM+O,EAC5BrG,EAAQE,MAAM,EAAIuU,IAAM,EAAIA,GAAKW,EAAK9d,GAAK,GAAK,EAAImd,GAAKA,EAAIY,EAAK/d,GAAKmd,EAAIA,EAAIa,EAAKhe,IAEtF,OAAO0I,EANH,GAQCyC,EAAOuS,IAAItU,MAAM+B,EAAQuS,KAEP,IAAlBjB,EAAOxc,QAChBie,EAAO,WACL,IAAIpP,EAAKC,EAAGrG,EAEZ,IADAA,EAAU,GACLqG,EAAI,EAAGD,EAAM2N,EAAOxc,OAAQ8O,EAAID,EAAKC,IACxC1O,EAAIoc,EAAO1N,GACXrG,EAAQE,KAAKvI,EAAEqd,OAEjB,OAAOhV,EAPF,GAQDoV,EAAOI,EAAK,GAAIH,EAAOG,EAAK,GAAIF,EAAOE,EAAK,GAAID,EAAOC,EAAK,GAClEP,EAAI,SAASR,GACX,IAAInd,EAAG0d,EASP,OARAA,EAAM,WACJ,IAAI3O,EAAGrG,EAEP,IADAA,EAAU,GACL1I,EAAI+O,EAAI,EAAGA,GAAK,EAAG/O,IAAM+O,EAC5BrG,EAAQE,MAAM,EAAIuU,IAAM,EAAIA,IAAM,EAAIA,GAAKW,EAAK9d,GAAK,GAAK,EAAImd,IAAM,EAAIA,GAAKA,EAAIY,EAAK/d,GAAK,GAAK,EAAImd,GAAKA,EAAIA,EAAIa,EAAKhe,GAAKmd,EAAIA,EAAIA,EAAIc,EAAKje,IAE9I,OAAO0I,EANH,GAQCyC,EAAOuS,IAAItU,MAAM+B,EAAQuS,KAEP,IAAlBjB,EAAOxc,SAChB2d,EAAK9S,EAAO2R,EAAO/a,MAAM,EAAG,IAC5Bmc,EAAK/S,EAAO2R,EAAO/a,MAAM,EAAG,IAC5Bic,EAAI,SAASR,GACX,OAAIA,EAAI,GACCS,EAAO,EAAJT,GAEHU,EAAe,GAAXV,EAAI,OAIdQ,GAGTxS,EAAOL,OAAS,SAAS2R,GACvB,IAAI7a,EAKJ,OAJAA,EAAIkJ,EAAO2R,GACX7a,EAAEuc,MAAQ,WACR,OAAOhT,EAAOgT,MAAMvc,IAEfA,GAGTuJ,EAAOiT,UAAY,SAASvU,EAAOwU,EAAWC,EAAKC,EAAOC,GACxD,IAAIC,EAAIC,EAAI9c,EAyFZ,OAxFa,MAATiI,IACFA,EAAQ,KAEO,MAAbwU,IACFA,GAAa,KAEJ,MAAPC,IACFA,EAAM,GAEK,MAATC,IACFA,EAAQ,GAEO,MAAbC,IACFA,EAAY,CAAC,EAAG,IAElBC,EAAK,EACmB,UAApBtb,GAAKqb,GACPE,EAAKF,EAAU,GAAKA,EAAU,IAE9BE,EAAK,EACLF,EAAY,CAACA,EAAWA,IAE1B5c,EAAI,SAAS+c,GACX,IAAIpZ,EAAGqZ,EAAKpZ,EAAGqZ,EAAOnC,EAAGoC,EAAGnC,EAAGC,EAAGmC,EAUlC,OATAxZ,EAAI+E,IAAUT,EAAQ,KAAO,IAAMwU,EAAYM,GAC/ChC,EAAIvP,GAAIoR,EAAU,GAAKE,EAAKC,EAAOJ,GACnCO,EAAW,IAAPL,EAAWH,EAAI,GAAKK,EAAQF,EAAKH,EACrCM,EAAME,EAAInC,GAAK,EAAIA,GAAK,EACxBkC,EAAQvT,EAAI/F,GACZwZ,EAAQzQ,GAAI/I,GACZqX,EAAID,EAAIiC,IAAQ,OAAUC,EAAQ,QAAUE,GAC5CrC,EAAIC,EAAIiC,IAAQ,OAAUC,EAAQ,OAAUE,GAC5CvZ,EAAImX,EAAIiC,GAAO,QAAWC,GACnB1T,EAAOC,EAAS,CAAK,IAAJwR,EAAa,IAAJF,EAAa,IAAJlX,EAAS,MAErD5D,EAAEiI,MAAQ,SAASxF,GACjB,OAAS,MAALA,EACKwF,GAETA,EAAQxF,EACDzC,IAETA,EAAEyc,UAAY,SAASzB,GACrB,OAAS,MAALA,EACKyB,GAETA,EAAYzB,EACLhb,IAETA,EAAE2c,MAAQ,SAAS7B,GACjB,OAAS,MAALA,EACK6B,GAETA,EAAQ7B,EACD9a,IAETA,EAAE0c,IAAM,SAASQ,GACf,OAAS,MAALA,EACKR,GAETA,EAAMQ,EACY,UAAd3b,GAAKmb,IACPG,EAAKH,EAAI,GAAKA,EAAI,GACP,IAAPG,IACFH,EAAMA,EAAI,KAGZG,EAAK,EAEA7c,IAETA,EAAE4c,UAAY,SAASM,GACrB,OAAS,MAALA,EACKN,GAEO,UAAZrb,GAAK2b,IACPN,EAAYM,EACZJ,EAAKI,EAAE,GAAKA,EAAE,KAEdN,EAAY,CAACM,EAAGA,GAChBJ,EAAK,GAEA9c,IAETA,EAAEuc,MAAQ,WACR,OAAOhT,EAAOgT,MAAMvc,IAEtBA,EAAE0c,IAAIA,GACC1c,GAGTuJ,EAAO6T,OAAS,WACd,IAAI5c,EAAM6c,EAAWlQ,EAGrB,IAFAkQ,EAAS,mBACT7c,EAAO,IACE2M,EAAI,EAAGA,EAAI,IAASA,EAC3B3M,GAAQ6c,EAAOxd,OAAOlB,EAAsB,GAAhBC,KAAKwe,WAEnC,OAAO,IAAIhV,EAAM5H,IAGnBuI,EAAiB,GAEjBsB,EAAc,SAASiT,EAAMC,EAAMvd,EAAGV,GACpC,IAAIke,EAAUtQ,EAAKC,EAAG/G,EAmBtB,IAlBS,MAALpG,IACFA,EAAI,IAEG,MAALV,IACFA,EAAI,OAQa,WAAfiC,GAAK+b,KACPA,EAAO/T,EAAO+T,IAEG,WAAf/b,GAAKgc,KACPA,EAAOhU,EAAOgU,IAEXpQ,EAAI,EAAGD,EAAMnE,EAAe1K,OAAQ8O,EAAID,EAAKC,IAEhD,GADAqQ,EAAWzU,EAAeoE,GACtB7N,IAAMke,EAAS,GAAI,CACrBpX,EAAMoX,EAAS,GAAGF,EAAMC,EAAMvd,EAAGV,GACjC,MAGJ,GAAW,MAAP8G,EACF,KAAM,cAAgB9G,EAAI,oBAE5B,OAAO8G,EAAIqX,MAAMH,EAAKG,QAAUzd,GAAKud,EAAKE,QAAUH,EAAKG,WAG3DlU,EAAOc,YAAcA,EAErBjC,EAAMtH,UAAUuJ,YAAc,SAASkT,EAAMvd,EAAGV,GAC9C,OAAO+K,EAAYrE,KAAMuX,EAAMvd,EAAGV,IAGpCiK,EAAOmU,IAAMrT,EAEbjC,EAAMtH,UAAU4c,IAAMtV,EAAMtH,UAAUuJ,YAEtCvB,EAAO4E,IAAM,WACX,IAAIiQ,EAAGvQ,EAAKtG,EAAS8W,EAGrB,IAAKD,KAFLvQ,EAAMP,GAAOgB,WACb/G,EAAU,GACAsG,EACRwQ,EAAIxQ,EAAIuQ,GACR7W,EAAQE,KAAK4W,GAEf,OAAO9W,GAGTyC,EAAOmE,IAAM,WACX,OAAO,SAAUI,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOtI,GAAML,KAAKoO,WAAWtG,OAAO,CAAC,SAAS,gBAGnDa,EAAMtH,UAAU4M,IAAM,SAASlB,GAI7B,OAHa,MAATA,IACFA,GAAQ,GAENA,EACKxG,KAAKwI,KAAKqP,IAAIjf,KAAK4N,OAAO1M,MAAM,EAAG,GAEnCkG,KAAKwI,KAAK1O,MAAM,EAAG,IAI9BsI,EAAMtH,UAAUgd,KAAO,SAAStR,GAI9B,OAHa,MAATA,IACFA,GAAQ,GAELA,EAGE,CAAC5N,KAAK4N,MAAMxG,KAAKwI,KAAK,IAAK5P,KAAK4N,MAAMxG,KAAKwI,KAAK,IAAK5P,KAAK4N,MAAMxG,KAAKwI,KAAK,IAAKxI,KAAKwI,KAAK,IAFvFxI,KAAKwI,KAAK1O,MAAM,IAK3B8I,EAAe5B,KAAK,CAClBlD,EAAG,EACH1B,KAAM,SAASrC,GACb,IAAI4D,EAEJ,OADAA,EAAIkJ,GAAOgB,WACK,UAAZtM,GAAKoC,IAA+B,IAAbA,EAAEtF,QAGZ,IAAbsF,EAAEtF,QAA+B,WAAfkD,GAAKoC,EAAE,KAAoBA,EAAE,IAAM,GAAKA,EAAE,IAAM,EAF7D,WAET,KAMJmF,EAAOiV,KAAOjV,EAAO4E,IAErBlD,EAAmB,SAAS8S,EAAMC,EAAMvd,EAAGV,GACzC,IAAI0e,EAAMC,EAGV,OAFAD,EAAOV,EAAK9O,KACZyP,EAAOV,EAAK/O,KACL,IAAIpG,EAAMuE,GAAKnB,GAAIwS,EAAK,GAAI,IAAM,EAAIhe,GAAKwL,GAAIyS,EAAK,GAAI,GAAKje,GAAI2M,GAAKnB,GAAIwS,EAAK,GAAI,IAAM,EAAIhe,GAAKwL,GAAIyS,EAAK,GAAI,GAAKje,GAAI2M,GAAKnB,GAAIwS,EAAK,GAAI,IAAM,EAAIhe,GAAKwL,GAAIyS,EAAK,GAAI,GAAKje,GAAIV,IAGxLqJ,EAAgB,SAASkS,GACvB,IAAIqD,EAAKle,EAAGkN,EAAKC,EAAGO,EAAKyQ,EAGzB,IAFAne,EAAI,EAAI6a,EAAOxc,OACf8f,EAAM,CAAC,EAAG,EAAG,EAAG,GACXhR,EAAI,EAAGD,EAAM2N,EAAOxc,OAAQ8O,EAAID,EAAKC,IACxC+Q,EAAMrD,EAAO1N,GACbO,EAAMwQ,EAAI1P,KACV2P,EAAI,IAAM3S,GAAIkC,EAAI,GAAI,GAAK1N,EAC3Bme,EAAI,IAAM3S,GAAIkC,EAAI,GAAI,GAAK1N,EAC3Bme,EAAI,IAAM3S,GAAIkC,EAAI,GAAI,GAAK1N,EAC3Bme,EAAI,IAAMzQ,EAAI,GAAK1N,EAQrB,OANAme,EAAI,GAAKxR,GAAKwR,EAAI,IAClBA,EAAI,GAAKxR,GAAKwR,EAAI,IAClBA,EAAI,GAAKxR,GAAKwR,EAAI,IACdA,EAAI,GAAK,IACXA,EAAI,GAAK,GAEJ,IAAI/V,EAAMoB,EAAS2U,KAG5BpV,EAAe/B,KAAK,CAAC,OAAQwD,IAE7BjB,EAAO6U,QAAU,SAASvD,EAAQvM,GAChC,IAAI+P,EAAGZ,EAAOhf,EAAG6f,EAAKC,EAAIC,EAAIC,EAAOrgB,EAAG2c,EAAG7N,EAAKC,EAAGgR,EAAKO,EASxD,GARY,MAARpQ,IACFA,EAAO,OAETyM,EAAIF,EAAOxc,OACXwc,EAASA,EAAOgD,KAAI,SAASpf,GAC3B,OAAO8K,EAAO9K,MAEhBggB,EAAQ5D,EAAO8D,OAAO,EAAG,GAAG,GACf,SAATrQ,EACF,OAAO3F,EAAckS,GAMvB,IAAKzc,KAJL+f,EAAMM,EAAMG,IAAItQ,GAChBgQ,EAAM,GACNC,EAAK,EACLC,EAAK,EACKL,EACRA,EAAI/f,GAAK+f,EAAI/f,IAAM,EACnBkgB,EAAItX,KAAKmU,MAAMgD,EAAI/f,IAAM,EAAI,GACN,MAAnBkQ,EAAKzO,OAAOzB,IAAe+c,MAAMgD,EAAI/f,MACvCigB,EAAIF,EAAI/f,GAAK,IAAMmK,EACnBgW,GAAM7U,EAAI2U,GACVG,GAAM9R,GAAI2R,IAId,IADAZ,EAAQgB,EAAMhB,QACTtQ,EAAI,EAAGD,EAAM2N,EAAOxc,OAAQ8O,EAAID,EAAKC,IAIxC,IAAK/O,KAHLK,EAAIoc,EAAO1N,GACXuR,EAAOjgB,EAAEmgB,IAAItQ,GACbmP,GAAShf,EAAEgf,QACDU,EACHhD,MAAMuD,EAAKtgB,MACdkgB,EAAIlgB,IAAM,EACa,MAAnBkQ,EAAKzO,OAAOzB,IACdigB,EAAIK,EAAKtgB,GAAK,IAAMmK,EACpBgW,GAAM7U,EAAI2U,GACVG,GAAM9R,GAAI2R,IAEVF,EAAI/f,IAAMsgB,EAAKtgB,IAKvB,IAAKA,KAAK+f,EACR,GAAuB,MAAnB7P,EAAKzO,OAAOzB,GAAY,CAC1BigB,EAAIpV,EAAMuV,EAAKF,EAAIlgB,GAAImgB,EAAKD,EAAIlgB,IAAMmK,EAAK,IAC3C,MAAO8V,EAAI,EACTA,GAAK,IAEP,MAAOA,GAAK,IACVA,GAAK,IAEPF,EAAI/f,GAAKigB,OAETF,EAAI/f,GAAK+f,EAAI/f,GAAKkgB,EAAIlgB,GAG1B,OAAOmL,EAAO4U,EAAK7P,GAAMmP,MAAMA,EAAQ1C,IAGzC/Q,EAAU,SAAS4E,GACjB,IAAIjL,EAAGC,EAAGkX,EAAGE,EAAGtN,EAAKmR,EACrB,GAAIjQ,EAAIlP,MAAM,uCAYZ,OAXmB,IAAfkP,EAAIvQ,QAA+B,IAAfuQ,EAAIvQ,SAC1BuQ,EAAMA,EAAIkQ,OAAO,IAEA,IAAflQ,EAAIvQ,SACNuQ,EAAMA,EAAIvB,MAAM,IAChBuB,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAEzDiQ,EAAIE,SAASnQ,EAAK,IAClBoM,EAAI6D,GAAK,GACT/D,EAAI+D,GAAK,EAAI,IACbjb,EAAQ,IAAJib,EACG,CAAC7D,EAAGF,EAAGlX,EAAG,GAEnB,GAAIgL,EAAIlP,MAAM,wBASZ,OARmB,IAAfkP,EAAIvQ,SACNuQ,EAAMA,EAAIkQ,OAAO,IAEnBD,EAAIE,SAASnQ,EAAK,IAClBoM,EAAI6D,GAAK,GAAK,IACd/D,EAAI+D,GAAK,GAAK,IACdjb,EAAIib,GAAK,EAAI,IACblb,EAAI6I,IAAW,IAAJqS,GAAY,IAAO,KAAO,IAC9B,CAAC7D,EAAGF,EAAGlX,EAAGD,GAEnB,GAAmB,MAAdmF,EAAOkW,MAAiBtR,EAAM5E,EAAOkW,IAAIpQ,IAC5C,OAAOlB,EAET,KAAM,kBAAoBkB,GAG5BhD,GAAU,SAASqT,EAAU3Q,GAC3B,IAAI3K,EAAGC,EAAGkX,EAAGoE,EAAKlE,EAAGzc,EAAKsgB,EAgB1B,OAfY,MAARvQ,IACFA,EAAO,QAET0M,EAAIiE,EAAS,GAAInE,EAAImE,EAAS,GAAIrb,EAAIqb,EAAS,GAAItb,EAAIsb,EAAS,GACnD,SAAT3Q,IACFA,EAAO3K,EAAI,EAAI,OAAS,OAE1BqX,EAAIpc,KAAK4N,MAAMwO,GACfF,EAAIlc,KAAK4N,MAAMsO,GACflX,EAAIhF,KAAK4N,MAAM5I,GACfib,EAAI7D,GAAK,GAAKF,GAAK,EAAIlX,EACvBrF,EAAM,SAAWsgB,EAAEpa,SAAS,IAC5BlG,EAAMA,EAAIugB,OAAOvgB,EAAIF,OAAS,GAC9B6gB,EAAM,IAAM1S,GAAU,IAAJ7I,GAASc,SAAS,IACpCya,EAAMA,EAAIJ,OAAOI,EAAI7gB,OAAS,GACvB,IAAM,WACX,OAAQiQ,EAAKnL,eACX,IAAK,OACH,OAAO5E,EAAM2gB,EACf,IAAK,OACH,OAAOA,EAAM3gB,EACf,QACE,OAAOA,GAPA,IAYfuK,EAAO8F,IAAM,SAASsO,GACpB,OAAOlT,EAAQkT,IAGjB3T,EAAOqF,IAAM,WACX,OAAO,SAAUd,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOtI,GAAML,KAAKoO,WAAWtG,OAAO,CAAC,SAAS,gBAGnDa,EAAMtH,UAAU8N,IAAM,SAASN,GAI7B,OAHY,MAARA,IACFA,EAAO,QAEF1C,GAAQ5F,KAAKwI,KAAMF,IAG5B1F,EAAe5B,KAAK,CAClBlD,EAAG,EACH1B,KAAM,SAASrC,GACb,GAAyB,IAArB8N,UAAUxP,QAA4B,WAAZkD,GAAKxB,GACjC,MAAO,SAKboK,EAAU,WACR,IAAIsD,EAAM7J,EAAGnF,EAAGqc,EAAGoC,EAAG9e,EAAG2c,EAAG5N,EAAG6N,EAAG5N,EAAK3K,EAAG+Y,EAAIC,EAAIG,EAGlD,GAFAnO,EAAOZ,GAAOgB,WACdqP,EAAIzP,EAAK,GAAIhL,EAAIgL,EAAK,GAAIsN,EAAItN,EAAK,GACzB,IAANhL,EACFuY,EAAIF,EAAIlX,EAAQ,IAAJmX,MACP,CASL,IARAa,EAAK,CAAC,EAAG,EAAG,GACZnd,EAAI,CAAC,EAAG,EAAG,GACXgd,EAAKV,EAAI,GAAMA,GAAK,EAAItY,GAAKsY,EAAItY,EAAIsY,EAAItY,EACzC+Y,EAAK,EAAIT,EAAIU,EACbyB,GAAK,IACLtB,EAAG,GAAKsB,EAAI,EAAI,EAChBtB,EAAG,GAAKsB,EACRtB,EAAG,GAAKsB,EAAI,EAAI,EACX9e,EAAI+O,EAAI,EAAGA,GAAK,EAAG/O,IAAM+O,EACxByO,EAAGxd,GAAK,IACVwd,EAAGxd,IAAM,GAEPwd,EAAGxd,GAAK,IACVwd,EAAGxd,IAAM,GAEP,EAAIwd,EAAGxd,GAAK,EACdK,EAAEL,GAAKod,EAAiB,GAAXC,EAAKD,GAAUI,EAAGxd,GACtB,EAAIwd,EAAGxd,GAAK,EACrBK,EAAEL,GAAKqd,EACE,EAAIG,EAAGxd,GAAK,EACrBK,EAAEL,GAAKod,GAAMC,EAAKD,IAAQ,EAAI,EAAKI,EAAGxd,IAAM,EAE5CK,EAAEL,GAAKod,EAGXpO,EAAM,CAACZ,GAAa,IAAP/N,EAAE,IAAW+N,GAAa,IAAP/N,EAAE,IAAW+N,GAAa,IAAP/N,EAAE,KAAYuc,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,GAEnG,OAAIK,EAAKpP,OAAS,EACT,CAAC2c,EAAGF,EAAGlX,EAAG6J,EAAK,IAEf,CAACuN,EAAGF,EAAGlX,IAIlBkI,GAAU,SAASkP,EAAGF,EAAGlX,GACvB,IAAIsZ,EAAGnC,EAAG5V,EAAKiI,EAAK3K,EA2BpB,YA1BU,IAANuY,GAAgBA,EAAE3c,QAAU,IAC9B+O,EAAM4N,EAAGA,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,IAE3C4N,GAAK,IACLF,GAAK,IACLlX,GAAK,IACLuB,EAAMvG,KAAKuG,IAAI6V,EAAGF,EAAGlX,GACrBsB,GAAMtG,KAAKsG,IAAI8V,EAAGF,EAAGlX,GACrBmX,GAAK7V,GAAMC,GAAO,EACdD,KAAQC,GACV1C,EAAI,EACJya,EAAIiC,OAAOC,KAEX3c,EAAIsY,EAAI,IAAO7V,GAAMC,IAAQD,GAAMC,IAAQD,GAAMC,IAAQ,EAAID,GAAMC,GAEjE6V,IAAM9V,GACRgY,GAAKpC,EAAIlX,IAAMsB,GAAMC,GACZ2V,IAAM5V,GACfgY,EAAI,GAAKtZ,EAAIoX,IAAM9V,GAAMC,GAChBvB,IAAMsB,KACfgY,EAAI,GAAKlC,EAAIF,IAAM5V,GAAMC,IAE3B+X,GAAK,GACDA,EAAI,IACNA,GAAK,KAEA,CAACA,EAAGza,EAAGsY,IAGhBxR,EAAO8V,IAAM,WACX,OAAO,SAAUvR,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOtI,GAAML,KAAKoO,WAAWtG,OAAO,CAAC,SAAS,gBAGnDuB,EAAOuW,IAAMlV,EAEb/B,EAAMtH,UAAUue,IAAM,WACpB,OAAOvT,GAAQ9F,KAAKwI,OAGtBpE,EAAU,WACR,IAAIqD,EAAM7J,EAAG5D,EAAG8a,EAAGoC,EAAG9e,EAAG0F,EAAGwb,EAAGtE,EAAG5N,EAAKyO,EAAMS,EAAMiD,EAAMC,EAAMC,EAAMhd,EAAG8Y,EAAGqC,EAI3E,GAHAnQ,EAAOZ,GAAOgB,WACdqP,EAAIzP,EAAK,GAAIhL,EAAIgL,EAAK,GAAImQ,EAAInQ,EAAK,GACnCmQ,GAAK,IACK,IAANnb,EACFuY,EAAIF,EAAIlX,EAAIga,OAiBZ,OAfU,MAANV,IACFA,EAAI,GAEFA,EAAI,MACNA,GAAK,KAEHA,EAAI,IACNA,GAAK,KAEPA,GAAK,GACL9e,EAAIO,EAAMue,GACVld,EAAIkd,EAAI9e,EACR0F,EAAI8Z,GAAK,EAAInb,GACb6c,EAAI1B,GAAK,EAAInb,EAAIzC,GACjBub,EAAIqC,GAAK,EAAInb,GAAK,EAAIzC,IACd5B,GACN,KAAK,EACHgP,EAAM,CAACwQ,EAAGrC,EAAGzX,GAAIkX,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,GACjD,MACF,KAAK,EACHyO,EAAO,CAACyD,EAAG1B,EAAG9Z,GAAIkX,EAAIa,EAAK,GAAIf,EAAIe,EAAK,GAAIjY,EAAIiY,EAAK,GACrD,MACF,KAAK,EACHS,EAAO,CAACxY,EAAG8Z,EAAGrC,GAAIP,EAAIsB,EAAK,GAAIxB,EAAIwB,EAAK,GAAI1Y,EAAI0Y,EAAK,GACrD,MACF,KAAK,EACHiD,EAAO,CAACzb,EAAGwb,EAAG1B,GAAI5C,EAAIuE,EAAK,GAAIzE,EAAIyE,EAAK,GAAI3b,EAAI2b,EAAK,GACrD,MACF,KAAK,EACHC,EAAO,CAACjE,EAAGzX,EAAG8Z,GAAI5C,EAAIwE,EAAK,GAAI1E,EAAI0E,EAAK,GAAI5b,EAAI4b,EAAK,GACrD,MACF,KAAK,EACHC,EAAO,CAAC7B,EAAG9Z,EAAGwb,GAAItE,EAAIyE,EAAK,GAAI3E,EAAI2E,EAAK,GAAI7b,EAAI6b,EAAK,GAG3D,MAAO,CAACzE,EAAGF,EAAGlX,EAAG6J,EAAKpP,OAAS,EAAIoP,EAAK,GAAK,IAG/C1B,GAAU,WACR,IAAInI,EAAG8b,EAAO5E,EAAGoC,EAAG/X,EAAK6V,EAAG5N,EAAK3K,EAAGmb,EAyBpC,OAxBAxQ,EAAMP,GAAOgB,WAAYmN,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,GACzDjI,EAAMvG,KAAKuG,IAAI6V,EAAGF,EAAGlX,GACrBsB,GAAMtG,KAAKsG,IAAI8V,EAAGF,EAAGlX,GACrB8b,EAAQxa,GAAMC,EACdyY,EAAI1Y,GAAM,IACE,IAARA,IACFgY,EAAIiC,OAAOC,IACX3c,EAAI,IAEJA,EAAIid,EAAQxa,GACR8V,IAAM9V,KACRgY,GAAKpC,EAAIlX,GAAK8b,GAEZ5E,IAAM5V,KACRgY,EAAI,GAAKtZ,EAAIoX,GAAK0E,GAEhB9b,IAAMsB,KACRgY,EAAI,GAAKlC,EAAIF,GAAK4E,GAEpBxC,GAAK,GACDA,EAAI,IACNA,GAAK,MAGF,CAACA,EAAGza,EAAGmb,IAGhBrU,EAAOoW,IAAM,WACX,OAAO,SAAU7R,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOtI,GAAML,KAAKoO,WAAWtG,OAAO,CAAC,SAAS,gBAGnDuB,EAAO6W,IAAMvV,EAEbhC,EAAMtH,UAAU6e,IAAM,WACpB,OAAO5T,GAAQ/F,KAAKwI,OAGtBlD,GAAU,SAASsU,GACjB,IAAIhc,EAAGkX,EAAGE,EACV,MAAkB,WAAdzZ,GAAKqe,IAAqBA,GAAO,GAAKA,GAAO,UAC/C5E,EAAI4E,GAAO,GACX9E,EAAK8E,GAAO,EAAK,IACjBhc,EAAU,IAANgc,EACG,CAAC5E,EAAGF,EAAGlX,EAAG,KAEnB8K,QAAQC,KAAK,sBAAwBiR,GAC9B,CAAC,EAAG,EAAG,EAAG,KAGnBzT,GAAU,WACR,IAAIvI,EAAGkX,EAAGE,EAAG5N,EAEb,OADAA,EAAMP,GAAOgB,WAAYmN,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,IACjD4N,GAAK,KAAOF,GAAK,GAAKlX,GAGhC2F,EAAOqW,IAAM,SAASA,GACpB,OAAO,IAAIxX,EAAMwX,EAAK,QAGxBxX,EAAMtH,UAAU8e,IAAM,SAAStR,GAI7B,OAHY,MAARA,IACFA,EAAO,OAEFnC,GAAQnG,KAAKwI,KAAMF,IAG5BxF,EAAO8W,IAAMtU,GAEb1C,EAAe5B,KAAK,CAClBlD,EAAG,EACH1B,KAAM,SAASrC,GACb,GAAyB,IAArB8N,UAAUxP,QAA4B,WAAZkD,GAAKxB,IAAmBA,GAAK,GAAKA,GAAK,SACnE,MAAO,SAKbgK,EAAU,WACR,IAAI8V,EAAIC,EAAIrS,EAAM7J,EAAGnF,EAAGuB,EAAG8a,EAAGoC,EAAG9e,EAAG0F,EAAGwb,EAAGtE,EAAG5N,EAAKyO,EAAMS,EAAMiD,EAAMC,EAAMC,EAAMlE,EAAGqC,EAMnF,GALAnQ,EAAOZ,GAAOgB,WACdqP,EAAIzP,EAAK,GAAIhP,EAAIgP,EAAK,GAAIqS,EAAKrS,EAAK,GACpChP,GAAQ,IACRqc,EAAIA,EAAI,IAAM,IACd+E,EAAS,IAAJphB,EACK,IAANA,EACFuc,EAAIF,EAAIlX,EAAIkc,OAkBZ,OAhBU,MAAN5C,IACFA,EAAI,GAEFA,EAAI,MACNA,GAAK,KAEHA,EAAI,IACNA,GAAK,KAEPA,GAAK,GACL9e,EAAIO,EAAMue,GACVld,EAAIkd,EAAI9e,EACR0F,EAAIgc,GAAM,EAAIrhB,GACd6gB,EAAIxb,EAAI+b,GAAM,EAAI7f,GAClBub,EAAIzX,EAAI+b,EAAK7f,EACb4d,EAAI9Z,EAAI+b,EACAzhB,GACN,KAAK,EACHgP,EAAM,CAACwQ,EAAGrC,EAAGzX,GAAIkX,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,GACjD,MACF,KAAK,EACHyO,EAAO,CAACyD,EAAG1B,EAAG9Z,GAAIkX,EAAIa,EAAK,GAAIf,EAAIe,EAAK,GAAIjY,EAAIiY,EAAK,GACrD,MACF,KAAK,EACHS,EAAO,CAACxY,EAAG8Z,EAAGrC,GAAIP,EAAIsB,EAAK,GAAIxB,EAAIwB,EAAK,GAAI1Y,EAAI0Y,EAAK,GACrD,MACF,KAAK,EACHiD,EAAO,CAACzb,EAAGwb,EAAG1B,GAAI5C,EAAIuE,EAAK,GAAIzE,EAAIyE,EAAK,GAAI3b,EAAI2b,EAAK,GACrD,MACF,KAAK,EACHC,EAAO,CAACjE,EAAGzX,EAAG8Z,GAAI5C,EAAIwE,EAAK,GAAI1E,EAAI0E,EAAK,GAAI5b,EAAI4b,EAAK,GACrD,MACF,KAAK,EACHC,EAAO,CAAC7B,EAAG9Z,EAAGwb,GAAItE,EAAIyE,EAAK,GAAI3E,EAAI2E,EAAK,GAAI7b,EAAI6b,EAAK,GAG3D,MAAO,CAACzE,EAAGF,EAAGlX,EAAG6J,EAAKpP,OAAS,EAAIoP,EAAK,GAAK,IAG/C9B,GAAU,WACR,IAAImU,EAAIlc,EAAGnF,EAAGihB,EAAO5E,EAAGoC,EAAG/X,EAAK6V,EAAG5N,EAwBnC,OAvBAA,EAAMP,GAAOgB,WAAYmN,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,GACzDjI,EAAMvG,KAAKuG,IAAI6V,EAAGF,EAAGlX,GACrBsB,GAAMtG,KAAKsG,IAAI8V,EAAGF,EAAGlX,GACrB8b,EAAQxa,GAAMC,EACd1G,EAAY,IAARihB,EAAc,IAClBI,EAAK3a,GAAO,IAAMua,GAAS,IACb,IAAVA,EACFxC,EAAIiC,OAAOC,KAEPpE,IAAM9V,KACRgY,GAAKpC,EAAIlX,GAAK8b,GAEZ5E,IAAM5V,KACRgY,EAAI,GAAKtZ,EAAIoX,GAAK0E,GAEhB9b,IAAMsB,KACRgY,EAAI,GAAKlC,EAAIF,GAAK4E,GAEpBxC,GAAK,GACDA,EAAI,IACNA,GAAK,MAGF,CAACA,EAAGze,EAAGqhB,IAGhBvW,EAAOwW,IAAM,WACX,OAAO,SAAUjS,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOtI,GAAML,KAAKoO,WAAWtG,OAAO,CAAC,SAAS,gBAGnDuB,EAAOiX,IAAMhW,EAEb3B,EAAMtH,UAAUif,IAAM,WACpB,OAAOpU,GAAQ3F,KAAKwI,OAGtB7E,EAAU,SAASqV,GACjB,IAAIgB,EAAIC,EAAIZ,EAAKjhB,EAAGkB,EAAG6N,EAAGO,EAAKa,EAE/B,GADAyQ,EAAMA,EAAI7b,cACY,MAAjBoG,EAAOsR,QAAmBtR,EAAOsR,OAAOmE,GAC3C,OAAOhV,EAAQT,EAAOsR,OAAOmE,IAE/B,GAAI1f,EAAI0f,EAAItf,MAAM,oDAAqD,CAErE,IADAgO,EAAMpO,EAAEQ,MAAM,EAAG,GACZ1B,EAAI+O,EAAI,EAAGA,GAAK,EAAG/O,IAAM+O,EAC5BO,EAAItP,IAAMsP,EAAItP,GAEhBsP,EAAI,GAAK,OACJ,GAAIpO,EAAI0f,EAAItf,MAAM,0EAEvB,IADAgO,EAAMpO,EAAEQ,MAAM,EAAG,GACZ1B,EAAImQ,EAAI,EAAGA,GAAK,EAAGnQ,IAAMmQ,EAC5Bb,EAAItP,IAAMsP,EAAItP,QAEX,GAAIkB,EAAI0f,EAAItf,MAAM,qFAAsF,CAE7G,IADAgO,EAAMpO,EAAEQ,MAAM,EAAG,GACZ1B,EAAI4hB,EAAK,EAAGA,GAAM,EAAG5hB,IAAM4hB,EAC9BtS,EAAItP,GAAKoO,GAAe,KAATkB,EAAItP,IAErBsP,EAAI,GAAK,OACJ,GAAIpO,EAAI0f,EAAItf,MAAM,2GAA4G,CAEnI,IADAgO,EAAMpO,EAAEQ,MAAM,EAAG,GACZ1B,EAAI6hB,EAAK,EAAGA,GAAM,EAAG7hB,IAAM6hB,EAC9BvS,EAAItP,GAAKoO,GAAe,KAATkB,EAAItP,IAErBsP,EAAI,IAAMA,EAAI,QACLpO,EAAI0f,EAAItf,MAAM,sFACvB2f,EAAM/f,EAAEQ,MAAM,EAAG,GACjBuf,EAAI,IAAM,IACVA,EAAI,IAAM,IACV3R,EAAMvD,EAAQkV,GACd3R,EAAI,GAAK,IACApO,EAAI0f,EAAItf,MAAM,6GACvB2f,EAAM/f,EAAEQ,MAAM,EAAG,GACjBuf,EAAI,IAAM,IACVA,EAAI,IAAM,IACV3R,EAAMvD,EAAQkV,GACd3R,EAAI,IAAMpO,EAAE,IAEd,OAAOoO,GAGThC,GAAU,SAASoS,GACjB,IAAIxP,EAEJ,OADAA,EAAOwP,EAAK,GAAK,EAAI,OAAS,MACjB,QAATxP,EACKA,EAAO,IAAMwP,EAAKhe,MAAM,EAAG,GAAG+d,IAAIrR,IAAO0T,KAAK,KAAO,IAC1C,SAAT5R,EACFA,EAAO,IAAMwP,EAAKhe,MAAM,EAAG,GAAG+d,IAAIrR,IAAO0T,KAAK,KAAO,IAAMpC,EAAK,GAAK,SADvE,GAOTvR,GAAM,SAAS5I,GACb,OAAO6I,GAAU,IAAJ7I,GAAW,KAG1BuG,EAAU,SAASmV,EAAK5B,GACtB,IAAInP,EAQJ,OAPAA,EAAOmP,EAAQ,EAAI,OAAS,MAC5B4B,EAAI,GAAK9S,GAAI8S,EAAI,IAAM,GACvBA,EAAI,GAAK9S,GAAa,IAAT8S,EAAI,IAAY,IAC7BA,EAAI,GAAK9S,GAAa,IAAT8S,EAAI,IAAY,IAChB,SAAT/Q,IACF+Q,EAAI,GAAK5B,GAEJnP,EAAO,IAAM+Q,EAAIa,KAAK,KAAO,KAGtCpX,EAAOkW,IAAM,SAAS9B,GACpB,OAAOvT,EAAQuT,IAGjB3T,EAAOyV,IAAM,WACX,OAAO,SAAUlR,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOtI,GAAML,KAAKoO,WAAWtG,OAAO,CAAC,SAAS,gBAGnDa,EAAMtH,UAAUke,IAAM,SAAS1Q,GAI7B,OAHY,MAARA,IACFA,EAAO,OAEgB,QAArBA,EAAKxO,MAAM,EAAG,GACT4L,GAAQ1F,KAAKwI,MACU,QAArBF,EAAKxO,MAAM,EAAG,GAChBoK,EAAQlE,KAAKqZ,MAAOrZ,KAAKyX,cAD3B,GAKT3U,EAAOqX,MAAQ,SAAS5c,GACtB,OAAOyG,EAAQ8C,GAAOvJ,KAGxBqF,EAAe5B,KAAK,CAClBlD,EAAG,EACH1B,KAAM,SAASrC,GACb,GAAyB,IAArB8N,UAAUxP,QAA8B,MAAbyO,GAAO/M,GACpC,MAAO,WAKbqI,EAAMtH,UAAUyC,KAAO,SAASxD,GAC9B,IAAImd,EAAGS,EASP,IAAKA,KARD9P,UAAUxP,SACRyO,GAAO/M,KACTiG,KAAKwI,KAAOxE,EAAQ8C,GAAO/M,KAE7BiG,KAAKwI,KAAK,GAAK,GAGjB0O,EAAIlX,KAAK4I,IAAI,OACH9B,GACR,GAAIoQ,IAAMpQ,GAAO6Q,GACf,OAAOA,EAGX,OAAOT,GAGTpS,EAAU,WASR,IAAIrM,EAAGye,EAAGnC,EAAG3N,EAGb,OAFAA,EAAMP,GAAOgB,WAAYkN,EAAI3N,EAAI,GAAI3O,EAAI2O,EAAI,GAAI8P,EAAI9P,EAAI,GACzD8P,GAAQ7U,EACD,CAAC0S,EAAGrR,EAAIwT,GAAKze,EAAGiO,GAAIwQ,GAAKze,IAGlCsM,EAAU,WACR,IAAIqV,EAAGzc,EAAG8J,EAAM7J,EAAGnF,EAAGqc,EAAGoC,EAAGnC,EAAGC,EAAG5N,EAAKyO,EAKvC,OAJApO,EAAOZ,GAAOgB,WACdkN,EAAItN,EAAK,GAAIhP,EAAIgP,EAAK,GAAIyP,EAAIzP,EAAK,GACnCL,EAAMtC,EAAQiQ,EAAGtc,EAAGye,GAAIkD,EAAIhT,EAAI,GAAIzJ,EAAIyJ,EAAI,GAAIxJ,EAAIwJ,EAAI,GACxDyO,EAAOjR,EAAQwV,EAAGzc,EAAGC,GAAIoX,EAAIa,EAAK,GAAIf,EAAIe,EAAK,GAAIjY,EAAIiY,EAAK,GACrD,CAACb,EAAGF,EAAGlX,EAAG6J,EAAKpP,OAAS,EAAIoP,EAAK,GAAK,IAG/C9C,EAAU,WACR,IAAIhH,EAAGC,EAAGnF,EAAGye,EAAGnC,EAAG3N,EAOnB,OANAA,EAAMP,GAAOgB,WAAYkN,EAAI3N,EAAI,GAAIzJ,EAAIyJ,EAAI,GAAIxJ,EAAIwJ,EAAI,GACzD3O,EAAIkO,GAAKhJ,EAAIA,EAAIC,EAAIA,GACrBsZ,GAAKjU,EAAMrF,EAAGD,GAAK8E,EAAU,KAAO,IACX,IAArB+D,GAAU,IAAJ/N,KACRye,EAAIiC,OAAOC,KAEN,CAACrE,EAAGtc,EAAGye,IAGhBjR,GAAU,WACR,IAAItI,EAAGC,EAAGkX,EAAGC,EAAGC,EAAG5N,EAAKyO,EAGxB,OAFAzO,EAAMP,GAAOgB,WAAYmN,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,GACzDyO,EAAO7P,GAAQgP,EAAGF,EAAGlX,GAAImX,EAAIc,EAAK,GAAIlY,EAAIkY,EAAK,GAAIjY,EAAIiY,EAAK,GACrDlR,EAAQoQ,EAAGpX,EAAGC,IAGvB2F,EAAO8W,IAAM,WACX,IAAI5S,EAEJ,OADAA,EAAOZ,GAAOgB,WACP,IAAIzF,EAAMqF,EAAM,QAGzBlE,EAAO+W,IAAM,WACX,IAAI7S,EAEJ,OADAA,EAAOZ,GAAOgB,WACP,IAAIzF,EAAMqF,EAAM,QAGzB3E,EAAOuX,IAAMtV,EAEbjC,EAAOwX,IAAM,WACX,IAAI7hB,EAAGye,EAAGnC,EAAG3N,EAEb,OADAA,EAAMP,GAAOgB,WAAYqP,EAAI9P,EAAI,GAAI3O,EAAI2O,EAAI,GAAI2N,EAAI3N,EAAI,GAClDrC,EAAQ,CAACgQ,EAAGtc,EAAGye,KAGxB9U,EAAMtH,UAAUuf,IAAM,WACpB,OAAOpU,GAAQjG,KAAKwI,OAGtBpG,EAAMtH,UAAUwf,IAAM,WACpB,OAAOrU,GAAQjG,KAAKwI,MAAM+R,WAG5B9U,GAAW,SAAS6C,GAClB,IAAI1K,EAAGnF,EAAGuB,EAAG8a,EAAG6C,EAAGre,EAAG0b,EAAG5N,EAAK6N,EAa9B,OAZY,MAAR3M,IACFA,EAAO,OAETlB,EAAMP,GAAOgB,WAAYmN,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,GACzD4N,GAAQ,IACRF,GAAQ,IACRlX,GAAQ,IACR+Z,EAAI,EAAI/e,KAAKsG,IAAI8V,EAAGpc,KAAKsG,IAAI4V,EAAGlX,IAChC5D,EAAI2d,EAAI,EAAI,GAAK,EAAIA,GAAK,EAC1Blf,GAAK,EAAIuc,EAAI2C,GAAK3d,EAClBV,GAAK,EAAIwb,EAAI6C,GAAK3d,EAClBib,GAAK,EAAIrX,EAAI+Z,GAAK3d,EACX,CAACvB,EAAGa,EAAG2b,EAAG0C,IAGnBlU,EAAW,WACT,IAAIgU,EAAOhQ,EAAM7J,EAAGnF,EAAGqc,EAAG6C,EAAGre,EAAG0b,EAAGC,EAInC,OAHAxN,EAAOZ,GAAOgB,WACdpP,EAAIgP,EAAK,GAAInO,EAAImO,EAAK,GAAIwN,EAAIxN,EAAK,GAAIkQ,EAAIlQ,EAAK,GAChDgQ,EAAQhQ,EAAKpP,OAAS,EAAIoP,EAAK,GAAK,EAC1B,IAANkQ,EACK,CAAC,EAAG,EAAG,EAAGF,IAEnBzC,EAAIvc,GAAK,EAAI,EAAI,KAAO,EAAIA,IAAM,EAAIkf,GACtC7C,EAAIxb,GAAK,EAAI,EAAI,KAAO,EAAIA,IAAM,EAAIqe,GACtC/Z,EAAIqX,GAAK,EAAI,EAAI,KAAO,EAAIA,IAAM,EAAI0C,GAC/B,CAAC3C,EAAGF,EAAGlX,EAAG6Z,KAGnB3U,EAAO0X,KAAO,WACZ,OAAO/W,EAASoD,GAAOgB,aAGzBtE,EAAOiX,KAAO,WACZ,OAAO,SAAU1S,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOtI,GAAML,KAAKoO,WAAWtG,OAAO,CAAC,UAAU,gBAGpDa,EAAMtH,UAAU0f,KAAO,WACrB,OAAO/U,GAASzF,KAAKwI,OAGvB1F,EAAO2X,GAAK,WACV,IAAIriB,EAAGuf,EAAGxQ,EAAGO,EAAKkQ,EAWlB,IAVAlQ,EAAM,WACJ,IAAIN,EAAKtG,EAGT,IAAK6W,KAFLvQ,EAAMP,GAAOgB,WACb/G,EAAU,GACAsG,EACRwQ,EAAIxQ,EAAIuQ,GACR7W,EAAQE,KAAK4W,GAEf,OAAO9W,GACNU,MAAMxB,KAAM6H,WACVzP,EAAI+O,EAAI,EAAGA,GAAK,EAAG/O,IAAM+O,EAC5BO,EAAItP,IAAM,IAEZ,OAAOsP,GAGTnE,EAAOkX,GAAK,WACV,OAAO,SAAU3S,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOtI,GAAML,KAAKoO,WAAWtG,OAAO,CAAC,QAAQ,gBAGlDa,EAAMtH,UAAU2f,GAAK,WACnB,IAAI/S,EAEJ,OADAA,EAAM1H,KAAKwI,KACJ,CAACd,EAAI,GAAK,IAAKA,EAAI,GAAK,IAAKA,EAAI,GAAK,IAAKA,EAAI,KAGxDxB,GAAgB,SAAS8O,EAAGF,EAAGlX,GAC7B,IAAIwJ,EAKJ,OAJAA,EAAMP,GAAOgB,WAAYmN,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,GACzD4N,EAAI7P,EAAY6P,GAChBF,EAAI3P,EAAY2P,GAChBlX,EAAIuH,EAAYvH,GACT,MAASoX,EAAI,MAASF,EAAI,MAASlX,GAG5CuH,EAAc,SAASqC,GAErB,OADAA,GAAK,IACDA,GAAK,OACAA,EAAI,MAEJhC,IAAKgC,EAAI,MAAS,MAAO,MAIpC9C,EAAkB,SAAS4S,EAAMC,EAAMvd,EAAGV,GACxC,IAAI0e,EAAMC,EAGV,OAFAD,EAAOV,EAAK9O,KACZyP,EAAOV,EAAK/O,KACL,IAAIpG,EAAM4V,EAAK,GAAKhe,GAAKie,EAAK,GAAKD,EAAK,IAAKA,EAAK,GAAKhe,GAAKie,EAAK,GAAKD,EAAK,IAAKA,EAAK,GAAKhe,GAAKie,EAAK,GAAKD,EAAK,IAAK1e,IAG5HyJ,EAAe/B,KAAK,CAAC,MAAO0D,IAE5BtC,EAAMtH,UAAU4f,UAAY,SAASC,EAAKrS,GACxC,IAAIsS,EAASC,EAAKC,EAAUhD,EAAM1b,EAIlC,OAHY,MAARkM,IACFA,EAAO,OAEJT,UAAUxP,QAGfyf,EAAO9X,KAAKwI,KACA,IAARmS,EACF7C,EAAO,CAAC,EAAG,EAAG,EAAG9X,KAAKwI,KAAK,IACV,IAARmS,EACT7C,EAAO,CAAC,IAAK,IAAK,IAAK9X,KAAK,KAE5B4a,EAAU1U,GAAclG,KAAKwI,MAC7BqS,EAAM,KACNC,EAAW,GACX1e,EAAO,SAAS2Y,EAAGmC,GACjB,IAAI6D,EAAIzhB,EAGR,OAFAA,EAAIyb,EAAE1Q,YAAY6S,EAAG,GAAK5O,GAC1ByS,EAAKzhB,EAAEohB,YACH9hB,KAAKoK,IAAI2X,EAAMI,GAAMF,IAAQC,IACxBxhB,EAELyhB,EAAKJ,EACAve,EAAK2Y,EAAGzb,GAEV8C,EAAK9C,EAAG4d,IAGfY,EADE8C,EAAUD,EACLve,EAAKmH,EAAO,SAAUvD,MAAM8X,OAE5B1b,EAAK4D,KAAMuD,EAAO,UAAUuU,QAGhCvU,EAAOuU,GAAML,MAAMzX,KAAKyX,UA7BtBvR,GAAclG,KAAKwI,OAgC9B5B,GAAkB,SAASoU,GACzB,IAAIpd,EAAGkX,EAAGE,EAAGiG,EAWb,OAVAA,EAAOD,EAAS,IACZC,EAAO,IACTjG,EAAI,IACJF,GAAK,mBAAqB,oBAAuBA,EAAImG,EAAO,GAAK,mBAAqB/V,EAAI4P,GAC1FlX,EAAIqd,EAAO,GAAK,EAA0B,mBAAsBrd,EAAIqd,EAAO,IAAtD,mBAA4D,mBAAqB/V,EAAItH,KAE1GoX,EAAI,mBAAqB,kBAAqBA,EAAIiG,EAAO,IAAM,kBAAoB/V,EAAI8P,GACvFF,EAAI,kBAAoB,oBAAuBA,EAAImG,EAAO,IAAM,iBAAmB/V,EAAI4P,GACvFlX,EAAI,KAEC,CAACoX,EAAGF,EAAGlX,IAGhBwI,GAAkB,WAChB,IAAIxI,EAAGid,EAAQK,EAASC,EAASnG,EAAG5N,EAAKM,EAAKuT,EAC9C7T,EAAMP,GAAOgB,WAAYmN,EAAI5N,EAAI,GAAQA,EAAI,GAAIxJ,EAAIwJ,EAAI,GACzD+T,EAAU,IACVD,EAAU,IACVL,EAAM,GACN,MAAOK,EAAUC,EAAUN,EACzBI,EAA6B,IAArBC,EAAUC,GAClBzT,EAAMd,GAAgBqU,GACjBvT,EAAI,GAAKA,EAAI,IAAQ9J,EAAIoX,EAC5BkG,EAAUD,EAEVE,EAAUF,EAGd,OAAOzU,GAAMyU,IAGf1X,EAAO6X,YAAc7X,EAAOyX,OAAS,WACnC,OAAO,SAAUlT,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOtI,GAAML,KAAKoO,WAAWtG,OAAO,CAAC,iBAAiB,gBAG3DuB,EAAOsY,YAActY,EAAOkY,OAASlY,EAAOuY,EAAIzU,GAEhDxE,EAAMtH,UAAUsgB,YAAc,WAC5B,OAAOhV,GAAgBpG,KAAKwI,OAG9BpG,EAAMtH,UAAUkgB,OAAS5Y,EAAMtH,UAAUsgB,YAEzC7X,EAAO+X,SAAW,SAAS3d,EAAGC,GAC5B,IAAI2d,EAAIC,EAAIpU,EAAKyO,EASjB,MARwB,YAAnBzO,EAAM7L,GAAKoC,KAA4B,WAARyJ,IAClCzJ,EAAI,IAAIyE,EAAMzE,IAES,YAApBkY,EAAOta,GAAKqC,KAA6B,WAATiY,IACnCjY,EAAI,IAAIwE,EAAMxE,IAEhB2d,EAAK5d,EAAE+c,YACPc,EAAK5d,EAAE8c,YACHa,EAAKC,GACCD,EAAK,MAASC,EAAK,MAEnBA,EAAK,MAASD,EAAK,MAI/BhY,EAAOkY,SAAW,SAAS9d,EAAGC,EAAG0K,GAC/B,IAAIoT,EAAGtjB,EAAGmjB,EAAIC,EAAIpU,EAAKyO,EAAM8F,EAa7B,IAAKvjB,KAZO,MAARkQ,IACFA,EAAO,OAEe,YAAnBlB,EAAM7L,GAAKoC,KAA4B,WAARyJ,IAClCzJ,EAAI,IAAIyE,EAAMzE,IAES,YAApBkY,EAAOta,GAAKqC,KAA6B,WAATiY,IACnCjY,EAAI,IAAIwE,EAAMxE,IAEhB2d,EAAK5d,EAAEib,IAAItQ,GACXkT,EAAK5d,EAAEgb,IAAItQ,GACXqT,EAAS,EACCJ,EACRG,GAAKH,EAAGnjB,IAAM,IAAMojB,EAAGpjB,IAAM,GAC7BujB,GAAUD,EAAIA,EAEhB,OAAO9iB,KAAK+N,KAAKgV,IAGnBpY,EAAOqY,OAAS,SAASje,EAAGC,EAAGwc,EAAGyB,GAChC,IAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAMC,EAAMC,EAAMC,EAAM3iB,EAAG4iB,EAAIxV,EAAKyO,EAAMS,EAAMiD,EAAMsD,EAAIC,EAAIC,EAAIxH,EAAGyH,EAAIC,EAAIC,EACjH,MAAL9C,IACFA,EAAI,GAEG,MAALyB,IACFA,EAAI,GAEkB,YAAnBzU,EAAM7L,GAAKoC,KAA4B,WAARyJ,IAClCzJ,EAAI,IAAIyE,EAAMzE,IAES,YAApBkY,EAAOta,GAAKqC,KAA6B,WAATiY,IACnCjY,EAAI,IAAIwE,EAAMxE,IAEhB0Y,EAAO3Y,EAAEmY,MAAOgG,EAAKxF,EAAK,GAAI0F,EAAK1F,EAAK,GAAI4F,EAAK5F,EAAK,GACtDiD,EAAO3b,EAAEkY,MAAOiG,EAAKxC,EAAK,GAAI0C,EAAK1C,EAAK,GAAI4C,EAAK5C,EAAK,GACtD6C,EAAKzV,GAAKqV,EAAKA,EAAKE,EAAKA,GACzBG,EAAK1V,GAAKsV,EAAKA,EAAKE,EAAKA,GACzBY,EAAKjB,EAAK,GAAO,KAAS,QAAWA,GAAO,EAAM,OAAUA,GAC5De,EAAM,MAAST,GAAO,EAAM,MAASA,GAAM,KAC3CQ,EAAKR,EAAK,KAAW,EAAuB,IAAhBnZ,EAAMiZ,EAAIF,GAAezZ,EACrD,MAAOqa,EAAK,EACVA,GAAM,IAER,MAAOA,GAAM,IACXA,GAAM,IAcR,OAZArH,EAAKqH,GAAM,KAAWA,GAAM,IAAS,IAAO5Z,EAAI,GAAMU,EAAKnB,GAAMqa,EAAK,KAAU,MAAU,IAAO5Z,EAAI,GAAMU,EAAKnB,GAAMqa,EAAK,IAAS,MACpIN,EAAKF,EAAKA,EAAKA,EAAKA,EACpBpiB,EAAI2M,GAAK2V,GAAMA,EAAK,OACpBQ,EAAKD,GAAM7iB,EAAIub,EAAI,EAAMvb,GACzB2iB,EAAOb,EAAKC,EACZW,EAAON,EAAKC,EACZG,EAAOR,EAAKC,EACZQ,EAAOP,EAAKC,EACZI,EAAMC,EAAOA,EAAOC,EAAOA,EAAOC,EAAOA,EACzCM,EAAKL,GAAQvC,EAAI2C,GACjBE,EAAKP,GAAQb,EAAIgB,GACjBK,EAAKJ,EACEnW,GAAKqW,EAAKA,EAAKC,EAAKA,EAAMV,GAAOW,EAAKA,KAG/C9a,EAAMtH,UAAU8d,IAAM,SAASuE,GAC7B,IAAIC,EAAShlB,EAAGiQ,EAAIC,EAAMlB,EAAKiW,EAI/B,OAHAhV,EAAKrI,KACLoH,EAAM+V,EAAS9V,MAAM,KAAMiB,EAAOlB,EAAI,GAAIgW,EAAUhW,EAAI,GACxDiW,EAAMhV,EAAGC,KACL8U,GACFhlB,EAAIkQ,EAAKnI,QAAQid,GACbhlB,GAAK,EACAilB,EAAIjlB,GAEJsQ,QAAQC,KAAK,mBAAqByU,EAAU,YAAc9U,IAG5D+U,GAIXjb,EAAMtH,UAAUwiB,IAAM,SAASH,EAAU7c,GACvC,IAAI8c,EAAShlB,EAAGiQ,EAAIC,EAAMlB,EAAKiW,EAG/B,GAFAhV,EAAKrI,KACLoH,EAAM+V,EAAS9V,MAAM,KAAMiB,EAAOlB,EAAI,GAAIgW,EAAUhW,EAAI,GACpDgW,EAGF,GAFAC,EAAMhV,EAAGC,KACTlQ,EAAIkQ,EAAKnI,QAAQid,GACbhlB,GAAK,EACP,GAAoB,WAAhBmD,GAAK+E,GACP,OAAQA,EAAMzG,OAAO,IACnB,IAAK,IACHwjB,EAAIjlB,KAAOkI,EACX,MACF,IAAK,IACH+c,EAAIjlB,KAAOkI,EACX,MACF,IAAK,IACH+c,EAAIjlB,KAAQkI,EAAMwY,OAAO,GACzB,MACF,IAAK,IACHuE,EAAIjlB,KAAQkI,EAAMwY,OAAO,GACzB,MACF,QACEuE,EAAIjlB,IAAMkI,OAGd+c,EAAIjlB,GAAKkI,OAGXoI,QAAQC,KAAK,mBAAqByU,EAAU,YAAc9U,QAG5D+U,EAAM/c,EAER,OAAOiD,EAAO8Z,EAAK/U,GAAMmP,MAAMpP,EAAGoP,UAGpCrV,EAAMtH,UAAUyiB,QAAU,WACxB,OAAOvd,KAAKwI,KAAKb,WAAY,GAG/BvF,EAAMtH,UAAU2c,MAAQ,SAAS9Z,GAC/B,OAAIkK,UAAUxP,OACLkL,EAAOmE,IAAI,CAAC1H,KAAKwI,KAAK,GAAIxI,KAAKwI,KAAK,GAAIxI,KAAKwI,KAAK,GAAI7K,IAExDqC,KAAKwI,KAAK,IAGnBpG,EAAMtH,UAAU8I,OAAS,SAAS4Z,GAChC,IAAI1H,EAAKzN,EAOT,OANc,MAAVmV,IACFA,EAAS,GAEXnV,EAAKrI,KACL8V,EAAMzN,EAAGyN,MACTA,EAAI,IAAMxT,EAAcqT,GAAK6H,EACtBja,EAAOuS,IAAIA,GAAK2B,MAAMpP,EAAGoP,UAGlCrV,EAAMtH,UAAU2iB,SAAW,SAASD,GAIlC,OAHc,MAAVA,IACFA,EAAS,GAEJxd,KAAK4D,QAAQ4Z,IAGtBpb,EAAMtH,UAAU4iB,OAAStb,EAAMtH,UAAU8I,OAEzCxB,EAAMtH,UAAU6iB,SAAWvb,EAAMtH,UAAU2iB,SAE3Crb,EAAMtH,UAAU8iB,SAAW,SAASJ,GAClC,IAAInD,EAAKhS,EAUT,OATc,MAAVmV,IACFA,EAAS,GAEXnV,EAAKrI,KACLqa,EAAMhS,EAAGgS,MACTA,EAAI,IAAMmD,EAASlb,EAAcqT,GAC7B0E,EAAI,GAAK,IACXA,EAAI,GAAK,GAEJ9W,EAAO8W,IAAIA,GAAK5C,MAAMpP,EAAGoP,UAGlCrV,EAAMtH,UAAU+iB,WAAa,SAASL,GAIpC,OAHc,MAAVA,IACFA,EAAS,GAEJxd,KAAK4d,UAAUJ,IAGxBpb,EAAMtH,UAAUgjB,YAAc,WAC5B,IAAIngB,EAAG+J,EAGP,OAFAA,EAAM1H,KAAK0H,MACX/J,EAAIqC,KAAKyX,QACFlU,EAAOmE,EAAI,GAAK/J,EAAG+J,EAAI,GAAK/J,EAAG+J,EAAI,GAAK/J,EAAGA,IAGpDwF,EAAQ,SAAS4a,EAAQC,EAAK1V,GAC5B,IAAKnF,EAAMmF,GACT,KAAM,sBAAwBA,EAEhC,OAAOnF,EAAMmF,GAAMyV,EAAQC,IAG7B5a,EAAU,SAASpJ,GACjB,OAAO,SAAS+jB,EAAQC,GACtB,IAAIC,EAAI7B,EAGR,OAFA6B,EAAK1a,EAAOya,GAAKtW,MACjB0U,EAAK7Y,EAAOwa,GAAQrW,MACbnE,EAAOvJ,EAAEikB,EAAI7B,GAAK,SAI7BtY,EAAO,SAAS9J,GACd,OAAO,SAASikB,EAAI7B,GAClB,IAAIhkB,EAAG+O,EAAG+W,EAEV,IADAA,EAAM,GACD9lB,EAAI+O,EAAI,EAAGA,GAAK,EAAG/O,IAAM+O,EAC5B+W,EAAI9lB,GAAK4B,EAAEikB,EAAG7lB,GAAIgkB,EAAGhkB,IAEvB,OAAO8lB,IAIX7Y,GAAS,SAAS1H,EAAGC,GACnB,OAAOD,GAGTyH,GAAW,SAASzH,EAAGC,GACrB,OAAOD,EAAIC,EAAI,KAGjBgG,EAAS,SAASjG,EAAGC,GACnB,OAAID,EAAIC,EACCA,EAEAD,GAIXqH,EAAU,SAASrH,EAAGC,GACpB,OAAID,EAAIC,EACCD,EAEAC,GAIX6I,GAAS,SAAS9I,EAAGC,GACnB,OAAO,KAAO,GAAK,EAAID,EAAI,MAAQ,EAAIC,EAAI,OAG7C2H,GAAU,SAAS5H,EAAGC,GACpB,OAAIA,EAAI,IACC,EAAID,EAAIC,EAAI,IAEZ,KAAO,EAAI,GAAK,EAAID,EAAI,MAAQ,EAAIC,EAAI,OAInD0F,EAAO,SAAS3F,EAAGC,GACjB,OAAO,KAAO,GAAK,EAAIA,EAAI,MAAQD,EAAI,OAGzCkG,EAAQ,SAASlG,EAAGC,GAClB,OAAU,MAAND,EACK,KAETA,EAAWC,EAAI,IAAX,KAAmB,EAAID,EAAI,KAC3BA,EAAI,IACC,IAEAA,IAIXwF,EAAMkC,OAASjC,EAAQU,EAAKuB,KAE5BlC,EAAMiC,SAAWhC,EAAQU,EAAKsB,KAE9BjC,EAAMsD,OAASrD,EAAQU,EAAK2C,KAE5BtD,EAAMoC,QAAUnC,EAAQU,EAAKyB,KAE7BpC,EAAMS,OAASR,EAAQU,EAAKF,IAE5BT,EAAM6B,QAAU5B,EAAQU,EAAKkB,IAE7B7B,EAAMU,MAAQT,EAAQU,EAAKD,IAE3BV,EAAMG,KAAOF,EAAQU,EAAKR,IAE1BC,EAAOJ,MAAQA,EAEfI,EAAO4a,QAAU,SAASC,GACxB,IAAIlX,EAAKC,EAAG6N,EAAGqJ,EAQf,IAPArJ,EAAI,CACF7V,IAAKga,OAAOmF,UACZpf,KAAyB,EAApBia,OAAOmF,UACZC,IAAK,EACLC,OAAQ,GACRC,MAAO,GAEJtX,EAAI,EAAGD,EAAMkX,EAAK/lB,OAAQ8O,EAAID,EAAKC,IACtCkX,EAAMD,EAAKjX,GACC,MAAPkX,GAAiBlJ,MAAMkJ,KAC1BrJ,EAAEwJ,OAAOxd,KAAKqd,GACdrJ,EAAEuJ,KAAOF,EACLA,EAAMrJ,EAAE7V,MACV6V,EAAE7V,IAAMkf,GAENA,EAAMrJ,EAAE9V,MACV8V,EAAE9V,IAAMmf,GAEVrJ,EAAEyJ,OAAS,GAOf,OAJAzJ,EAAE0J,OAAS,CAAC1J,EAAE7V,IAAK6V,EAAE9V,KACrB8V,EAAE2J,OAAS,SAASrW,EAAMsR,GACxB,OAAOrW,EAAOob,OAAO3J,EAAG1M,EAAMsR,IAEzB5E,GAGTzR,EAAOgT,MAAQ,SAAS1B,EAAQ+J,GAC9B,IAAIC,EAAUC,EAAaC,EAASC,EAAmBC,EAAiBC,EAAQC,EAAMC,EAAMC,EAAOC,EAAQC,EAAMC,EAAUC,EAAMC,EAASC,EAA0B3lB,EAAG4lB,EAAUC,EAAUC,EAAYC,EAAWC,EAoUlN,OAnUAX,EAAQ,MACRC,EAAS/b,EAAO,QAChBmc,EAAU,GACD,EACTT,EAAU,CAAC,EAAG,GACdQ,EAAO,GACPD,EAAW,CAAC,EAAG,GACfX,GAAW,EACXE,EAAU,GACVQ,GAAO,EACPH,EAAO,EACPD,EAAO,EACPH,GAAoB,EACpBF,EAAc,GACda,GAAY,EACZT,EAAS,EACTa,EAAY,SAASlL,GACnB,IAAIpc,EAAGyf,EAAK/Q,EAAGC,EAAKyO,EAAMtN,EAO1B,GANc,MAAVsM,IACFA,EAAS,CAAC,OAAQ,SAEL,MAAVA,GAAoC,WAAjBtZ,GAAKsZ,IAA0C,MAAjBtR,EAAOF,SAC3DwR,EAAStR,EAAOF,OAAOwR,IAAWtR,EAAOF,OAAOwR,EAAO1X,gBAAkB0X,GAEtD,UAAjBtZ,GAAKsZ,GAAqB,CAK5B,IAJsB,IAAlBA,EAAOxc,SACTwc,EAAS,CAACA,EAAO,GAAIA,EAAO,KAE9BA,EAASA,EAAO/a,MAAM,GACjBrB,EAAI0O,EAAI,EAAGC,EAAMyN,EAAOxc,OAAS,EAAG,GAAK+O,EAAMD,GAAKC,EAAMD,GAAKC,EAAK3O,EAAI,GAAK2O,IAAQD,IAAMA,EAC9F+Q,EAAMrD,EAAOpc,GACK,WAAd8C,GAAK2c,KACPrD,EAAOpc,GAAK8K,EAAO2U,IAIvB,IADAuH,EAAKpnB,OAAS,EACTI,EAAI8P,EAAI,EAAGsN,EAAOhB,EAAOxc,OAAS,EAAG,GAAKwd,EAAOtN,GAAKsN,EAAOtN,GAAKsN,EAAMpd,EAAI,GAAKod,IAAStN,IAAMA,EACnGkX,EAAKze,KAAKvI,GAAKoc,EAAOxc,OAAS,IAInC,OADAynB,IACOf,EAAUlK,GAEnB+K,EAAW,SAAStf,GAClB,IAAIlI,EAAG2B,EACP,GAAgB,MAAZ8kB,EAAkB,CACpB9kB,EAAI8kB,EAASxmB,OAAS,EACtBD,EAAI,EACJ,MAAOA,EAAI2B,GAAKuG,GAASue,EAASzmB,GAChCA,IAEF,OAAOA,EAAI,EAEb,OAAO,GAET4nB,EAAO,SAASzK,GACd,OAAOA,GAEO,SAASjV,GACvB,IAAIlI,EAAG6nB,EAAMC,EAAMnmB,EAAGskB,EAStB,OARAA,EAAM/d,EACFue,EAASxmB,OAAS,IACpB0B,EAAI8kB,EAASxmB,OAAS,EACtBD,EAAIwnB,EAAStf,GACb4f,EAAOrB,EAAS,IAAMA,EAAS,GAAKA,EAAS,KAAO,EAAc,GAAVa,GACxDO,EAAOpB,EAAS9kB,EAAI,IAAM8kB,EAAS9kB,GAAK8kB,EAAS9kB,EAAI,KAAO,EAAc,GAAV2lB,GAChErB,EAAMe,GAASP,EAASzmB,GAAuC,IAAjCymB,EAASzmB,EAAI,GAAKymB,EAASzmB,IAAY8nB,IAASD,EAAOC,IAAUf,EAAOC,IAEjGf,GAETwB,EAAW,SAASxB,EAAK8B,GACvB,IAAI1nB,EAAGyf,EAAK9f,EAAGuf,EAAGxQ,EAAGrJ,EAAGsJ,EAAKmO,EAI7B,GAHiB,MAAb4K,IACFA,GAAY,GAEVhL,MAAMkJ,IAAgB,OAARA,EAChB,OAAOiB,EAuBT,GArBKa,EAUH5K,EAAI8I,EATAQ,GAAYA,EAASxmB,OAAS,GAChCI,EAAImnB,EAASvB,GACb9I,EAAI9c,GAAKomB,EAASxmB,OAAS,IAE3Bkd,EADS4J,IAASC,GACbf,EAAMe,IAASD,EAAOC,GAEvB,EAKHe,IACH5K,EAAIyK,EAAKzK,IAEI,IAAX2J,IACF3J,EAAI/P,GAAI+P,EAAG2J,IAEb3J,EAAIiK,EAAS,GAAMjK,GAAK,EAAIiK,EAAS,GAAKA,EAAS,IACnDjK,EAAI3c,KAAKuG,IAAI,EAAGvG,KAAKsG,IAAI,EAAGqW,IAC5BoC,EAAI/e,KAAKD,MAAU,IAAJ4c,GACXoK,GAAab,EAAYnH,GAC3BO,EAAM4G,EAAYnH,OACb,CACL,GAAsB,UAAlBpc,GAAKwjB,GACP,IAAK3mB,EAAI+O,EAAI,EAAGC,EAAMqY,EAAKpnB,OAAS,EAAG,GAAK+O,EAAMD,GAAKC,EAAMD,GAAKC,EAAKhP,EAAI,GAAKgP,IAAQD,IAAMA,EAAG,CAE/F,GADArJ,EAAI2hB,EAAKrnB,GACLmd,GAAKzX,EAAG,CACVoa,EAAM6G,EAAQ3mB,GACd,MAEF,GAAImd,GAAKzX,GAAK1F,IAAMqnB,EAAKpnB,OAAS,EAAG,CACnC6f,EAAM6G,EAAQ3mB,GACd,MAEF,GAAImd,EAAIzX,GAAKyX,EAAIkK,EAAKrnB,EAAI,GAAI,CAC5Bmd,GAAKA,EAAIzX,IAAM2hB,EAAKrnB,EAAI,GAAK0F,GAC7Boa,EAAM3U,EAAOc,YAAY0a,EAAQ3mB,GAAI2mB,EAAQ3mB,EAAI,GAAImd,EAAG8J,GACxD,WAGuB,aAAlB9jB,GAAKwjB,KACd7G,EAAM6G,EAAQxJ,IAEZoK,IACFb,EAAYnH,GAAKO,GAGrB,OAAOA,GAET4H,EAAa,WACX,OAAOhB,EAAc,IAEvBiB,EAAUlL,GACV7a,EAAI,SAAS4d,GACX,IAAInf,EAEJ,OADAA,EAAI8K,EAAOsc,EAASjI,IAChB2H,GAAQ9mB,EAAE8mB,GACL9mB,EAAE8mB,KAEF9mB,GAGXuB,EAAEomB,QAAU,SAASA,GACnB,IAAI1E,EACJ,OAAe,MAAX0E,GACoB,UAAlB7kB,GAAK6kB,IACPvB,EAAWuB,EACXnB,EAAU,CAACmB,EAAQ,GAAIA,EAAQA,EAAQ/nB,OAAS,MAEhDqjB,EAAInY,EAAO4a,QAAQc,GAEjBJ,EADc,IAAZuB,EACS,CAAC1E,EAAEvc,IAAKuc,EAAExc,KAEVqE,EAAOob,OAAOjD,EAAG,IAAK0E,IAG9BpmB,GAEF6kB,GAET7kB,EAAE0kB,OAAS,SAASA,GAClB,IAAIjmB,EAAGijB,EAAG/D,EAAGzQ,EAAKC,EAAGC,EAAKmB,EAC1B,IAAKV,UAAUxP,OACb,OAAO4mB,EAMT,GAJAG,EAAOV,EAAO,GACdS,EAAOT,EAAOA,EAAOrmB,OAAS,GAC9BonB,EAAO,GACP9H,EAAIoH,EAAQ1mB,OACRqmB,EAAOrmB,SAAWsf,GAAKyH,IAASD,EAClC,IAAKhY,EAAI,EAAGD,EAAMwX,EAAOrmB,OAAQ8O,EAAID,EAAKC,IACxCuU,EAAIgD,EAAOvX,GACXsY,EAAKze,MAAM0a,EAAI0D,IAASD,EAAOC,SAGjC,IAAK3mB,EAAI8P,EAAI,EAAGnB,EAAMuQ,EAAI,EAAG,GAAKvQ,EAAMmB,GAAKnB,EAAMmB,GAAKnB,EAAK3O,EAAI,GAAK2O,IAAQmB,IAAMA,EAClFkX,EAAKze,KAAKvI,GAAKkf,EAAI,IAIvB,OADAsH,EAAU,CAACG,EAAMD,GACVnlB,GAETA,EAAEsO,KAAO,SAAS+X,GAChB,OAAKxY,UAAUxP,QAGfgnB,EAAQgB,EACRP,IACO9lB,GAJEqlB,GAMXrlB,EAAEsmB,MAAQ,SAASzL,EAAQ4K,GAEzB,OADAM,EAAUlL,EAAQ4K,GACXzlB,GAETA,EAAEkkB,IAAM,SAASqC,GAEf,OADAhB,EAAOgB,EACAvmB,GAETA,EAAEwmB,OAAS,SAASnC,GAClB,OAAKxW,UAAUxP,QAGfqnB,EAAUrB,EACHrkB,GAHE0lB,GAKX1lB,EAAEymB,iBAAmB,SAAS7I,GAyC5B,OAxCS,MAALA,IACFA,GAAI,GAENoH,EAAoBpH,EACpBkI,IAEEE,EADEhB,EACK,SAASzJ,GACd,IAAImL,EAAI5E,EAAI6E,EAAUC,EAAQC,EAAS/F,EAAUgG,EAAKpL,EAAIF,EAC1DkL,EAAKb,EAAS,GAAG,GAAM/J,MAAM,GAC7BgG,EAAK+D,EAAS,GAAG,GAAM/J,MAAM,GAC7BgL,EAAMJ,EAAK5E,EACX6E,EAAWd,EAAStK,GAAG,GAAMO,MAAM,GACnC+K,EAAUH,GAAM5E,EAAK4E,GAAMnL,EAC3BqL,EAASD,EAAWE,EACpBnL,EAAK,EACLF,EAAK,EACLsF,EAAW,GACX,MAAOliB,KAAKoK,IAAI4d,GAAU,KAAQ9F,KAAa,GAC7C,WACMgG,IACFF,IAAW,GAETA,EAAS,GACXlL,EAAKH,EACLA,GAAgB,IAAVC,EAAKD,KAEXC,EAAKD,EACLA,GAAgB,IAAVG,EAAKH,IAEboL,EAAWd,EAAStK,GAAG,GAAMO,MAAM,GAC5B8K,EAASD,EAAWE,GAZ7B,GAeF,OAAOtL,GAGF,SAASA,GACd,OAAOA,GAGJvb,GAETA,EAAE+mB,QAAU,SAASjjB,GACnB,OAAS,MAALA,GACc,WAAZvC,GAAKuC,KACPA,EAAI,CAACA,EAAGA,IAEV0hB,EAAW1hB,EACJ9D,GAEAwlB,GAGXxlB,EAAE6a,OAAS,SAASmM,EAAW9C,GAC7B,IAAI+C,EAAIC,EAAI9oB,EAAMgP,EAAKrG,EAAQD,EAASqgB,EAAS5Y,EAKjD,GAJIV,UAAUxP,OAAS,IACrB6lB,EAAM,OAERnd,EAAS,GACgB,IAArB8G,UAAUxP,OACZ0I,EAASge,EAAQjlB,MAAM,QAClB,GAAkB,IAAdknB,EACTjgB,EAAS,CAAC/G,EAAE,UACP,GAAIgnB,EAAY,EACrBE,EAAKjC,EAAQ,GACbgC,EAAKhC,EAAQ,GAAKiC,EAClBngB,EAAS,WACPD,EAAU,GACV,IAAK,IAAIqG,EAAI,EAAG,GAAK6Z,EAAY7Z,EAAI6Z,EAAY7Z,EAAI6Z,EAAW,GAAKA,EAAY7Z,IAAMA,IAAMrG,EAAQE,KAAKmG,GAC1G,OAAOrG,GACNU,MAAMxB,MAAM6X,KAAI,SAASzf,GAC1B,OAAO4B,EAAEknB,EAAK9oB,GAAK4oB,EAAY,GAAKC,UAEjC,CAGL,GAFApM,EAAS,GACTsM,EAAU,GACNtC,GAAYA,EAASxmB,OAAS,EAChC,IAAKD,EAAImQ,EAAI,EAAGnB,EAAMyX,EAASxmB,OAAQ,GAAK+O,EAAMmB,EAAInB,EAAMmB,EAAInB,EAAKhP,EAAI,GAAKgP,IAAQmB,IAAMA,EAC1F4Y,EAAQngB,KAAuC,IAAjC6d,EAASzmB,EAAI,GAAKymB,EAASzmB,UAG3C+oB,EAAUlC,EAEZle,EAASogB,EAAQtJ,KAAI,SAASD,GAC5B,OAAO5d,EAAE4d,MAQb,OALIrU,EAAO2a,KACTnd,EAASA,EAAO8W,KAAI,SAASpf,GAC3B,OAAOA,EAAEylB,SAGNnd,GAET/G,EAAEonB,MAAQ,SAAS3oB,GACjB,OAAS,MAALA,GACFknB,EAAYlnB,EACLuB,GAEA2lB,GAGX3lB,EAAE2c,MAAQ,SAAS7B,GACjB,OAAS,MAALA,GACFoK,EAASpK,EACF9a,GAEAklB,GAGXllB,EAAEqnB,OAAS,SAAS3F,GAClB,OAAS,MAALA,GACF4D,EAAS/b,EAAOmY,GACT1hB,GAEAslB,GAGJtlB,GAGY,MAAjBuJ,EAAO+d,SACT/d,EAAO+d,OAAS,IAGlB/d,EAAO+d,OAAOC,KAAO,WACnB,OAAOhe,EAAOgT,MAAM,CAAChT,EAAO8V,IAAI,IAAK,EAAG,IAAK9V,EAAO8V,IAAI,IAAK,GAAI,OAGnE9V,EAAO+d,OAAOE,IAAM,WAClB,OAAOje,EAAOgT,MAAM,CAAC,OAAQ,OAAQ,OAAQ,QAAS,CAAC,EAAG,IAAK,IAAK,IAAIjO,KAAK,QAG/E/E,EAAO4a,QAAU,SAASC,EAAMnT,EAAKhQ,GACnC,IAAIwmB,EAAK9J,EAAGzQ,EAAKC,EAAG6N,EAAGqJ,EAAKqD,EAqC5B,GApCA1M,EAAI,CACF7V,IAAKga,OAAOmF,UACZpf,KAAyB,EAApBia,OAAOmF,UACZC,IAAK,EACLC,OAAQ,GACRC,MAAO,GAEK,MAAVxjB,IACFA,EAAS,WACP,OAAO,IAGXwmB,EAAM,SAASpD,GACD,MAAPA,GAAiBlJ,MAAMkJ,KAC1BrJ,EAAEwJ,OAAOxd,KAAKqd,GACdrJ,EAAEuJ,KAAOF,EACLA,EAAMrJ,EAAE7V,MACV6V,EAAE7V,IAAMkf,GAENA,EAAMrJ,EAAE9V,MACV8V,EAAE9V,IAAMmf,GAEVrJ,EAAEyJ,OAAS,IAGfiD,EAAQ,SAASrD,EAAK1G,GACpB,GAAI1c,EAAOojB,EAAK1G,GACd,OAAY,MAAP1M,GAA8B,aAAd1P,GAAK0P,GACjBwW,EAAIxW,EAAIoT,IACE,MAAPpT,GAA8B,WAAd1P,GAAK0P,IAAmC,WAAd1P,GAAK0P,GAClDwW,EAAIpD,EAAIpT,IAERwW,EAAIpD,IAIE,UAAf9iB,GAAK6iB,GACP,IAAKjX,EAAI,EAAGD,EAAMkX,EAAK/lB,OAAQ8O,EAAID,EAAKC,IACtCkX,EAAMD,EAAKjX,GACXua,EAAMrD,QAGR,IAAK1G,KAAKyG,EACRC,EAAMD,EAAKzG,GACX+J,EAAMrD,EAAK1G,GAOf,OAJA3C,EAAE0J,OAAS,CAAC1J,EAAE7V,IAAK6V,EAAE9V,KACrB8V,EAAE2J,OAAS,SAASrW,EAAMsR,GACxB,OAAOrW,EAAOob,OAAO3J,EAAG1M,EAAMsR,IAEzB5E,GAGTzR,EAAOob,OAAS,SAASP,EAAM9V,EAAMsR,GACnC,IAAII,EAAIC,EAAI0H,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAaC,EAAMC,EAAWC,EAASC,EAAcC,EAAMvqB,EAAGE,EAAGsqB,EAAWjE,EAAQkE,EAAS1jB,EAAK2jB,EAASC,EAAShpB,EAAGipB,EAAUC,EAAc9b,EAAGrJ,EAAGolB,EAAIC,EAAI/b,EAAKyO,EAAMuN,EAAOC,EAAOC,EAAOC,EAAOC,EAAOlN,EAAMiD,EAAMC,EAAMC,EAAMgK,EAAMC,EAAMC,GAAMC,GAAMC,GAAaC,GAAiBlM,GAAGtX,GAAOke,GAAQjW,GAgBnW,GAfY,MAARD,IACFA,EAAO,SAEE,MAAPsR,IACFA,EAAM,GAEW,UAAfre,GAAK6iB,KACPA,EAAO7a,EAAO4a,QAAQC,IAExBjf,EAAMif,EAAKjf,IACXD,GAAMkf,EAAKlf,IACLkf,EAAKG,IACXC,GAASJ,EAAKI,OAAO/V,MAAK,SAAS9K,EAAGC,GACpC,OAAOD,EAAIC,KAED,IAARgc,EACF,MAAO,CAACza,EAAKD,IAOf,GALAyf,EAAS,GACiB,MAAtBrW,EAAKwQ,OAAO,EAAG,KACjB6F,EAAO3d,KAAK7B,GACZwf,EAAO3d,KAAK9B,KAEY,MAAtBoJ,EAAKwQ,OAAO,EAAG,GAAY,CAE7B,IADA6F,EAAO3d,KAAK7B,GACP/G,EAAI+O,EAAI,EAAGC,EAAMwS,EAAM,EAAG,GAAKxS,EAAMD,GAAKC,EAAMD,GAAKC,EAAKhP,EAAI,GAAKgP,IAAQD,IAAMA,EACpFwX,EAAO3d,KAAK7B,EAAO/G,EAAIwhB,GAAQ1a,GAAMC,IAEvCwf,EAAO3d,KAAK9B,SACP,GAA0B,MAAtBoJ,EAAKwQ,OAAO,EAAG,GAAY,CACpC,GAAI3Z,GAAO,EACT,KAAM,sDAKR,IAHA2jB,EAAUlqB,KAAKmrB,OAAS7e,EAAI/F,GAC5B0jB,EAAUjqB,KAAKmrB,OAAS7e,EAAIhG,IAC5Byf,EAAO3d,KAAK7B,GACP/G,EAAImQ,GAAI,EAAGsN,EAAO+D,EAAM,EAAG,GAAK/D,EAAOtN,IAAKsN,EAAOtN,IAAKsN,EAAMzd,EAAI,GAAKyd,IAAStN,KAAMA,GACzFoW,EAAO3d,KAAKwE,GAAI,GAAIsd,EAAW1qB,EAAIwhB,GAAQiJ,EAAUC,KAEvDnE,EAAO3d,KAAK9B,SACP,GAA0B,MAAtBoJ,EAAKwQ,OAAO,EAAG,GAAY,CAEpC,IADA6F,EAAO3d,KAAK7B,GACP/G,EAAI4hB,EAAK,EAAG1D,EAAOsD,EAAM,EAAG,GAAKtD,EAAO0D,GAAM1D,EAAO0D,GAAM1D,EAAMle,EAAI,GAAKke,IAAS0D,IAAOA,EAC7Flc,GAAK0gB,GAAOnmB,OAAS,GAAKD,EAAIwhB,EAC9BsJ,EAAKvqB,EAAMmF,GACPolB,IAAOplB,EACT6gB,EAAO3d,KAAKwd,GAAO0E,KAEnBC,EAAKrlB,EAAIolB,EACTvE,EAAO3d,KAAKwd,GAAO0E,IAAO,EAAIC,GAAM3E,GAAO0E,EAAK,GAAKC,IAGzDxE,EAAO3d,KAAK9B,SACP,GAA0B,MAAtBoJ,EAAKwQ,OAAO,EAAG,GAAY,CAepC,IARA/e,EAAIykB,GAAOnmB,OACXiqB,EAAc,IAAI7mB,MAAM1B,GACxB2oB,EAAe,IAAIjnB,MAAMme,GACzBiK,IAAS,EACTb,EAAW,EACXR,EAAY,KACZA,EAAY,GACZA,EAAUxhB,KAAK7B,GACV/G,EAAI6hB,EAAK,EAAGV,EAAOK,EAAM,EAAG,GAAKL,EAAOU,GAAMV,EAAOU,GAAMV,EAAMnhB,EAAI,GAAKmhB,IAASU,IAAOA,EAC7FuI,EAAUxhB,KAAK7B,EAAO/G,EAAIwhB,GAAQ1a,GAAMC,IAE1CqjB,EAAUxhB,KAAK9B,IACf,MAAO2kB,GAAQ,CACb,IAAKvrB,EAAIqpB,EAAK,EAAGnI,EAAOI,EAAM,EAAG,GAAKJ,EAAOmI,GAAMnI,EAAOmI,GAAMnI,EAAMlhB,EAAI,GAAKkhB,IAASmI,IAAOA,EAC7Fe,EAAapqB,GAAK,EAEpB,IAAKF,EAAIwpB,EAAK,EAAGnI,EAAO1f,EAAI,EAAG,GAAK0f,EAAOmI,GAAMnI,EAAOmI,GAAMnI,EAAMrhB,EAAI,GAAKqhB,IAASmI,IAAOA,EAAI,CAG/F,IAFAthB,GAAQke,GAAOpmB,GACf2qB,EAAU5J,OAAOmF,UACZhmB,EAAIupB,EAAK,EAAG4B,EAAO7J,EAAM,EAAG,GAAK6J,EAAO5B,GAAM4B,EAAO5B,GAAM4B,EAAMnrB,EAAI,GAAKmrB,IAAS5B,IAAOA,EAC7Fc,EAAO3f,EAAIwf,EAAUlqB,GAAKgI,IACtBqiB,EAAOI,IACTA,EAAUJ,EACVJ,EAAOjqB,GAGXoqB,EAAaH,KACbD,EAAYlqB,GAAKmqB,EAGnB,IADAU,EAAe,IAAIxnB,MAAMme,GACpBthB,EAAIwpB,EAAK,EAAG4B,EAAO9J,EAAM,EAAG,GAAK8J,EAAO5B,GAAM4B,EAAO5B,GAAM4B,EAAMprB,EAAI,GAAKorB,IAAS5B,IAAOA,EAC7FmB,EAAa3qB,GAAK,KAEpB,IAAKF,EAAI2pB,EAAK,EAAG4B,GAAO5pB,EAAI,EAAG,GAAK4pB,GAAO5B,GAAM4B,GAAO5B,GAAM4B,GAAMvrB,EAAI,GAAKurB,KAAS5B,IAAOA,EAC3FU,EAAUH,EAAYlqB,GACQ,OAA1B6qB,EAAaR,GACfQ,EAAaR,GAAWjE,GAAOpmB,GAE/B6qB,EAAaR,IAAYjE,GAAOpmB,GAGpC,IAAKE,EAAI0pB,EAAK,EAAG4B,GAAOhK,EAAM,EAAG,GAAKgK,GAAO5B,GAAM4B,GAAO5B,GAAM4B,GAAMtrB,EAAI,GAAKsrB,KAAS5B,IAAOA,EAC7FiB,EAAa3qB,IAAM,EAAIoqB,EAAapqB,GAGtC,IADAurB,IAAS,EACJvrB,EAAI2pB,EAAK,EAAGmB,EAAQxJ,EAAM,EAAG,GAAKwJ,EAAQnB,GAAMmB,EAAQnB,GAAMmB,EAAO9qB,EAAI,GAAK8qB,IAAUnB,IAAOA,EAClG,GAAIgB,EAAa3qB,KAAOkqB,EAAUpqB,GAAI,CACpCyrB,IAAS,EACT,MAGJrB,EAAYS,EACZD,IACIA,EAAW,MACba,IAAS,GAIb,IADAjB,EAAY,GACPtqB,EAAI4pB,EAAK,EAAGmB,EAAQzJ,EAAM,EAAG,GAAKyJ,EAAQnB,GAAMmB,EAAQnB,GAAMmB,EAAO/qB,EAAI,GAAK+qB,IAAUnB,IAAOA,EAClGU,EAAUtqB,GAAK,GAEjB,IAAKF,EAAI+pB,EAAK,EAAGmB,EAAQvpB,EAAI,EAAG,GAAKupB,EAAQnB,GAAMmB,EAAQnB,GAAMmB,EAAOlrB,EAAI,GAAKkrB,IAAUnB,IAAOA,EAChGM,EAAUH,EAAYlqB,GACtBwqB,EAAUH,GAASzhB,KAAKwd,GAAOpmB,IAGjC,IADA0rB,GAAkB,GACbxrB,EAAI8pB,EAAK,EAAGmB,EAAQ3J,EAAM,EAAG,GAAK2J,EAAQnB,GAAMmB,EAAQnB,GAAMmB,EAAOjrB,EAAI,GAAKirB,IAAUnB,IAAOA,EAClG0B,GAAgB9iB,KAAK4hB,EAAUtqB,GAAG,IAClCwrB,GAAgB9iB,KAAK4hB,EAAUtqB,GAAGsqB,EAAUtqB,GAAGD,OAAS,IAM1D,IAJAyrB,GAAkBA,GAAgBrb,MAAK,SAAS9K,EAAGC,GACjD,OAAOD,EAAIC,KAEb+gB,EAAO3d,KAAK8iB,GAAgB,IACvB1rB,EAAIiqB,EAAK,EAAGmB,EAAQM,GAAgBzrB,OAAS,EAAGgqB,GAAMmB,EAAOprB,EAAIiqB,GAAM,EAC1EzK,GAAIkM,GAAgB1rB,GACf+c,MAAMyC,MAA6B,IAAvB+G,EAAOxe,QAAQyX,KAC9B+G,EAAO3d,KAAK4W,IAIlB,OAAO+G,GAGT1a,EAAU,SAASiT,EAAGza,EAAGrE,GAMvB,IAAIqP,EAAM7J,EAAGkX,EAAGE,EAyBhB,OAxBAvN,EAAOZ,GAAOgB,WACdqP,EAAIzP,EAAK,GAAIhL,EAAIgL,EAAK,GAAIrP,EAAIqP,EAAK,GAC/B0N,MAAM+B,KACRA,EAAI,GAENA,GAAK,IACDA,EAAI,EAAI,GACVtZ,GAAK,EAAInB,GAAK,EACduY,GAAK,EAAIvY,EAAIiH,EAAIhB,EAAQwU,GAAKxT,EAAIlB,EAAUE,EAAQwU,IAAM,EAC1DpC,EAAI,GAAKlX,EAAIoX,IACJkC,EAAI,EAAI,GACjBA,GAAK,EAAI,EACTlC,GAAK,EAAIvY,GAAK,EACdqY,GAAK,EAAIrY,EAAIiH,EAAIhB,EAAQwU,GAAKxT,EAAIlB,EAAUE,EAAQwU,IAAM,EAC1DtZ,EAAI,GAAKoX,EAAIF,KAEboC,GAAK,EAAI,EACTpC,GAAK,EAAIrY,GAAK,EACdmB,GAAK,EAAInB,EAAIiH,EAAIhB,EAAQwU,GAAKxT,EAAIlB,EAAUE,EAAQwU,IAAM,EAC1DlC,EAAI,GAAKF,EAAIlX,IAEfoX,EAAI/P,EAAM7M,EAAI4c,EAAI,GAClBF,EAAI7P,EAAM7M,EAAI0c,EAAI,GAClBlX,EAAIqH,EAAM7M,EAAIwF,EAAI,GACX,CAAK,IAAJoX,EAAa,IAAJF,EAAa,IAAJlX,EAAS6J,EAAKpP,OAAS,EAAIoP,EAAK,GAAK,IAGjE5B,GAAU,WAMR,IAAIjI,EAAGkX,EAAGoC,EAAG9e,EAAG+G,EAAK6V,EAAG5N,EAAK3K,EAoB7B,OAnBA2K,EAAMP,GAAOgB,WAAYmN,EAAI5N,EAAI,GAAI0N,EAAI1N,EAAI,GAAIxJ,EAAIwJ,EAAI,GACzD1E,EAAkB,EAAV9J,KAAK2J,GACbyS,GAAK,IACLF,GAAK,IACLlX,GAAK,IACLuB,EAAMvG,KAAKuG,IAAI6V,EAAGF,EAAGlX,GACrBxF,GAAK4c,EAAIF,EAAIlX,GAAK,EAClBnB,EAAI,EAAI0C,EAAM/G,EACJ,IAANqE,EACFya,EAAI,GAEJA,GAAMlC,EAAIF,GAAME,EAAIpX,IAAM,EAC1BsZ,GAAKte,KAAK+N,MAAMqO,EAAIF,IAAME,EAAIF,IAAME,EAAIpX,IAAMkX,EAAIlX,IAClDsZ,EAAIte,KAAKorB,KAAK9M,GACVtZ,EAAIkX,IACNoC,EAAIxU,EAAQwU,GAEdA,GAAKxU,GAEA,CAAK,IAAJwU,EAASza,EAAGrE,IAGtBmL,EAAO0gB,IAAM,WACX,OAAO,SAAUnc,EAAML,EAAMM,GAC3BA,EAAKjN,UAAYgN,EAAKhN,UACtB,IAAIkN,EAAQ,IAAID,EAAMhH,EAAS+G,EAAKtG,MAAMwG,EAAOP,GACjD,OAAO5M,OAAOkG,KAAYA,EAASA,EAASiH,EAHvC,CAIJ5F,EAAOtI,GAAML,KAAKoO,WAAWtG,OAAO,CAAC,SAAS,gBAGnDuB,EAAOmhB,IAAMhgB,EAEb7B,EAAMtH,UAAUmpB,IAAM,WACpB,OAAOpe,GAAQ7F,KAAKwI,OAGtBlE,EAAkB,SAASgT,EAAMC,EAAMvd,EAAGV,GACxC,IAAIud,EAAIH,EAAKwN,EAAMC,EAAMC,EAAKC,EAAMC,EAAWC,EAAKC,EAAMC,EAAMzM,EAAMC,EAgDtE,MA/CU,QAAN3e,GACF0e,EAAOV,EAAK+B,MACZpB,EAAOV,EAAK8B,OACG,QAAN/f,GACT0e,EAAOV,EAAKqC,MACZ1B,EAAOV,EAAKoC,OACG,QAANrgB,GACT0e,EAAOV,EAAKyC,MACZ9B,EAAOV,EAAKwC,OACG,QAANzgB,GACT0e,EAAOV,EAAK2M,MACZhM,EAAOV,EAAK0M,OACG,QAAN3qB,GAAqB,QAANA,IACxBA,EAAI,MACJ0e,EAAOV,EAAKgD,MACZrC,EAAOV,EAAK+C,OAES,MAAnBhhB,EAAEwf,OAAO,EAAG,KACdoL,EAAOlM,EAAK,GAAIwM,EAAOxM,EAAK,GAAIqM,EAAOrM,EAAK,GAC5CmM,EAAOlM,EAAK,GAAIwM,EAAOxM,EAAK,GAAIqM,EAAOrM,EAAK,IAEzC9C,MAAM+O,IAAU/O,MAAMgP,GASfhP,MAAM+O,GAKN/O,MAAMgP,GAMhBzN,EAAMyC,OAAOC,KALb1C,EAAMyN,EACQ,IAATE,GAAuB,IAATA,GAAqB,QAAN/qB,IAChCirB,EAAME,KAPR/N,EAAMwN,EACQ,IAATI,GAAuB,IAATA,GAAqB,QAANhrB,IAChCirB,EAAMC,KAVN3N,EADEsN,EAAOD,GAAQC,EAAOD,EAAO,IAC1BC,GAAQD,EAAO,KACXC,EAAOD,GAAQA,EAAOC,EAAO,IACjCA,EAAO,IAAMD,EAEbC,EAAOD,EAEdxN,EAAMwN,EAAOlqB,EAAI6c,GAcR,MAAP0N,IACFA,EAAMC,EAAOxqB,GAAKyqB,EAAOD,IAE3BJ,EAAMC,EAAOrqB,GAAKsqB,EAAOD,GACZ9gB,EAAOjK,GAAGod,EAAK6N,EAAKH,IAGnCrhB,EAAiBA,EAAexB,OAAO,WACrC,IAAI2F,EAAKC,EAAGC,EAAKtG,EAGjB,IAFAsG,EAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1CtG,EAAU,GACLqG,EAAI,EAAGD,EAAME,EAAI/O,OAAQ8O,EAAID,EAAKC,IACrC7N,EAAI8N,EAAID,GACRrG,EAAQE,KAAK,CAAC1H,EAAGgL,IAEnB,OAAOxD,EAR8B,IAWvC2D,EAAkB,SAAS6S,EAAMC,EAAMvd,EAAGV,GACxC,IAAIorB,EAAIC,EAGR,OAFAD,EAAKpN,EAAKsC,MACV+K,EAAKpN,EAAKqC,MACHrW,EAAOqW,IAAI8K,GAAMC,EAAKD,GAAM1qB,EAAG,QAGxC+I,EAAe/B,KAAK,CAAC,MAAOyD,IAE5BF,EAAkB,SAAS+S,EAAMC,EAAMvd,EAAGV,GACxC,IAAS0e,EAAMC,EAGf,OAFAD,EAAOV,EAAKxB,MACZmC,EAAOV,EAAKzB,MACC,IAAI1T,EAAM4V,EAAK,GAAKhe,GAAKie,EAAK,GAAKD,EAAK,IAAKA,EAAK,GAAKhe,GAAKie,EAAK,GAAKD,EAAK,IAAKA,EAAK,GAAKhe,GAAKie,EAAK,GAAKD,EAAK,IAAK1e,IAGlIyJ,EAAe/B,KAAK,CAAC,MAAOuD,MAE3B9K,KAAKuG,Q,8CCprFRjH,EAAOlB,QAAU,SAASkB,GAoBzB,OAnBKA,EAAO6rB,kBACX7rB,EAAO8rB,UAAY,aACnB9rB,EAAO+rB,MAAQ,GAEV/rB,EAAOgsB,WAAUhsB,EAAOgsB,SAAW,IACxClqB,OAAOmqB,eAAejsB,EAAQ,SAAU,CACvCksB,YAAY,EACZrM,IAAK,WACJ,OAAO7f,EAAOgc,KAGhBla,OAAOmqB,eAAejsB,EAAQ,KAAM,CACnCksB,YAAY,EACZrM,IAAK,WACJ,OAAO7f,EAAOX,KAGhBW,EAAO6rB,gBAAkB,GAEnB7rB,I,02oBCpBR,IAAImsB,EAAW,EAAQ,QACnBC,EAAiB,EAAQ,QAG7BpsB,EAAOlB,QAAU,SAAUmK,EAAOojB,EAAOC,GACvC,IAAIC,EAAWC,EAUf,OAPEJ,GAE0C,mBAAlCG,EAAYF,EAAMI,cAC1BF,IAAcD,GACdH,EAASK,EAAqBD,EAAUxqB,YACxCyqB,IAAuBF,EAAQvqB,WAC/BqqB,EAAenjB,EAAOujB,GACjBvjB,I,gp1DCfT,IAAIyjB,EAAS,WAAa,IAAIC,EAAI1lB,KAAS2lB,EAAGD,EAAIE,eAAmB/L,EAAG6L,EAAIG,MAAMhM,IAAI8L,EAAG,OAAO9L,EAAG,MAAM,CAACiM,YAAY,cAAc,CAACjM,EAAG,UAAUA,EAAG,sBAAsBA,EAAG,WAAW,IACrLkM,EAAkB,G,wBCDlB,EAAS,WAAa,IAAIL,EAAI1lB,KAAS2lB,EAAGD,EAAIE,eAAmB/L,EAAG6L,EAAIG,MAAMhM,IAAI8L,EAAG,OAAO9L,EAAG,MAAM,CAACmM,MAAM,CAAC,GAAK,cAAc,CAACnM,EAAG,QAAQA,EAAG,cAAcA,EAAG,0BAA0BA,EAAG,UAAU,CAACoM,GAAG,CAAC,QAAUP,EAAIQ,0BAA0BrM,EAAG,YAAY,CAACmM,MAAM,CAAC,YAAcN,EAAIS,gBAAgB,IAC7S,EAAkB,GCDlB,EAAS,WAAa,IAAIT,EAAI1lB,KAAS2lB,EAAGD,EAAIE,eAAmB/L,EAAG6L,EAAIG,MAAMhM,IAAI8L,EAAG,OAAO9L,EAAG,MAAM,CAACiM,YAAY,QAAQ,CAAEJ,EAAIU,YAAcV,EAAIW,MAAOxM,EAAG,MAAM,CAACzS,IAAI,WAAW,CAACyS,EAAG,sBAAsB,GAAI6L,EAAS,MAAE7L,EAAG,MAAM,CAACA,EAAG,kBAAkB,CAACmM,MAAM,CAAC,MAAQN,EAAIW,UAAU,GAAGxM,EAAG,MAAM,CAACA,EAAG,MAAM,CAAC5O,IAAIya,EAAIY,MAAMR,YAAY,mEAAmEE,MAAM,CAAC,GAAK,aAAa,CAACnM,EAAG,WAAW,CAACiM,YAAY,sDAAsDE,MAAM,CAAC,YAAcN,EAAIa,YAAY,UAAYb,EAAIc,UAAU,SAAWd,EAAIe,SAAS,mBAAqB,UAAU,wBAA0Bf,EAAIgB,wBAAwB,SAAW,KAAK,aAAc,EAAM,gBAAiB,EAAM,4BAA8B,UAAU,oBAAsB,MAAM,QAClyB,EAAkB,G,wBCDlB,EAAS,WAAa,IAAIhB,EAAI1lB,KAAS2lB,EAAGD,EAAIE,eAAmB/L,EAAG6L,EAAIG,MAAMhM,IAAI8L,EAAG,OAAO9L,EAAG,MAAM,CAACiM,YAAY,wBAAwB,CAACjM,EAAG,MAAM,CAACmM,MAAM,CAAC,SAAWN,EAAIiB,UAAUV,GAAG,CAAC,aAAeP,EAAIkB,eAAe,kBAAoBlB,EAAImB,uBAAuBhN,EAAG,aAAa,CAACmM,MAAM,CAAC,KAAO,SAAS,CAACnM,EAAG,MAAM,CAACiN,WAAW,CAAC,CAACvpB,KAAK,OAAOwpB,QAAQ,SAASzmB,MAAOolB,EAAIsB,OAAOzpB,MAAQmoB,EAAIuB,QAASC,WAAW,2BAA2BpB,YAAY,yDAAyDqB,MAAO,SACzfzB,EAAIzsB,SAASmuB,KAAO1B,EAAI2B,qBACzB,aACC3B,EAAIzsB,SAAS+kB,IAAM0H,EAAI4B,oBAHke,iBAK1e5B,EAAI6B,mBAAqB,aAAe7B,EAAI8B,gBAAkB,KAAM,CAAC3N,EAAG,MAAM,CAACiM,YAAY,wBAAwBqB,MAAQ,eAAiBzB,EAAI+B,4BAA8B,YAAc/B,EAAIgC,uBAAyB,CAAEhC,EAAW,QAAE7L,EAAG,OAAO,CAAC6L,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAIsB,OAAOzpB,SAASmoB,EAAImC,OAAOhO,EAAG,MAAM,CAACiM,YAAY,yBAAyBqB,MAAQ,eAAiBzB,EAAIoC,6BAA+B,YAAcpC,EAAIqC,wBAA0B,CAAErC,EAAW,QAAE7L,EAAG,OAAO,CAAC6L,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAIsC,YAAYtC,EAAIa,YAAYb,EAAIsB,OAAOxsB,QAAU,MAAMkrB,EAAImC,YAAY,IAChkB,EAAkB,G,yECNlB,EAAS,WAAa,IAAInC,EAAI1lB,KAAS2lB,EAAGD,EAAIE,eAAmB/L,EAAG6L,EAAIG,MAAMhM,IAAI8L,EAAG,OAAO9L,EAAG,MAAM,CAACiM,YAAY,SAASE,MAAM,CAAC,GAAK,UAAU,MAAQ,6BAA6B,iBAAiB,4BAA4B,cAAc,+BAA+B,QAAU,MAAM,MAAQ,OAAO,QAAU,iBAAiB,CAACnM,EAAG,OAAO,CAACA,EAAG,iBAAiB,CAACmM,MAAM,CAAC,WAAa,WAAW,cAAgB,SAAS,YAAc,QAAQ,eAAiB,SAAS,eAAiB,aAAa,GAAGnM,EAAG,IAAI,CAACA,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,sSAAsSpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,46BAA46BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,0SAA0SpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,yQAAyQpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4zBAA4zBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,6xCAA6xCpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ofAAofpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,8hFAA8hFpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ufAAufpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,sSAAsSpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,0eAA0epO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,uMAAuMpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,khBAAkhBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,yXAAyXpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4KAA4KpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,iVAAiVpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,yGAAyGpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,izBAAizBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,8uFAA8uFpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,gQAAgQpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4KAA4KpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,0hBAA0hBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ulBAAulBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,gRAAgRpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,stRAAstRpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,qoDAAqoDpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,y0BAAy0BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,0pBAA0pBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,gUAAgUpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,onBAAonBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ssCAAssCpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,s0BAAs0BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,qjFAAqjFpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,u2CAAu2CpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,0eAA0epO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,6jBAA6jBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4JAA4JpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,odAAodpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,wxBAAwxBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,qMAAqMpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,6RAA6RpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,kWAAkWpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,40BAA40BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,8bAA8bpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,uOAAuOpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,0jBAA0jBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2bAA2bpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,yXAAyXpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,0rBAA0rBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,syBAAsyBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,oIAAoIpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,qgBAAqgBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,+NAA+NpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ymBAAymBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,maAAmapO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,kmBAAkmBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,qUAAqUpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,6NAA6NpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,mVAAmVpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2tDAA2tDpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,mNAAmNpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,q8BAAq8BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2FAA2FpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,04BAA04BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4dAA4dpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,mQAAmQpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,giBAAgiBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,uwBAAuwBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,0jBAA0jBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,8RAA8RpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,yZAAyZpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,utFAAutFpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2KAA2KpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,uTAAuTpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,y0DAAy0DpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,qZAAqZpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,+/BAA+/BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,gRAAgRpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,+8BAA+8BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,iJAAiJpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4PAA4PpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ktBAAktBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,sfAAsfpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2dAA2dpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,oOAAoOpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4kBAA4kBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,+PAA+PpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4RAA4RpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,kHAAkHpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2/CAA2/CpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ufAAufpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,kJAAkJpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,mIAAmIpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,yWAAyWpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,gKAAgKpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4PAA4PpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,yFAAyFpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,sSAAsSpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2vBAA2vBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,6iBAA6iBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4WAA4WpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,iPAAiPpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2pBAA2pBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,mOAAmOpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,8gCAA8gCpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,m8BAAm8BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,s/BAAs/BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,8gBAA8gBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,+XAA+XpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,+xEAA+xEpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,6qBAA6qBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,6hCAA6hCpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,glBAAglBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,+KAA+KpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,qxBAAqxBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4xBAA4xBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,msBAAmsBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2LAA2LpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,+iBAA+iBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,wTAAwTpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,8tBAA8tBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ugBAAugBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,usBAAusBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ygCAAygCpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,q4BAAq4BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,gtCAAgtCpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4lBAA4lBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,m4BAAm4BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,sHAAsHpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,qHAAqHpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,kcAAkcpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,6bAA6bpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,qHAAqHpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ylBAAylBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,mnBAAmnBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,o3MAAo3MpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4KAA4KpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,8gCAA8gCpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,0bAA0bpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ujCAAujCpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,kiBAAkiBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,gPAAgPpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,6bAA6bpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,+aAA+apO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,sSAAsSpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ulBAAulBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,ioBAAioBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,8VAA8VpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,y1BAAy1BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2QAA2QpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,wWAAwWpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,iJAAiJpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,sxBAAsxBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,kHAAkHpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,gQAAgQpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,m3BAAm3BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,gjBAAgjBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,mJAAmJpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2tBAA2tBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,8ZAA8ZpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,suBAAsuBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,wGAAwGpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,qHAAqHpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,8pBAA8pBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,q2CAAq2CpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,gXAAgXpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,spKAAspKpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,2RAA2RpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,wuBAAwuBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,mvCAAmvCpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,0lBAA0lBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,oJAAoJpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,0lBAA0lBpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,4/BAA4/BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,m0BAAm0BpO,EAAG,OAAO,CAACiM,YAAY,OAAOE,MAAM,CAAC,GAAK,KAAK,MAAQN,EAAI7oB,UAAUC,QAAQ,KAAM4oB,EAAIuC,UAAU,EAAI,qfACzv2I,EAAkB,GC6jClBprB,G,oBAAY,EAAhB,SAEA,GACE,MAAF,CACI,SAAJ,CACM,KAAN,OACM,QAAN,OAGE,KAPF,WAQI,MAAJ,CACM,UAAN,IAGE,QAZF,WAaI,KAAJ,yBACA,gDAGE,QAjBF,WAkBI,IAAJ,0CACA,OAEI,MAAJ,6BACM,EAAN,sCACQ,EAAR,sBACU,KAAV,YACU,KAAV,gCACU,SAAV,CAEY,KACZ,2CACA,cACA,UACY,IAAZ,mBAKI,OAAJ,sCACM,IAAN,yBACA,qBACQ,EAAR,gCCxmC4Q,I,YCOxQqrB,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,EAAAA,E,QChBf,MAAMC,EAAoB,CAAChpB,EAAKD,IAAQ,GAAKA,EAAMC,GAE7CipB,EAAiC7B,IACrC,IAAIpnB,EAAKD,EAWT,OATArE,OAAOK,KAAKqrB,GAAahqB,QAAS0O,IAChC,GAAY,YAARA,EAAmB,OAEvB,MAAM3K,EAAQimB,EAAYtb,IAEtB3K,EAAQnB,QAAe3F,IAAR2F,KAAmBA,EAAMmB,IACxCA,EAAQpB,QAAe1F,IAAR0F,KAAmBA,EAAMoB,KAGvC,CAAEnB,MAAKD,QAGHmpB,EAAa,EAAG3B,0BAAyB4B,qBAAoBb,8BAA6BK,+BAA8BJ,wBAAuBK,yBAAwBQ,qBAAoBC,oBAAmBC,qBAAsB,mCAEtO/B,kBACE4B,sDAGIb,sEAGAK,sDAGLC,qDAGAL,iDAGQc,mCACAD,yBACFE,EAAkB,oBAAsB,mBAK7CC,EAAmB,CAACnC,EAAaoC,EAAanC,EAAWoC,KACpE,MAAM,IAAEzpB,EAAG,IAAED,GAAQkpB,EAA8B7B,GAC7CsC,EAAiBV,EAAkBhpB,EAAKD,GACxC8Z,EAAM,GASZ,OARAne,OAAOK,KAAKqrB,GAAahqB,QAAS0O,IAChC,GAAY,YAARA,EAAmB,OAEvB,MAAM3K,EAAQimB,EAAYtb,GACpB6d,EAAaD,GAAkBvoB,EAAQnB,GACvCyJ,EAAM+f,EAAYG,GAAYlgB,MACpCoQ,EAAIhY,KAAK,mBAAmBiK,aAAgB2d,EAAsBpC,EAAN5d,UAEvDoQ,GAGI+P,EAAuB,CAACC,EAASC,KAC5CA,EAAWjoB,KAAKgoB,GAETC,EAAW/O,KAAK,MCVzB,OACEkE,KAAM,KACN5jB,KAAM,KACN+C,KAAM,MAGR,GACE6pB,KAAM,EACNpJ,IAAK,GAGP,GACEzgB,KAAM,WACN2rB,WAAY,CAAd,OACEC,MAAO,CACL5C,YADJ,WAEMvmB,KAAKopB,iBAGTC,MAAO,CACL5C,SAAU,CACRlrB,KAAMd,OACN6uB,QAAS,WAEX3C,SAAU,CACRprB,KAAMd,OACN6uB,QAAS,MAEX9C,UAAW,CACTjrB,KAAMd,OACN6uB,QAAS,WAEX/C,YAAa,CACXhrB,KAAMV,OACN0uB,UAAU,GAEZ7C,wBAAyB,CACvBnrB,KAAMd,OACN6uB,QAAS,WAEXhB,mBAAoB,CAClB/sB,KAAMd,OACN6uB,QAAS,WAEXE,eAAgB,CACdjuB,KAAMkuB,QACNH,SAAS,GAEX7B,4BAA6B,CAC3BlsB,KAAMd,OACN6uB,QAAS,IAEXxB,6BAA8B,CAC5BvsB,KAAMd,OACN6uB,QAAS,IAEX9B,gBAAiB,CACfjsB,KAAMd,OACN6uB,QAAS,qBAEXjC,oBAAqB,CACnB9rB,KAAM4d,OACNmQ,QAAS,IAEXhC,mBAAoB,CAClB/rB,KAAM4d,OACNmQ,SAAU,IAEZ/B,mBAAoB,CAClBhsB,KAAMd,OACN6uB,QAAS,2CAEX5B,sBAAuB,CACrBnsB,KAAMd,OACN6uB,QAAS,IAEXvB,uBAAwB,CACtBxsB,KAAMd,OACN6uB,QAAS,IAEXI,YAAa,CACXnuB,KAAMkuB,QACNH,SAAS,GAEXK,iBAAkB,CAChBpuB,KAAMkuB,QACNH,SAAS,GAEXM,gBAAiB,CACfruB,KAAMd,OACN6uB,QAAS,QAGblL,KAlFF,WAmFI,MAAO,CACL4I,OAAQA,EACR/tB,SAAUA,EACV4wB,KAAMC,SAASC,cAAc,SAC7BpB,YAAa,EAAnB,sDACMqB,WAAY,GACZ/C,SAAS,IAGbgD,SAAU,CACRC,aADJ,WACA,WAKM,OAJArvB,OAAOK,KAAK8E,KAAKmqB,OAAO5D,aAAahqB,SAAQ,SAAnD,GACoB,YAAR0O,GACJ,EAAR,sBAEajL,KAAKgqB,aAGhBI,QAAS,CACPxD,eADJ,SACA,GACM5mB,KAAKgnB,OAASqD,EACdrqB,KAAKsqB,qBACLtqB,KAAK/G,SAAWoxB,EAAQpxB,SACxB+G,KAAKuqB,MAAM,eAAgBF,IAE7BxD,oBAPJ,SAOA,GACM7mB,KAAKgnB,OAAS,CACZ5I,KAAM,KACN5jB,KAAM,KACN+C,KAAM,MAERyC,KAAKinB,SAAU,EACfjnB,KAAKuqB,MAAM,oBAAqBF,IAGlCC,mBAjBJ,WAkBWtqB,KAAKumB,YAAYvmB,KAAKgnB,OAAOxsB,OAAUwF,KAAKwpB,eAG/CxpB,KAAKinB,SAAU,EAFfjnB,KAAKinB,SAAU,GAKnBmC,aAxBJ,WAyBM,IAAN,iBACA,IACA,wBACA,kBAEMppB,KAAKwqB,MAAMX,KAAKY,UAAY1B,EAAqBC,EAAS0B,IAE5DC,eAhCJ,SAgCA,OACM,IAAN,EAKM,OAJAC,EAAY,IAAIC,KAAKC,aAAa/tB,EAAM,CACtCoqB,MAAO,WACP4D,SAAUA,IAER/qB,KAAK2pB,iBACAiB,EACf,UACA,kBACA,iBAEaA,EAAUI,OAAO1qB,IAE1B0nB,YA9CJ,SA8CA,GACM,OAAKhoB,KAAK0pB,YAGH1pB,KAAK2qB,eAAerqB,EAAON,KAAK4pB,gBAAiB5pB,KAAK2mB,UAFpDrmB,IAKb2qB,QA1JF,WA2JInB,SAASoB,KAAKC,YAAYnrB,KAAKwqB,MAAMX,MACrC7pB,KAAKopB,eACLppB,KAAKsqB,sBAEPc,QA/JF,WAgKIprB,KAAKsqB,uBC/NmQ,ICQxQ,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCnBX,EAAS,WAAa,IAAI5E,EAAI1lB,KAAS2lB,EAAGD,EAAIE,eAAmB/L,EAAG6L,EAAIG,MAAMhM,IAAI8L,EAAG,OAAO9L,EAAG,MAAM,CAACiM,YAAY,2GAA2G,CAACjM,EAAG,SAAS,CAACiM,YAAY,8LAA8LE,MAAM,CAAC,KAAO,SAAS,SAAW,KAAK,CAACnM,EAAG,MAAM,CAACiM,YAAY,6CAA6CE,MAAM,CAAC,MAAQ,6BAA6B,KAAO,OAAO,QAAU,cAAc,CAACnM,EAAG,SAAS,CAACiM,YAAY,aAAaE,MAAM,CAAC,GAAK,KAAK,GAAK,KAAK,EAAI,KAAK,OAAS,eAAe,eAAe,OAAOnM,EAAG,OAAO,CAACiM,YAAY,aAAaE,MAAM,CAAC,KAAO,eAAe,EAAI,uHAAuHnM,EAAG,OAAO,CAAC6L,EAAIiC,GAAG,gCACz7B,EAAkB,GCmCtB,GACE,KAAF,mBCrCqZ,ICOjZ,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,I,QClBX,EAAS,WAAa,IAAIjC,EAAI1lB,KAAS2lB,EAAGD,EAAIE,eAAmB/L,EAAG6L,EAAIG,MAAMhM,IAAI8L,EAAG,OAAO9L,EAAG,MAAM,CAACiM,YAAY,2GAA2G,CAACjM,EAAG,SAAS,CAACiM,YAAY,8LAA8LE,MAAM,CAAC,KAAO,SAAS,SAAW,KAAK,CAACnM,EAAG,MAAM,CAACiM,YAAY,eAAe,CAACJ,EAAIiC,GAAG,wBAAwB9N,EAAG,OAAO,CAACiM,YAAY,2BAA2BG,GAAG,CAAC,MAAQP,EAAI2F,eAAe,CAAC3F,EAAIiC,GAAG,gBAAgBjC,EAAIiC,GAAG,uCAAuC9N,EAAG,MAAMA,EAAG,OAAO,CAACiM,YAAY,WAAW,CAACJ,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAIW,MAAMnM,KAAK,eAClwB,EAAkB,GCsBtB,GACE,KAAF,gBACE,MAAF,UACE,QAAF,kBACA,mCC3BmZ,ICO/Y,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,I,QCqBf,GACE,KAAF,WACE,WAAF,CACI,SAAJ,EACI,gBAAJ,EACI,cAAJ,GAQE,MAAF,CACI,YAAJ,CACM,KAAN,OACM,QAAN,mBAGE,QAAF,kBAMA,oCAEE,MAAF,CACI,YAAJ,YACM,KAAN,oBAIE,SAAF,iCACA,gBACI,YAAJ,mBACI,MAAJ,sBACI,UAAJ,gCACI,MAAJ,eALA,IAOI,UAAJ,WACM,MAAN,wCAEI,SAAJ,WACM,MAAN,wCAEI,wBAAJ,WACM,MAAN,0CAGE,QAAF,WACI,KAAJ,mCC1F4X,ICOxX,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,I,QClBX,EAAS,WAAa,IAAIwL,EAAI1lB,KAAS2lB,EAAGD,EAAIE,eAAmB/L,EAAG6L,EAAIG,MAAMhM,IAAI8L,EAAG,OAAO9L,EAAG,MAAM,CAACiM,YAAY,QAAQ,CAACjM,EAAG,MAAM,CAACiM,YAAY,4CAA4C,CAACjM,EAAG,MAAM,CAACiM,YAAY,8EAA8EE,MAAM,CAAC,GAAKN,EAAI4F,cAAc,CAACzR,EAAG,oBAAoB,CAACiM,YAAY,UAAUE,MAAM,CAAC,KAAO,CAAC,MAAO,eAAeC,GAAG,CAAC,MAAQ,SAASsF,GAAQ,OAAO7F,EAAI8F,gBAAgB,YAAY3R,EAAG,MAAM,CAACiM,YAAY,kCAAkC,CAACjM,EAAG,OAAO,CAACiM,YAAY,QAAQ,CAACJ,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAI+F,WAAW/F,EAAI4F,mBAAmBzR,EAAG,oBAAoB,CAACiM,YAAY,UAAUE,MAAM,CAAC,KAAO,CAAC,MAAO,gBAAgBC,GAAG,CAAC,MAAQ,SAASsF,GAAQ,OAAO7F,EAAI8F,gBAAgB,aAAa,KAAK3R,EAAG,MAAM,CAACiM,YAAY,0NAA0N,CAACjM,EAAG,OAAO,CAACiM,YAAY,0EAA0EG,GAAG,CAAC,MAAQ,SAASsF,GAAQ,OAAO7F,EAAIgG,uBAAuB,iBAAkBH,MAAW,CAAC7F,EAAIiC,GAAG,qBAAqB9N,EAAG,OAAO,CAACiM,YAAY,iBAAiBG,GAAG,CAAC,MAAQ,SAASsF,GAAQ,OAAO7F,EAAIgG,uBAAuB,cAAeH,MAAW,CAAC7F,EAAIiC,GAAG,kBAAkB9N,EAAG,OAAO,CAACiM,YAAY,iBAAiBG,GAAG,CAAC,MAAQ,SAASsF,GAAQ,OAAO7F,EAAIgG,uBAAuB,iBAAkBH,MAAW,CAAC7F,EAAIiC,GAAG,qBAAqB9N,EAAG,OAAO,CAACiM,YAAY,iBAAiBG,GAAG,CAAC,MAAQ,SAASsF,GAAQ,OAAO7F,EAAIgG,uBAAuB,eAAgBH,MAAW,CAAC7F,EAAIiC,GAAG,mBAAmB9N,EAAG,OAAO,CAACiM,YAAY,iBAAiBG,GAAG,CAAC,MAAQ,SAASsF,GAAQ,OAAO7F,EAAIgG,uBAAuB,YAAaH,MAAW,CAAC7F,EAAIiC,GAAG,gBAAgB9N,EAAG,OAAO,CAACiM,YAAY,iBAAiBG,GAAG,CAAC,MAAQ,SAASsF,GAAQ,OAAO7F,EAAIgG,uBAAuB,eAAgBH,MAAW,CAAC7F,EAAIiC,GAAG,wBACx8D,EAAkB,GC0EtB,I,UAAA,CACE,KAAF,SACE,KAFF,WAGI,MAAJ,CACM,WAAN,CACA,kBACA,eACA,kBACA,gBACA,aACA,iBAEM,YAAN,IAGE,QAAF,CACI,uBAAJ,cACM,GAAN,GACQ,IAAR,6BACA,8BAEQ,EAAR,qBACA,mCACA,gCACA,yCACA,sCACA,wDACA,wDAEQ,EAAR,qCACQ,EAAR,2CACQ,EAAR,0DAEM,KAAN,oBAEI,gBAAJ,YACM,OAAN,GACQ,IAAR,OACA,qBACA,0CACA,mBACU,MACF,IAAR,OACA,4CACA,mBACA,mBACU,MAEJ,KAAN,MACA,UACA,uDC7H8W,MCO1W,GAAY,eACd,GACA,EACA,GACA,EACA,KACA,WACA,MAIa,M,QClBX,GAAS,WAAa,IAAIjC,EAAI1lB,KAAS2lB,EAAGD,EAAIE,eAAmB/L,EAAG6L,EAAIG,MAAMhM,IAAI8L,EAAG,OAAO9L,EAAG,MAAM,CAAE6L,EAAQ,KAAE7L,EAAG,MAAM,CAACiM,YAAY,wCAAwC,CAACjM,EAAG,OAAO,CAACiM,YAAY,6GAA6G,CAACJ,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAIiG,KAAKC,UAAU,EAAG,UAAUlG,EAAImC,KAAMnC,EAAIW,QAAUX,EAAIiG,KAAM9R,EAAG,MAAM,CAACiM,YAAY,2BAA2B,CAACjM,EAAG,OAAO,CAACiM,YAAY,4CAA4C,CAACJ,EAAIiC,GAAG,4CAA4C9N,EAAG,MAAM6L,EAAIiC,GAAG,IAAIjC,EAAIkC,GAAGlC,EAAIW,YAAYX,EAAImC,QAC7lB,GAAkB,GCmBtB,IACE,KAAF,OACE,SAAF,kBACA,gBACI,KAAJ,WACI,MAAJ,oBAGE,QAAF,kBACA,6BAEE,QAXF,WAYI,KAAJ,YChC4W,MCOxW,GAAY,eACd,GACA,GACA,IACA,EACA,KACA,WACA,MAIa,M,QClBX,GAAS,WAAa,IAAInC,EAAI1lB,KAAS2lB,EAAGD,EAAIE,eAAmB/L,EAAG6L,EAAIG,MAAMhM,IAAI8L,EAAG,OAAQD,EAAa,UAAE7L,EAAG,MAAM,CAACiM,YAAY,wFAAwFJ,EAAImG,GAAInG,EAAa,WAAE,SAASte,GAC9P,IAAI0kB,EAAW1kB,EAAI,GACf2kB,EAAa3kB,EAAI,GACjB3J,EAAS2J,EAAI,GACbiX,EAAMjX,EAAI,GACd,OAAOyS,EAAG,MAAM,CAAC5O,IAAI8gB,EAAWjG,YAAY,wNAAwN,CAACjM,EAAG,MAAM,CAACiM,YAAY,4CAA4C,CAACJ,EAAIiC,GAAG,IAAIjC,EAAIkC,GAAGkE,EAAStzB,QAAQ,WAAY,OAAO2J,QAAQ,KAAK0X,EAAG,MAAMA,EAAG,OAAO,CAACiM,YAAY,+DAA+D,CAACJ,EAAIiC,GAAG,IAAIjC,EAAIkC,GAAGmE,GAAY,SAASlS,EAAG,MAAM,CAACiM,YAAY,QAAQ,CAACjM,EAAG,OAAO,CAACiM,YAAY,4CAA4C,CAACJ,EAAIiC,GAAGjC,EAAIkC,GAAGnqB,EAAOjF,QAAQ,WAAY,OAAO2J,QAAQ,KAAK0X,EAAG,MAAMA,EAAG,OAAO,CAACiM,YAAY,+EAA+E,CAACJ,EAAIiC,GAAGjC,EAAIkC,GAAGvJ,eAAgB,GAAGqH,EAAImC,MACn0B,GAAkB,GC6BtB,IACE,KAAF,YACE,KAFF,WAGI,MAAJ,IAEE,QAAF,kBACA,gBACI,QAAJ,kBAGE,SAAF,kBACA,gBACI,UAAJ,iBACI,MAAJ,0BAGE,QAhBF,WAiBI,KAAJ,YCpDiX,MCO7W,GAAY,eACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIa,M,QClBX,GAAS,WAAa,IAAInC,EAAI1lB,KAAS2lB,EAAGD,EAAIE,eAAmB/L,EAAG6L,EAAIG,MAAMhM,IAAI8L,EAAG,OAAO9L,EAAG,MAAM,CAACiM,YAAY,QAAQ,CAACjM,EAAG,SAAS,CAACiM,YAAY,yHAAyH,CAACjM,EAAG,cAAc,CAACiM,YAAY,MAAME,MAAM,CAAC,GAAK,aAAa,CAACnM,EAAG,oBAAoB,CAACiM,YAAY,uMAAuME,MAAM,CAAC,KAAO,CAAC,MAAO,iBAAiBnM,EAAG,OAAO,CAACiM,YAAY,0OAA0O,CAACJ,EAAIiC,GAAG,2BAA2B,IAAI,MACt4B,GAAkB,GCqBtB,IACE,KAAF,sBACE,SAAF,kBACA,gBACI,KAAJ,eC1B2X,MCOvX,GAAY,eACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIa,M,QCDf,IACE,KAAF,mBACE,WAAF,CACI,SAAJ,EACI,OAAJ,GACI,KAAJ,GACI,UAAJ,GACI,oBAAJ,IAEE,KATF,WAUI,MAAJ,CACM,YAAN,mBAGE,QAAF,CACI,uBAAJ,YACM,KAAN,iBCjC8V,MCO1V,GAAY,eACd,GACA,EACA,GACA,EACA,KACA,WACA,MAIa,M,QCLf,IACE,KAAF,YACE,WAAF,CACI,OAAJ,OACI,OAAJ,OACI,iBAAJ,KClBmV,MCO/U,GAAY,eACd,GACAlC,EACAM,GACA,EACA,KACA,WACA,MAIa,gB,kjJCjBf,IAAIiG,EAAc,EAAQ,QACtBtrB,EAAS,EAAQ,QACjBurB,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAM,EAAQ,QACdC,EAAU,EAAQ,QAClBC,EAAoB,EAAQ,QAC5BC,EAAc,EAAQ,QACtBC,EAAQ,EAAQ,QAChBC,EAAS,EAAQ,QACjBC,EAAsB,EAAQ,QAA8CzyB,EAC5E0yB,EAA2B,EAAQ,QAAmD1yB,EACtFgrB,EAAiB,EAAQ,QAAuChrB,EAChEmI,EAAO,EAAQ,QAA4BA,KAE3CwqB,EAAS,SACTC,EAAelsB,EAAOisB,GACtBE,EAAkBD,EAAa9xB,UAG/BgyB,EAAiBV,EAAQI,EAAOK,KAAqBF,EAIrDI,EAAW,SAAUC,GACvB,IACIvU,EAAOwU,EAAOC,EAAOC,EAAS9V,EAAQhf,EAAQ+I,EAAO5G,EADrD6E,EAAKitB,EAAYU,GAAU,GAE/B,GAAiB,iBAAN3tB,GAAkBA,EAAGhH,OAAS,EAGvC,GAFAgH,EAAK8C,EAAK9C,GACVoZ,EAAQpZ,EAAG+tB,WAAW,GACR,KAAV3U,GAA0B,KAAVA,GAElB,GADAwU,EAAQ5tB,EAAG+tB,WAAW,GACR,KAAVH,GAA0B,MAAVA,EAAe,OAAO7T,SACrC,GAAc,KAAVX,EAAc,CACvB,OAAQpZ,EAAG+tB,WAAW,IACpB,KAAK,GAAI,KAAK,GAAIF,EAAQ,EAAGC,EAAU,GAAI,MAC3C,KAAK,GAAI,KAAK,IAAKD,EAAQ,EAAGC,EAAU,GAAI,MAC5C,QAAS,OAAQ9tB,EAInB,IAFAgY,EAAShY,EAAGvF,MAAM,GAClBzB,EAASgf,EAAOhf,OACX+I,EAAQ,EAAGA,EAAQ/I,EAAQ+I,IAI9B,GAHA5G,EAAO6c,EAAO+V,WAAWhsB,GAGrB5G,EAAO,IAAMA,EAAO2yB,EAAS,OAAO/T,IACxC,OAAOL,SAAS1B,EAAQ6V,GAE5B,OAAQ7tB,GAKZ,GAAI4sB,EAASU,GAASC,EAAa,UAAYA,EAAa,QAAUA,EAAa,SAAU,CAS3F,IARA,IAgBqB3hB,EAhBjBoiB,EAAgB,SAAgB/sB,GAClC,IAAIjB,EAAKwI,UAAUxP,OAAS,EAAI,EAAIiI,EAChC8kB,EAAQplB,KACZ,OAAOolB,aAAiBiI,IAElBP,EAAiBP,GAAM,WAAcM,EAAgBS,QAAQ7zB,KAAK2rB,MAAagH,EAAQhH,IAAUuH,GACjGN,EAAkB,IAAIO,EAAaG,EAAS1tB,IAAM+lB,EAAOiI,GAAiBN,EAAS1tB,IAElFnE,EAAO8wB,EAAcS,EAAoBG,GAAgB,8LAQhEvlB,MAAM,KAAM/O,EAAI,EAAQ4C,EAAK7C,OAASC,EAAGA,IACrC6zB,EAAIS,EAAc3hB,EAAM/P,EAAK5C,MAAQ6zB,EAAIkB,EAAepiB,IAC1D+Z,EAAeqI,EAAepiB,EAAKyhB,EAAyBE,EAAc3hB,IAG9EoiB,EAAcvyB,UAAY+xB,EAC1BA,EAAgBrH,YAAc6H,EAC9BnB,EAASxrB,EAAQisB,EAAQU,K,ytzDC9E3B,IAAIxV,EAAM,CACT,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,OACb,YAAa,QACb,YAAa,QAId,SAAS0V,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBxmB,EAAE0Q,EAAK2V,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEpzB,KAAO,mBACHozB,EAEP,OAAO/V,EAAI2V,GAEZD,EAAeryB,KAAO,WACrB,OAAOL,OAAOK,KAAK2c,IAEpB0V,EAAeO,QAAUJ,EACzB30B,EAAOlB,QAAU01B,EACjBA,EAAeE,GAAK,Q","file":"js/chunk-b9ce4b08.23122b31.js","sourcesContent":["exports.remove = removeDiacritics;\n\nvar replacementList = [\n  {\n    base: ' ',\n    chars: \"\\u00A0\",\n  }, {\n    base: '0',\n    chars: \"\\u07C0\",\n  }, {\n    base: 'A',\n    chars: \"\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F\",\n  }, {\n    base: 'AA',\n    chars: \"\\uA732\",\n  }, {\n    base: 'AE',\n    chars: \"\\u00C6\\u01FC\\u01E2\",\n  }, {\n    base: 'AO',\n    chars: \"\\uA734\",\n  }, {\n    base: 'AU',\n    chars: \"\\uA736\",\n  }, {\n    base: 'AV',\n    chars: \"\\uA738\\uA73A\",\n  }, {\n    base: 'AY',\n    chars: \"\\uA73C\",\n  }, {\n    base: 'B',\n    chars: \"\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0181\",\n  }, {\n    base: 'C',\n    chars: \"\\u24b8\\uff23\\uA73E\\u1E08\\u0106\\u0043\\u0108\\u010A\\u010C\\u00C7\\u0187\\u023B\",\n  }, {\n    base: 'D',\n    chars: \"\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018A\\u0189\\u1D05\\uA779\",\n  }, {\n    base: 'Dh',\n    chars: \"\\u00D0\",\n  }, {\n    base: 'DZ',\n    chars: \"\\u01F1\\u01C4\",\n  }, {\n    base: 'Dz',\n    chars: \"\\u01F2\\u01C5\",\n  }, {\n    base: 'E',\n    chars: \"\\u025B\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E\\u1D07\",\n  }, {\n    base: 'F',\n    chars: \"\\uA77C\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B\",\n  }, {\n    base: 'G',\n    chars: \"\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E\\u0262\",\n  }, {\n    base: 'H',\n    chars: \"\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D\",\n  }, {\n    base: 'I',\n    chars: \"\\u24BE\\uFF29\\xCC\\xCD\\xCE\\u0128\\u012A\\u012C\\u0130\\xCF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197\",\n  }, {\n    base: 'J',\n    chars: \"\\u24BF\\uFF2A\\u0134\\u0248\\u0237\",\n  }, {\n    base: 'K',\n    chars: \"\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2\",\n  }, {\n    base: 'L',\n    chars: \"\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780\",\n  }, {\n    base: 'LJ',\n    chars: \"\\u01C7\",\n  }, {\n    base: 'Lj',\n    chars: \"\\u01C8\",\n  }, {\n    base: 'M',\n    chars: \"\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C\\u03FB\",\n  }, {\n    base: 'N',\n    chars: \"\\uA7A4\\u0220\\u24C3\\uFF2E\\u01F8\\u0143\\xD1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u019D\\uA790\\u1D0E\",\n  }, {\n    base: 'NJ',\n    chars: \"\\u01CA\",\n  }, {\n    base: 'Nj',\n    chars: \"\\u01CB\",\n  }, {\n    base: 'O',\n    chars: \"\\u24C4\\uFF2F\\xD2\\xD3\\xD4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\xD5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\xD6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\xD8\\u01FE\\u0186\\u019F\\uA74A\\uA74C\",\n  }, {\n    base: 'OE',\n    chars: \"\\u0152\",\n  }, {\n    base: 'OI',\n    chars: \"\\u01A2\",\n  }, {\n    base: 'OO',\n    chars: \"\\uA74E\",\n  }, {\n    base: 'OU',\n    chars: \"\\u0222\",\n  }, {\n    base: 'P',\n    chars: \"\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754\",\n  }, {\n    base: 'Q',\n    chars: \"\\u24C6\\uFF31\\uA756\\uA758\\u024A\",\n  }, {\n    base: 'R',\n    chars: \"\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782\",\n  }, {\n    base: 'S',\n    chars: \"\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784\",\n  }, {\n    base: 'T',\n    chars: \"\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786\",\n  }, {\n    base: 'Th',\n    chars: \"\\u00DE\",\n  }, {\n    base: 'TZ',\n    chars: \"\\uA728\",\n  }, {\n    base: 'U',\n    chars: \"\\u24CA\\uFF35\\xD9\\xDA\\xDB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\xDC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244\",\n  }, {\n    base: 'V',\n    chars: \"\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245\",\n  }, {\n    base: 'VY',\n    chars: \"\\uA760\",\n  }, {\n    base: 'W',\n    chars: \"\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72\",\n  }, {\n    base: 'X',\n    chars: \"\\u24CD\\uFF38\\u1E8A\\u1E8C\",\n  }, {\n    base: 'Y',\n    chars: \"\\u24CE\\uFF39\\u1EF2\\xDD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE\",\n  }, {\n    base: 'Z',\n    chars: \"\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762\",\n  }, {\n    base: 'a',\n    chars: \"\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250\\u0251\",\n  }, {\n    base: 'aa',\n    chars: \"\\uA733\",\n  }, {\n    base: 'ae',\n    chars: \"\\u00E6\\u01FD\\u01E3\",\n  }, {\n    base: 'ao',\n    chars: \"\\uA735\",\n  }, {\n    base: 'au',\n    chars: \"\\uA737\",\n  }, {\n    base: 'av',\n    chars: \"\\uA739\\uA73B\",\n  }, {\n    base: 'ay',\n    chars: \"\\uA73D\",\n  }, {\n    base: 'b',\n    chars: \"\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253\\u0182\",\n  }, {\n    base: 'c',\n    chars: \"\\uFF43\\u24D2\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184\",\n  }, {\n    base: 'd',\n    chars: \"\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\u018B\\u13E7\\u0501\\uA7AA\",\n  }, {\n    base: 'dh',\n    chars: \"\\u00F0\",\n  }, {\n    base: 'dz',\n    chars: \"\\u01F3\\u01C6\",\n  }, {\n    base: 'e',\n    chars: \"\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u01DD\",\n  }, {\n    base: 'f',\n    chars: \"\\u24D5\\uFF46\\u1E1F\\u0192\",\n  }, {\n    base: 'ff',\n    chars: \"\\uFB00\",\n  }, {\n    base: 'fi',\n    chars: \"\\uFB01\",\n  }, {\n    base: 'fl',\n    chars: \"\\uFB02\",\n  }, {\n    base: 'ffi',\n    chars: \"\\uFB03\",\n  }, {\n    base: 'ffl',\n    chars: \"\\uFB04\",\n  }, {\n    base: 'g',\n    chars: \"\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\uA77F\\u1D79\",\n  }, {\n    base: 'h',\n    chars: \"\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265\",\n  }, {\n    base: 'hv',\n    chars: \"\\u0195\",\n  }, {\n    base: 'i',\n    chars: \"\\u24D8\\uFF49\\xEC\\xED\\xEE\\u0129\\u012B\\u012D\\xEF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131\",\n  }, {\n    base: 'j',\n    chars: \"\\u24D9\\uFF4A\\u0135\\u01F0\\u0249\",\n  }, {\n    base: 'k',\n    chars: \"\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3\",\n  }, {\n    base: 'l',\n    chars: \"\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747\\u026D\",\n  }, {\n    base: 'lj',\n    chars: \"\\u01C9\",\n  }, {\n    base: 'm',\n    chars: \"\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F\",\n  }, {\n    base: 'n',\n    chars: \"\\u24DD\\uFF4E\\u01F9\\u0144\\xF1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5\\u043B\\u0509\",\n  }, {\n    base: 'nj',\n    chars: \"\\u01CC\",\n  }, {\n    base: 'o',\n    chars: \"\\u24DE\\uFF4F\\xF2\\xF3\\xF4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\xF5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\xF6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\xF8\\u01FF\\uA74B\\uA74D\\u0275\\u0254\\u1D11\",\n  }, {\n    base: 'oe',\n    chars: \"\\u0153\",\n  }, {\n    base: 'oi',\n    chars: \"\\u01A3\",\n  }, {\n    base: 'oo',\n    chars: \"\\uA74F\",\n  }, {\n    base: 'ou',\n    chars: \"\\u0223\",\n  }, {\n    base: 'p',\n    chars: \"\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755\\u03C1\",\n  }, {\n    base: 'q',\n    chars: \"\\u24E0\\uFF51\\u024B\\uA757\\uA759\",\n  }, {\n    base: 'r',\n    chars: \"\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783\",\n  }, {\n    base: 's',\n    chars: \"\\u24E2\\uFF53\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B\\u0282\",\n  }, {\n    base: 'ss',\n    chars: \"\\xDF\",\n  }, {\n    base: 't',\n    chars: \"\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787\",\n  }, {\n    base: 'th',\n    chars: \"\\u00FE\",\n  }, {\n    base: 'tz',\n    chars: \"\\uA729\",\n  }, {\n    base: 'u',\n    chars: \"\\u24E4\\uFF55\\xF9\\xFA\\xFB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\xFC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289\",\n  }, {\n    base: 'v',\n    chars: \"\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C\",\n  }, {\n    base: 'vy',\n    chars: \"\\uA761\",\n  }, {\n    base: 'w',\n    chars: \"\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73\",\n  }, {\n    base: 'x',\n    chars: \"\\u24E7\\uFF58\\u1E8B\\u1E8D\",\n  }, {\n    base: 'y',\n    chars: \"\\u24E8\\uFF59\\u1EF3\\xFD\\u0177\\u1EF9\\u0233\\u1E8F\\xFF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF\",\n  }, {\n    base: 'z',\n    chars: \"\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763\",\n  }\n];\n\nvar diacriticsMap = {};\nfor (var i = 0; i < replacementList.length; i += 1) {\n  var chars = replacementList[i].chars;\n  for (var j = 0; j < chars.length; j += 1) {\n    diacriticsMap[chars[j]] = replacementList[i].base;\n  }\n}\n\nfunction removeDiacritics(str) {\n  return str.replace(/[^\\u0000-\\u007e]/g, function(c) {\n    return diacriticsMap[c] || c;\n  });\n}\n\nexports.replacementList = replacementList;\nexports.diacriticsMap = diacriticsMap;\n","var toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar replace = ''.replace;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace.call(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (ch.charAt(0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return str.slice(0, position);\n      case \"'\": return str.slice(tailPos);\n      case '<':\n        capture = namedCaptures[ch.slice(1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","\"use strict\";\n\nconst codes = require(\"./codes.json\");\nconst removeDiacritics = require(\"diacritics\").remove;\nconst registeredLocales = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nconst alpha2 = {},\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\n\ncodes.forEach(function (codeInformation) {\n  const s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\n/**\n * @private\n * @param {number} code\n */\nfunction formatNumericCode(code) {\n  return String(\"000\" + (code ? code : \"\")).slice(-3);\n}\n\n/**\n * @private\n * Avoid using obj.hasOwnProperty directly as `hasOwnProperty` could be a\n * property in itself ({ hasOwnProperty: 1 }) and cause weird bugs\n * https://eslint.org/docs/rules/no-prototype-builtins\n */\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * @private\n * Pass localeList through a filter and return a newLocaleList obj\n * with the same structure of the old localeList.\n *\n * @param {LocalizedCountryNames} localeList  Local List in raw\n * @param {Function} filter    callback to set filter rule\n * @return {String | String[]} new filtered Local List\n */\nfunction localeFilter(localeList, filter) {\n  return Object.keys(localeList).reduce(function (newLocaleList, alpha2) {\n    const nameList = localeList[alpha2];\n    newLocaleList[alpha2] = filter(nameList, alpha2);\n    return newLocaleList;\n  }, {});\n}\n\n/**\n * @private\n * Preserve for getName & getNames\n *\n * @param {GetNameOptions.select} type all | official | alias\n * @param countryNameList  string array of country's\n *                         official name and alias\n * @return {String | String[]} of a country name\n */\nfunction filterNameBy(type, countryNameList) {\n  switch (type) {\n    case \"official\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[0]\n        : countryNameList;\n\n    case \"all\":\n      return typeof countryNameList === \"string\"\n        ? [countryNameList]\n        : countryNameList;\n\n    case \"alias\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[1] || countryNameList[0]\n        : countryNameList;\n\n    default:\n      throw new TypeError(\n        \"LocaleNameType must be one of these: all, official, alias!\"\n      );\n  }\n}\n\n/**\n * Register countries in browsers' environment:\n * @param {object} localeData\n * @example countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n * @return void\n */\nexports.registerLocale = function (localeData) {\n  if (!localeData.locale) {\n    throw new TypeError(\"Missing localeData.locale\");\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError(\"Missing localeData.countries\");\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n};\n\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports.alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  const padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {\n  const padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexports.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n    if (code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n    if (code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports.toAlpha2 = toAlpha2;\n\n/**\n * @param {string | number | Alpha2Code | Alpha3Code} code\n * @param {String} lang          language for country name\n * @param {GetNameOptions} options\n * @return {String | String[] | undefined}  name\n */\nexports.getName = function (code, lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  try {\n    const codeMaps = registeredLocales[lang.toLowerCase()];\n    const nameList = codeMaps[toAlpha2(code)];\n    return filterNameBy(options.select, nameList);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/**\n * @param {String} lang             language for country names\n * @param {GetNameOptions} options   getNames Options\n * @return {LocalizedCountryNames}  country code\n *                                  mapped to county name\n */\nexports.getNames = function (lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  const localeList = registeredLocales[lang.toLowerCase()];\n  if (localeList === undefined) return {};\n  return localeFilter(localeList, function (nameList) {\n    return filterNameBy(options.select, nameList);\n  });\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => string.toLowerCase();\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getSimpleAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => removeDiacritics(string.toLowerCase());\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\nexports.getAlpha2Codes = function () {\n  return alpha2;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getSimpleAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getSimpleAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha3Codes = function () {\n  return alpha3;\n};\n\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function () {\n  return numeric;\n};\n\n/*\n * @return Array of supported languages\n */\nexports.langs = function () {\n  return Object.keys(registeredLocales);\n};\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\nexports.isValid = function (code) {\n  if (!code) {\n    return false;\n  }\n\n  const coerced = code.toString().toUpperCase();\n  return (\n    hasOwnProperty(alpha3, coerced) ||\n    hasOwnProperty(alpha2, coerced) ||\n    hasOwnProperty(numeric, coerced)\n  );\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n});\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","export * from \"-!../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../vue-loader/lib/loaders/stylePostLoader.js!../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=8602dc46&scoped=true&lang=css&\"","\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.4.1';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    if (xyz[3] > 1) {\n      xyz[3] = 1;\n    }\n    return new Color(clip_rgb(xyz));\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'auto';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'auto';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex('rgb');\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    rgba = this._rgb;\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        }\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val) || val === null) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    f.nodata = function(d) {\n      if (d != null) {\n        _nacol = chroma(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"stats-page\"},[_c('Header'),_c('stats-page-content'),_c('Footer')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"chart-map\"}},[_c('date'),_c('data-cards'),_c('router-link-to-country'),_c('nav-bar',{on:{\"clicked\":_vm.onClickTypeOfCasesData}}),_c('chart-map',{attrs:{\"chartToShow\":_vm.chartToShow}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pb-4\"},[(_vm.isLoading && !_vm.error)?_c('div',{ref:\"loading\"},[_c('chart-map-loading')],1):(_vm.error)?_c('div',[_c('chart-map-error',{attrs:{\"error\":_vm.error}})],1):_c('div',[_c('div',{key:_vm.theme,staticClass:\"w-full max-w-full bg-pink-50 dark:bg-dark-mode-bg2 py-4 md:pt-16\",attrs:{\"id\":\"chartMap\"}},[_c('MapChart',{staticClass:\"w-full px-2 mx-auto sm:w-11/12 md:w-10/12 lg:w-9/12\",attrs:{\"countryData\":_vm.countryData,\"highColor\":_vm.highColor,\"lowColor\":_vm.lowColor,\"countryStrokeColor\":\"#909090\",\"defaultCountryFillColor\":_vm.defaultCountryFillColor,\"LangUser\":\"en\",\"currencyAdd\":false,\"showEmptyValue\":false,\"legendHeaderBackgroundColor\":\"#FDF2F8\",\"positionLeftTooltip\":0}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vue-world-map h-full\"},[_c('Map',{attrs:{\"codeLang\":_vm.LangUser},on:{\"hoverCountry\":_vm.onHoverCountry,\"hoverLeaveCountry\":_vm.onHoverLeaveCountry}}),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.legend.name && _vm.notShow),expression:\"legend.name && notShow\"}],staticClass:\"vue-map-legend text-xs md:text-sm w-36 md:w-44 min-h-0\",style:('left:' +\n          (_vm.position.left + _vm.positionLeftTooltip) +\n          'px; top: ' +\n          (_vm.position.top + _vm.positionTopTooltip) +\n          'px;' +\n          \"box-shadow:\" + _vm.legendBoxShadowCss + \"; border: \" + _vm.legendBorderCss + \";\")},[_c('div',{staticClass:\"vue-map-legend-header\",style:((\"background: \" + _vm.legendHeaderBackgroundColor + \"; color: \" + _vm.legendFontColorHeader))},[(_vm.notShow)?_c('span',[_vm._v(_vm._s(_vm.legend.name))]):_vm._e()]),_c('div',{staticClass:\"vue-map-legend-content\",style:((\"background: \" + _vm.legendContentBackgroundColor + \"; color: \" + _vm.legendFontColorContent))},[(_vm.notShow)?_c('span',[_vm._v(_vm._s(_vm.renderValue(_vm.countryData[_vm.legend.code]) || 0))]):_vm._e()])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('svg',{staticClass:\"h-full\",attrs:{\"id\":\"map-svg\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"xmlns:amcharts\":\"http://amcharts.com/ammap\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\",\"version\":\"1.1\",\"width\":\"100%\",\"viewBox\":\"0 0 1008 650\"}},[_c('defs',[_c('amcharts:ammap',{attrs:{\"projection\":\"mercator\",\"leftLongitude\":\"-169.6\",\"topLatitude\":\"83.68\",\"rightLongitude\":\"190.25\",\"bottomLatitude\":\"-55.55\"}})],1),_c('g',[_c('path',{staticClass:\"land\",attrs:{\"id\":\"AE\",\"title\":_vm.countries.getName('AE', _vm.codeLang),\"d\":\"M619.87,393.72L620.37,393.57L620.48,394.41L622.67,393.93L624.99,394.01L626.68,394.1L628.6,392.03L630.7,390.05L632.47,388.15L633,389.2L633.38,391.64L631.95,391.65L631.72,393.65L632.22,394.07L630.95,394.67L630.94,395.92L630.12,397.18L630.05,398.39L629.48,399.03L621.06,397.51L619.98,394.43z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"AF\",\"title\":_vm.countries.getName('AF', _vm.codeLang),\"d\":\"M646.88,356.9L649.74,358.2L651.85,357.74L652.44,356.19L654.65,355.67L656.23,354.62L656.79,351.83L659.15,351.15L659.59,349.9L660.92,350.84L661.76,350.95L663.32,350.98L665.44,351.72L666.29,352.14L668.32,351.02L669.27,351.69L670.17,350.09L671.85,350.16L672.28,349.64L672.58,348.21L673.79,346.98L675.3,347.78L675,348.87L675.85,349.04L675.58,351.99L676.69,353.14L677.67,352.4L678.92,352.06L680.66,350.49L682.59,350.75L685.49,350.75L685.99,351.76L684.35,352.15L682.93,352.8L679.71,353.2L676.7,353.93L675.06,355.44L675.72,356.9L676.05,358.6L674.65,360.03L674.77,361.33L674,362.55L671.33,362.44L672.43,364.66L670.65,365.51L669.46,367.51L669.61,369.49L668.51,370.41L667.48,370.11L665.33,370.54L665.03,371.45L662.94,371.45L661.38,373.29L661.28,376.04L657.63,377.37L655.68,377.09L655.11,377.79L653.44,377.39L650.63,377.87L645.94,376.23L648.48,373.3L648.25,371.2L646.13,370.65L645.91,368.56L644.99,365.92L646.19,364.09L644.97,363.6L645.74,361.15z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"AL\",\"title\":_vm.countries.getName('AL', _vm.codeLang),\"d\":\"M532.98,334.66L532.63,335.93L533.03,337.52L534.19,338.42L534.13,339.39L533.22,339.93L533.05,341.12L531.75,342.88L531.27,342.63L531.22,341.83L529.66,340.6L529.42,338.85L529.66,336.32L530.04,335.16L529.57,334.57L529.38,333.38L530.6,331.51L530.77,332.23L531.53,331.89L532.13,332.91L532.8,333.29z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"AM\",\"title\":_vm.countries.getName('AM', _vm.codeLang),\"d\":\"M597.45,337.5L601.35,336.92L601.93,337.9L603,338.54L602.43,339.46L603.93,340.72L603.14,341.88L604.33,342.87L605.59,343.46L605.65,345.96L604.63,346.06L603.49,343.98L603.5,343.43L602.26,343.44L601.43,342.46L600.85,342.56L599.74,341.5L597.66,340.59L597.93,338.8z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"AO\",\"title\":_vm.countries.getName('AO', _vm.codeLang),\"d\":\"M521.03,479.78l0.69,2.09l0.8,1.68l0.64,0.91l1.07,1.47l1.85,-0.23l0.93,-0.4l1.55,0.4l0.42,-0.7l0.7,-1.64l1.74,-0.11l0.15,-0.49l1.43,-0.01l-0.24,1.01l3.4,-0.02l0.05,1.77l0.57,1.09l-0.41,1.7l0.21,1.74l0.94,1.05l-0.15,3.37l0.69,-0.26l1.22,0.07l1.74,-0.42l1.28,0.17l0.3,0.88l-0.32,1.38l0.49,1.34l-0.42,1.07l0.24,0.99l-5.84,-0.04l-0.13,9.16l1.89,2.38l1.83,1.82l-5.15,1.19l-6.79,-0.41l-1.94,-1.4l-11.37,0.13l-0.42,0.21l-1.67,-1.32l-1.82,-0.09l-1.68,0.5l-1.35,0.56l-0.26,-1.83l0.39,-2.55l0.97,-2.65l0.15,-1.24l0.91,-2.59l0.67,-1.17l1.61,-1.87l0.9,-1.27l0.29,-2.11l-0.15,-1.61l-0.84,-1.01l-0.75,-1.72l-0.69,-1.69l0.15,-0.59l0.86,-1.12l-0.85,-2.72l-0.57,-1.88l-1.4,-1.77l0.27,-0.54l1.16,-0.38l0.81,0.05l0.98,-0.34L521.03,479.78zM510.12,479.24l-0.71,0.3l-0.75,-2.1l1.13,-1.21l0.85,-0.47l1.05,0.96l-1.02,0.59l-0.46,0.72L510.12,479.24z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"AR\",\"title\":_vm.countries.getName('AR', _vm.codeLang),\"d\":\"M291.6,648.91l-2.66,0.25l-1.43,-1.73l-1.69,-0.13l-3,0l0,-10.57l1.08,2.15l1.4,3.53l3.65,2.87l3.93,1.21L291.6,648.91zM293.1,526.47l1.65,2.18l1.09,-2.43l3.2,0.12l0.45,0.64l5.15,4.94l2.29,0.46l3.43,2.26l2.89,1.2l0.4,1.36l-2.76,4.73l2.83,0.85l3.15,0.48l2.22,-0.5l2.54,-2.4l0.46,-2.74l1.39,-0.59l1.41,1.79l-0.06,2.49l-2.36,1.73l-1.88,1.28l-3.16,3.08l-3.74,4.37l-0.7,2.59l-0.75,3.37l0.03,3.3l-0.61,0.74l-0.22,2.17l-0.19,1.76l3.56,2.91l-0.38,2.37l1.75,1.51l-0.14,1.7l-2.69,4.52l-4.16,1.91l-5.62,0.75l-3.08,-0.36l0.59,2.15l-0.57,2.72l0.52,1.85l-1.68,1.3l-2.87,0.51l-2.7,-1.35l-1.08,0.97l0.39,3.71l1.89,1.14l1.54,-1.19l0.84,1.96l-2.58,1.18l-2.25,2.38l-0.41,3.91l-0.66,2.11l-2.65,0.01l-2.2,2.04l-0.8,3.01l2.76,2.98l2.68,0.83l-0.96,3.73l-3.31,2.38l-1.82,5.03l-2.56,1.72l-1.15,2.06l0.91,4.64l1.87,2.63l-1.18,-0.23l-2.6,-0.71l-6.78,-0.61l-1.16,-2.63l0.05,-3.33l-1.87,0.28l-0.99,-1.6l-0.25,-4.6l2.15,-1.88l0.89,-2.68l-0.33,-2.11l1.49,-3.52l1.02,-5.35l-0.3,-2.33l1.22,-0.75l-0.3,-1.48l-1.3,-0.78l0.92,-1.63l-1.27,-1.46l-0.65,-4.4l1.13,-0.77l-0.47,-4.54l0.66,-3.75l0.75,-3.22l1.68,-1.3l-0.85,-3.46l-0.01,-3.22l2.12,-2.26l-0.06,-2.87l1.6,-3.31l0.01,-3.09l-0.73,-0.61l-1.29,-5.69l1.73,-3.34l-0.27,-3.11l1,-2.9l1.84,-2.96l1.98,-1.95l-0.84,-1.23l0.59,-1l-0.09,-5.14l3.05,-1.51l0.96,-3.16l-0.34,-0.76l2.34,-2.72L293.1,526.47z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"AT\",\"title\":_vm.countries.getName('AT', _vm.codeLang),\"d\":\"M522.86,309.85L522.65,311.56L521.07,311.57L521.61,312.46L520.68,315.11L520.15,315.8L517.7,315.9L516.28,316.82L513.96,316.51L509.95,315.46L509.33,314.03L506.56,314.75L506.23,315.52L504.53,314.94L503.1,314.83L501.83,314.09L502.26,313.08L502.15,312.34L503,312.12L504.42,313.26L504.82,312.17L507.29,312.35L509.3,311.61L510.64,311.73L511.51,312.58L511.78,311.88L511.38,309.16L512.39,308.62L513.37,306.67L515.46,308.04L517.03,306.3L518.02,305.98L520.2,307.28L521.51,307.06L522.81,307.86L522.58,308.4z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"AU\",\"title\":_vm.countries.getName('AU', _vm.codeLang),\"d\":\"M882.93,588.16l2.71,1.28l1.53,-0.51l2.19,-0.71l1.68,0.25l0.2,4.43l-0.96,1.3l-0.29,3.06l-0.98,-1.05l-1.95,2.67l-0.58,-0.21l-1.72,-0.12l-1.73,-3.28l-0.38,-2.5l-1.62,-3.25l0.07,-1.7L882.93,588.16zM877.78,502.1l1.01,2.25l1.8,-1.08l0.93,1.22l1.35,1.13l-0.29,1.28l0.6,2.48l0.43,1.45l0.71,0.35l0.76,2.5l-0.27,1.52l0.91,1.99l3.04,1.54l1.98,1.41l1.88,1.29l-0.37,0.72l1.6,1.87l1.09,3.25l1.12,-0.66l1.14,1.31l0.69,-0.46l0.48,3.21l1.99,1.87l1.3,1.17l2.19,2.49l0.79,2.49l0.07,1.77l-0.19,1.94l1.34,2.68l-0.16,2.81l-0.49,1.48l-0.76,2.87l0.06,1.86l-0.55,2.34l-1.24,3l-2.08,1.63l-1.02,2.59l-0.94,1.67l-0.83,2.93l-1.08,1.71l-0.71,2.58l-0.36,2.4l0.14,1.11l-1.61,1.22l-3.14,0.13l-2.59,1.45l-1.29,1.38l-1.69,1.54l-2.32,-1.58l-1.72,-0.63l0.44,-1.85l-1.53,0.67l-2.46,2.58l-2.42,-0.97l-1.59,-0.56l-1.6,-0.25l-2.71,-1.03l-1.81,-2.18l-0.52,-2.66l-0.65,-1.75l-1.38,-1.4l-2.7,-0.41l0.92,-1.66l-0.68,-2.52l-1.37,2.35l-2.5,0.63l1.47,-1.88l0.42,-1.95l1.08,-1.65l-0.22,-2.47l-2.28,2.85l-1.75,1.15l-1.07,2.69l-2.19,-1.4l0.09,-1.79l-1.75,-2.43l-1.48,-1.25l0.53,-0.77l-3.6,-2l-1.97,-0.09l-2.7,-1.6l-5.02,0.31l-3.63,1.18l-3.19,1.1l-2.68,-0.22l-2.97,1.7l-2.43,0.77l-0.54,1.75l-1.04,1.36l-2.38,0.08l-1.76,0.3l-2.48,-0.61l-2.02,0.37l-1.92,0.15l-1.67,1.8l-0.82,-0.15l-1.41,0.96l-1.35,1.08l-2.05,-0.13l-1.88,0l-2.97,-2.17l-1.51,-0.64l0.06,-1.93l1.39,-0.46l0.48,-0.76l-0.1,-1.2l0.34,-2.3l-0.31,-1.95l-1.48,-3.29l-0.46,-1.85l0.12,-1.83l-1.12,-2.08l-0.07,-0.93l-1.24,-1.26l-0.35,-2.47l-1.6,-2.48l-0.39,-1.33l1.23,1.35l-0.95,-2.88l1.39,0.9l0.83,1.2l-0.05,-1.59l-1.39,-2.43l-0.27,-0.97l-0.65,-0.92l0.3,-1.77l0.57,-0.75l0.38,-1.52l-0.3,-1.77l1.16,-2.17l0.21,2.29l1.18,-2.07l2.28,-1l1.37,-1.28l2.14,-1.1l1.27,-0.23l0.77,0.37l2.21,-1.11l1.7,-0.33l0.42,-0.65l0.74,-0.27l1.55,0.07l2.95,-0.87l1.52,-1.31l0.72,-1.58l1.64,-1.49l0.13,-1.17l0.07,-1.59l1.96,-2.47l1.18,2.51l1.19,-0.58l-1,-1.38l0.88,-1.41l1.24,0.63l0.34,-2.21l1.53,-1.42l0.68,-1.14l1.41,-0.49l0.04,-0.8l1.23,0.34l0.05,-0.72l1.23,-0.41l1.36,-0.39l2.07,1.32l1.56,1.71l1.75,0.02l1.78,0.27l-0.59,-1.58l1.34,-2.3l1.26,-0.75l-0.44,-0.71l1.22,-1.63l1.7,-1.01l1.43,0.34l2.36,-0.54l-0.05,-1.45l-2.05,-0.94l1.49,-0.41l1.86,0.7l1.49,1.17l2.36,0.73l0.8,-0.29l1.74,0.88l1.64,-0.82l1.05,0.25l0.66,-0.55l1.29,1.41l-0.75,1.53l-1.06,1.16l-0.96,0.1l0.33,1.15l-0.82,1.43l-1,1.41l0.2,0.81l2.23,1.6l2.16,0.93l1.44,1l2.03,1.72l0.79,0l1.47,0.75l0.43,0.9l2.68,0.99l1.85,-1l0.55,-1.57l0.57,-1.29l0.35,-1.59l0.85,-2.3l-0.39,-1.39l0.2,-0.84l-0.32,-1.64l0.37,-2.16l0.54,-0.58l-0.44,-0.95l0.68,-1.51l0.53,-1.56l0.07,-0.81l1.04,-1.06l0.79,1.39l0.19,1.78l0.7,0.34l0.12,1.2l1.02,1.45l0.21,1.62L877.78,502.1z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"AZ\",\"title\":_vm.countries.getName('AZ', _vm.codeLang),\"d\":\"M601.43,342.46l0.83,0.97l1.24,-0.01l-0.01,0.56l1.14,2.08l-1.92,-0.48l-1.42,-1.66l-0.44,-1.37L601.43,342.46zM608.08,337.03l1.24,0.25l0.48,-0.95l1.67,-1.51l1.47,1.97l1.43,2.62l1.31,0.17l0.86,0.99l-2.31,0.29l-0.49,2.82l-0.48,1.26l-1.03,0.84l0.08,1.77l-0.7,0.18l-1.75,-1.87l0.97,-1.78l-0.83,-1.06l-1.05,0.27l-3.31,2.66l-0.06,-2.5l-1.26,-0.59l-1.19,-0.99l0.79,-1.16l-1.49,-1.26l0.56,-0.92l-1.07,-0.64l-0.58,-0.97l0.69,-0.61l2.09,1.07l1.51,0.22l0.38,-0.43l-1.38,-2.02l0.73,-0.52l0.79,0.13L608.08,337.03z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BA\",\"title\":_vm.countries.getName('BA', _vm.codeLang),\"d\":\"M528.54,323.11L529.56,323.1L528.86,324.82L530.21,326.32L529.8,328.14L529.14,328.31L528.61,328.67L527.7,329.56L527.29,331.66L524.81,330.22L523.75,328.61L522.68,327.76L521.39,326.31L520.79,325.1L519.41,323.27L520,321.63L521.01,322.54L521.61,321.72L522.92,321.63L525.33,322.29L527.27,322.23z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BD\",\"title\":_vm.countries.getName('BD', _vm.codeLang),\"d\":\"M735.09,400.41L735.04,402.56L734.06,402.1L734.24,404.51L733.44,402.95L733.28,401.43L732.74,399.98L731.57,398.22L728.99,398.1L729.25,399.35L728.37,401.02L727.17,400.41L726.76,400.96L725.97,400.63L724.89,400.36L724.45,397.88L723.48,395.6L723.95,393.76L722.23,392.94L722.85,391.82L724.6,390.67L722.58,389.04L723.57,386.93L725.79,388.27L727.13,388.43L727.38,390.58L730.04,391L732.65,390.95L734.26,391.48L732.97,394.07L731.71,394.25L730.85,395.98L732.38,397.56L732.84,395.62L733.62,395.61z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BE\",\"title\":_vm.countries.getName('BE', _vm.codeLang),\"d\":\"M484.55,295.91L486.6,296.26L489.2,295.33L490.97,297.28L492.52,298.32L492.2,301.29L491.47,301.45L491.16,303.88L488.71,301.91L487.27,302.25L485.31,300.19L484.01,298.42L482.71,298.35L482.3,296.79z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BF\",\"title\":_vm.countries.getName('BF', _vm.codeLang),\"d\":\"M467.33,436.4L465.41,435.67L464.09,435.78L463.11,436.49L461.85,435.89L461.36,434.96L460.1,434.34L459.91,432.7L460.68,431.49L460.61,430.53L462.84,428.17L463.25,426.21L464.02,425.51L465.38,425.89L466.55,425.31L466.93,424.57L469.11,423.29L469.64,422.39L472.26,421.19L473.81,420.78L474.51,421.33L476.3,421.32L476.08,422.72L476.46,424.03L478.04,425.9L478.12,427.28L481.36,427.93L481.29,429.88L480.68,430.74L479.31,431L478.74,432.24L477.78,432.56L475.32,432.5L474.02,432.28L473.12,432.74L471.88,432.53L467.01,432.66L466.94,434.27z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BG\",\"title\":_vm.countries.getName('BG', _vm.codeLang),\"d\":\"M538.78,325.56L539.59,327.16L540.67,326.87L542.83,327.48L546.95,327.68L548.34,326.69L551.64,325.79L553.68,327.2L555.33,327.61L553.87,329.2L552.85,331.93L553.75,334.09L551.34,333.58L548.48,334.76L548.45,336.62L545.9,336.97L543.93,335.67L541.68,336.7L539.61,336.59L539.41,334.12L538,332.91L538.47,332.37L538.16,331.92L538.63,330.71L539.7,329.52L538.34,327.86L538.09,326.44z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BI\",\"title\":_vm.countries.getName('BI', _vm.codeLang),\"d\":\"M557.52,475.93L557.34,472.56L556.63,471.3L558.34,471.52L559.2,469.93L560.69,470.11L560.85,471.21L561.45,471.84L561.48,472.75L560.79,473.33L559.69,474.79L558.68,475.8z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BJ\",\"title\":_vm.countries.getName('BJ', _vm.codeLang),\"d\":\"M482.8,445.92L480.48,446.25L479.79,444.31L479.92,437.85L479.35,437.27L479.25,435.88L478.27,434.89L477.42,434.06L477.78,432.56L478.74,432.24L479.31,431L480.68,430.74L481.29,429.88L482.23,429.05L483.24,429.04L485.38,430.68L485.27,431.63L485.9,433.31L485.35,434.45L485.64,435.21L484.28,436.96L483.42,437.83L482.89,439.6L482.96,441.39z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BN\",\"title\":_vm.countries.getName('BN', _vm.codeLang),\"d\":\"M795.46,450.77L796.57,449.72L798.96,448.19L798.83,449.57L798.67,451.35L797.33,451.26L796.74,452.21z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BO\",\"title\":_vm.countries.getName('BO', _vm.codeLang),\"d\":\"M299.04,526.35L295.84,526.22L294.75,528.65L293.1,526.47L289.43,525.74L287.1,528.46L285.07,528.87L283.97,524.72L282.47,521.38L283.35,518.51L281.88,517.26L281.51,515.14L280.13,513.14L281.9,510L280.69,507.56L281.34,506.59L280.83,505.52L281.93,504.08L281.99,501.64L282.12,499.62L282.73,498.66L280.3,494.08L282.39,494.32L283.83,494.25L284.46,493.4L286.91,492.25L288.38,491.19L292.05,490.71L291.76,492.83L292.1,493.92L291.87,495.82L294.92,498.37L298.06,498.84L299.16,499.91L301.06,500.48L302.22,501.31L303.98,501.28L305.61,502.13L305.73,503.79L306.28,504.63L306.32,505.88L305.5,505.92L306.58,509.29L311.95,509.41L311.54,511.09L311.84,512.24L313.37,513.06L314.04,514.88L313.54,517.2L312.77,518.49L313.04,520.18L312.16,520.79L312.12,519.88L309.5,518.37L306.9,518.32L302.01,519.18L300.67,521.8L300.6,523.4L299.49,526.99z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BR\",\"title\":_vm.countries.getName('BR', _vm.codeLang),\"d\":\"M313.68,551.79L317.42,547.42L320.59,544.34L322.47,543.06L324.83,541.33L324.89,538.84L323.48,537.05L322.09,537.64L322.64,535.86L323.02,534.04L323.02,532.36L322.01,531.81L320.96,532.3L319.92,532.17L319.59,530.99L319.33,528.22L318.8,527.32L316.91,526.5L315.77,527.09L312.81,526.51L312.99,522.45L312.16,520.79L313.04,520.18L312.77,518.49L313.54,517.2L314.04,514.88L313.37,513.06L311.84,512.24L311.54,511.09L311.95,509.41L306.58,509.29L305.5,505.92L306.32,505.88L306.28,504.63L305.73,503.79L305.61,502.13L303.98,501.28L302.22,501.31L301.06,500.48L299.16,499.91L298.06,498.84L294.92,498.37L291.87,495.82L292.1,493.92L291.76,492.83L292.05,490.71L288.38,491.19L286.91,492.25L284.46,493.4L283.83,494.25L282.39,494.32L280.3,494.08L278.72,494.57L277.44,494.24L277.63,489.94L275.33,491.6L272.86,491.53L271.8,490.02L269.94,489.86L270.53,488.65L268.97,486.93L267.8,484.4L268.54,483.89L268.54,482.7L270.24,481.89L269.96,480.38L270.67,479.4L270.88,478.1L274.08,476.19L276.38,475.66L276.75,475.24L279.28,475.37L280.54,467.72L280.61,466.51L280.17,464.92L278.93,463.9L278.94,461.88L280.52,461.42L281.08,461.71L281.17,460.64L279.53,460.35L279.5,458.61L284.96,458.67L285.89,457.71L286.67,458.59L287.21,460.24L287.74,459.89L289.29,461.37L291.47,461.19L292.01,460.33L294.09,459.68L295.25,459.23L295.57,458.05L297.58,457.25L297.42,456.67L295.05,456.43L294.66,454.67L294.77,452.8L293.52,452.08L294.04,451.82L296.12,452.18L298.35,452.88L299.16,452.22L301.17,451.78L304.31,450.74L305.34,449.67L304.96,448.88L306.42,448.76L307.08,449.4L306.71,450.63L307.67,451.05L308.32,452.35L307.54,453.33L307.09,455.71L307.81,457.12L308.01,458.41L309.74,459.71L311.12,459.85L311.43,459.31L312.31,459.19L313.58,458.7L314.49,457.96L316.04,458.19L316.72,458.09L318.25,458.32L318.5,457.75L318.03,457.2L318.31,456.39L319.44,456.64L320.77,456.35L322.37,456.94L323.6,457.52L324.47,456.76L325.09,456.88L325.48,457.67L326.82,457.47L327.89,456.41L328.75,454.35L330.41,451.8L331.37,451.67L332.06,453.21L333.63,458.09L335.13,458.55L335.21,460.47L333.1,462.76L333.97,463.6L338.93,464.04L339.03,466.83L341.16,465L344.69,466.01L349.34,467.71L350.71,469.34L350.25,470.88L353.51,470.02L358.97,471.5L363.16,471.39L367.3,473.7L370.88,476.83L373.04,477.63L375.44,477.75L376.46,478.63L377.41,482.2L377.88,483.89L376.76,488.55L375.33,490.39L371.38,494.33L369.59,497.54L367.52,500.02L366.82,500.08L366.03,502.18L366.23,507.58L365.45,512.06L365.15,513.99L364.27,515.14L363.77,519.08L360.93,522.96L360.45,526.05L358.18,527.36L357.52,529.17L354.48,529.16L350.07,530.33L348.09,531.68L344.95,532.57L341.65,535.01L339.28,538.07L338.87,540.39L339.34,542.12L338.81,545.3L338.18,546.85L336.22,548.6L333.11,554.28L330.64,556.87L328.73,558.41L327.46,561.57L325.6,563.48L324.82,561.58L326.06,560.01L324.44,557.76L322.24,555.94L319.35,553.86L318.31,553.95L315.5,551.45z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BS\",\"title\":_vm.countries.getName('BS', _vm.codeLang),\"d\":\"M257.86,395.2l-0.69,0.15l-0.71,-1.76l-1.05,-0.89l0.61,-1.95l0.84,0.12l0.98,2.55L257.86,395.2zM257.06,386.51l-3.06,0.5l-0.2,-1.15l1.32,-0.25l1.85,0.09L257.06,386.51zM259.36,386.48l-0.48,2.21l-0.52,-0.4l0.05,-1.63l-1.26,-1.23l-0.01,-0.36L259.36,386.48z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BT\",\"title\":_vm.countries.getName('BT', _vm.codeLang),\"d\":\"M732.36,382.78L733.5,383.78L733.3,385.71L731.01,385.8L728.65,385.59L726.88,386.08L724.33,384.89L724.28,384.26L726.13,381.92L727.64,381.12L729.65,381.85L731.13,381.93z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BW\",\"title\":_vm.countries.getName('BW', _vm.codeLang),\"d\":\"M547.17,515.95L547.73,516.47L548.62,518.18L551.79,521.43L552.99,521.75L553,522.8L553.82,524.7L555.99,525.16L557.78,526.52L553.81,528.74L551.29,531L550.36,533.03L549.52,534.18L547.99,534.43L547.5,535.9L547.21,536.86L545.42,537.58L543.14,537.43L541.8,536.57L540.62,536.19L539.25,536.91L538.56,538.39L537.23,539.32L535.83,540.71L533.82,541.03L533.2,539.94L533.46,538.04L531.79,535.11L531.04,534.65L531.04,525.79L533.8,525.68L533.88,515.11L535.97,515.02L540.29,513.99L541.37,515.2L543.15,514.05L544.01,514.04L545.59,513.38L546.09,513.6z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BY\",\"title\":_vm.countries.getName('BY', _vm.codeLang),\"d\":\"M541.1,284.07L543.81,284.11L546.85,282.31L547.5,279.59L549.8,278.02L549.54,275.82L551.24,274.98L554.26,273.05L557.21,274.31L557.61,275.54L559.08,274.95L561.82,276.13L562.09,278.44L561.49,279.76L563.25,282.91L564.39,283.78L564.22,284.64L566.11,285.47L566.92,286.72L565.83,287.74L563.57,287.58L563.03,288.02L563.69,289.56L564.38,292.49L561.97,292.76L561.11,293.76L560.92,296.02L559.81,295.59L557.28,295.81L556.54,294.76L555.49,295.54L554.44,294.89L552.23,294.8L549.1,293.72L546.27,293.36L544.1,293.46L542.56,294.69L541.22,294.86L541.17,292.85L540.3,290.73L541.98,289.79L542,287.94L541.22,286.16z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"BZ\",\"title\":_vm.countries.getName('BZ', _vm.codeLang),\"d\":\"M225.31,412.96L225.29,412.53L225.63,412.39L226.14,412.74L227.14,410.97L227.67,410.93L227.68,411.36L228.21,411.37L228.17,412.17L227.71,413.44L227.96,413.89L227.67,414.94L227.84,415.21L227.52,416.68L226.97,417.46L226.46,417.55L225.9,418.55L225.07,418.55L225.29,415.27z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CA\",\"title\":_vm.countries.getName('CA', _vm.codeLang),\"d\":\"M198.93,96.23l-0.22,-5.9l3.63,0.58l1.63,0.96l3.35,4.92l-0.76,4.97l-4.15,2.77l-2.28,-3.12L198.93,96.23zM212.14,108.88l0.33,-1.49l-1.97,-2.45l-5.65,-0.19l0.75,3.68l5.25,0.83L212.14,108.88zM248.49,155.83l3.08,5.1l0.81,0.57l3.07,-1.27l3.02,0.2l2.98,0.28l-0.25,-2.64l-4.84,-5.38l-6.42,-1.08l-1.35,0.67L248.49,155.83zM183.06,93.13l-2.71,4.19l6.24,0.52l4.61,4.44l4.58,1.5l-1.09,-5.68l-2.14,-6.73l-7.58,-5.35l-5.5,-2.04l0.2,5.69L183.06,93.13zM208.96,82.89l5.13,-0.12l-2.22,4l-0.04,5.3l3.01,5.76l5.81,1.77l4.96,-0.99l5.18,-10.73l3.85,-4.45l-3.38,-4.97l-2.21,-10.65l-4.6,-3.19l-4.72,-3.68l-3.58,-9.56l-6.52,0.94l1.23,4.15l-2.87,1.25l-1.94,5.32l-1.94,7.46l1.78,7.26L208.96,82.89zM145.21,136.27l3.92,1.95l12.67,-1.3l-5.82,4.77l0.36,3.43l4.26,-0.24l7.07,-4.58l9.5,-1.67l1.71,-5.22l-0.49,-5.57l-2.94,-0.5l-2.5,1.93l-1.1,-4.13l-0.95,-5.7l-2.9,-1.42l-2.57,4.41l4.01,11.05l-4.9,-0.85l-4.98,-6.79l-7.89,-4l-2.64,3.32L145.21,136.27zM167.77,94.21l-3.65,-2.9l-1.5,-0.66l-2.88,4.28l-0.05,2l4.66,0.01L167.77,94.21zM166.31,106.56l0.93,-3.99l-3.95,-2.12l-4.09,1.39l-2.27,4.26l4.16,4.21L166.31,106.56zM195.4,139.8l4.62,-1.11l1.28,-8.25l-0.09,-5.95l-2.14,-5.56l-0.22,1.6l-3.94,-0.7l-4.22,4.09l-3.02,-0.37l0.18,8.92l4.6,-0.87l-0.06,6.47L195.4,139.8zM192.12,185.41l-5.06,-3.93l-4.71,-4.21l-0.87,-6.18l-1.76,-8.92l-3.14,-3.84l-2.79,-1.55l-2.47,1.42l1.99,9.59l-1.41,3.73l-2.29,-8.98l-2.56,-3.11l-3.17,4.81l-3.9,-4.76l-6.24,2.87l1.4,-4.46l-2.87,-1.87l-7.51,5.84l-1.95,3.71l-2.35,6.77l4.9,2.32l4.33,-0.12l-6.5,3.46l1.48,3.13l3.98,0.17l5.99,-0.67l5.42,1.96l-3.66,1.44l-3.95,-0.37l-4.33,1.41l-1.87,0.87l3.45,6.35l2.49,-0.88l3.83,2.15l1.52,3.65l4.99,-0.73l7.1,-1.16l5.26,-2.65l3.26,-0.48l4.82,2.12l5.07,1.22l0.94,-2.86l-1.79,-3.05l4.6,-0.64L192.12,185.41zM199.86,184.43l-1.96,3.54l-2.47,2.49l3.83,3.54l2.28,-0.85l3.78,2.36l1.74,-2.73l-1.71,-3.03l-0.84,-1.53l-1.68,-1.46L199.86,184.43zM182.25,154.98l-2.13,-2.17l-3.76,0.4l-0.95,1.38l4.37,6.75L182.25,154.98zM210.94,168.15l3.01,-6.93l3.34,-1.85l4.19,-8.74l-5.36,-2.47l-5.84,-0.36l-2.78,2.77l-1.47,4.23l-0.04,4.82l1.75,8.19L210.94,168.15zM228.09,145.15l5.76,-0.18l8.04,-1.61l3.59,1.28l4.18,-2.26l1.75,-2.84l-0.63,-4.52l-3,-4.23l-4.56,-0.8l-5.71,0.97l-4.46,2.44l-4.09,-0.94l-3.78,-0.5l-1.78,-2.7l-3.22,-2.61l0.64,-4.43l-2.42,-3.98l-5.52,0.03l-3.11,-3.99l-5.78,-0.8l-1.06,5.1l3.25,3.74l5.8,1.45l2.81,5.09l0.34,5.6l0.97,5.99l7.45,3.42L228.09,145.15zM139.07,126.88l5.21,-5.05l2.62,-0.59l2.16,-4.23l0.38,-9.77l-3.85,1.91l-4.3,-0.18l-5.76,8.19l-4.76,8.98l3.8,2.51L139.07,126.88zM211.25,143.05l1.53,-4.14l-1.02,-3.46l-2.45,-3.92l-4.03,3.02l-1.49,4.92l3.4,2.79L211.25,143.05zM202.94,154.49l-0.73,-2.88l-5,1.26l-3.34,-2.11l-3.32,4.8l3.09,6.28l-5.72,-1.17l-0.06,3.01l6.97,7.05l1.94,3.38l2.7,0.73l4.6,-3.41l0.5,-8.21l-4.24,-4.07L202.94,154.49zM128.95,308.23l-1.16,-2.34l-2.8,-1.77l-1.39,-2.05l-0.95,-1.5l-2.64,-0.46l-1.72,-0.67l-2.94,-0.96l-0.24,1.02l1.08,2.38l2.89,0.78l0.5,1.23l2.51,1.5l0.84,1.51l4.6,1.92L128.95,308.23zM250.65,230.6l-2,-2.11l-2.06,0.5l-0.25,-3.06l-3.21,-2.04l-3.07,-2.27l-1.63,-1.75l-1.43,1.03l-0.52,-2.96l-2.03,-0.55l-0.96,6.13l-0.36,5.11l-2.44,3.14l3.8,-0.6l0.96,3.65l3.99,-3.23l2.78,-3.38l1.57,2.86l4.36,1.51L250.65,230.6zM130.12,178.05l7.38,-4.18V170l3.48,-6.41l6.88,-6.69l3.52,-2.47l-3.01,-4.2l-2.72,-2.95l-7.16,-0.57l-4,-2.16l-9.48,1.63l2.74,6.23l-2.43,6.43l-1.94,6.87l-1.2,3.86l6.47,4.69L130.12,178.05zM264.36,205.36l0.32,-1.01l-0.03,-3.17l-2.19,-2.08l-2.57,1.05l-1.19,4.17l0.7,3.56l3.14,-0.36L264.36,205.36zM288.18,212.9l4.41,6.6l3.45,2.85l4.92,-7.87l0.87,-4.93l-4.41,-0.47l-4.03,-6.7l-4.45,-1.64l-6.6,-4.97l5.15,-3.63l-2.65,-7.54l-2.44,-3.35l-6.77,-3.35l-2.92,-5.55l-5.21,1.99l-0.36,-3.86l-3.86,-4.32l-6.22,-4.71l-2.65,3.71l-5.55,2.66l0.42,-6.06l-4.81,-10.05l-7.11,4.06l-2.59,7.7l-2.21,-5.92l2.06,-6.37l-7.24,2.65l-2.88,3.99l-2.15,8.42l0.89,9.05l3.98,0.04l-2.93,3.92l2.33,2.96l4.55,1.25l5.93,2.42l10.2,1.82l5.08,-1.04l1.5,-2.42l2.21,2.79l2.47,0.46l2.97,4.96l-1.8,1.98l5.68,2.63l4.29,3.68l1.08,2.55l0.77,3.24l-3.63,6.93l-0.98,3.44l0.94,2.42l-5.77,0.86l-5.27,0.12l-1.85,4.87l2.37,2.23l8.11,-1.03l-0.04,-1.89l4.08,3.15l4.18,3.28l-0.98,1.77l3.4,3.02l6.02,3.53l7.6,2.39l-0.46,-2.09l-2.92,-3.67l-3.96,-5.37l7.03,5l3.54,1.66l0.97,-4.44l-1.82,-6.3l-1.16,-1.73l-3.81,-3.03l-2.95,-3.91l0.35,-3.94L288.18,212.9zM222.35,51.34l2.34,7.29l4.96,5.88l9.81,-1.09l6.31,1.97l-4.38,6.05l-2.21,-1.78l-7.66,-0.71l1.19,8.31l3.96,6.04l-0.8,5.2l-4.97,3.46l-2.27,5.47l4.55,2.65l3.82,8.55l-7.5,-5.7l-1.71,0.94l1.38,9.38l-5.18,2.83l0.35,5.85l5.3,0.63l4.17,1.44l8.24,-1.84l7.33,3.27l7.49,-7.19l-0.06,-3.02l-4.79,0.48l-0.39,-2.84l3.92,-3.83l1.33,-5.15l4.33,-3.83l2.66,-4.76l-2.32,-7.1l1.94,-2.65l-3.86,-1.89l8.49,-1.63l1.79,-3.15l5.78,-2.6l4.8,-13.47l4.57,-4.94l6.62,-11.12l-6.1,0.1l2.54,-4.3l6.78,-3.99l6.84,-8.9l0.12,-5.73l-5.13,-6.04l-6.02,-2.93l-7.49,-1.82l-6.07,-1.49l-6.07,-1.5l-8.1,3.98l-1.49,-2.53l-8.57,0.98l-5.03,2.57l-3.7,3.65l-2.13,11.74L239,24.52l-3.48,-1.14l-4.12,7.97l-5.5,3.35l-3.27,0.66l-4.17,3.84l0.61,6.65L222.35,51.34zM296.75,316.34l-0.98,-1.98l-1.06,1.26l0.7,1.36l3.56,1.71l1.04,-0.26l1.38,-1.66l-2.6,0.11L296.75,316.34zM239.75,238.48l0.61,1.63l1.98,0.14l3.28,-3.34l0.06,-1.19l-3.85,-0.06L239.75,238.48zM301.88,304.92l-2.87,-1.8l-3.69,-1.09l-0.97,0.37l2.61,2.04l3.63,1.34l1.36,-0.08L301.88,304.92zM326.76,309.71l-0.36,-2.24l-1.96,0.72l0.87,-3.11l-2.8,-1.32l-1.29,1.05l-2.49,-1.18l0.98,-1.51l-1.88,-0.93l-1.83,1.47l1.86,-3.82l1.5,-2.8l0.54,-1.22l-1.3,-0.2l-2.43,1.55l-1.74,2.53l-2.9,6.92l-2.35,2.56l1.22,1.14l-1.75,1.47l0.43,1.23l5.44,0.13l3.01,-0.25l2.69,1.01l-1.98,1.93l1.67,0.14l3.25,-3.58l0.78,0.53l-0.61,3.37l1.84,0.77l1.27,-0.15l1.18,-3.61L326.76,309.71zM305.57,314.47l-2.81,4.56l-4.63,0.58l-3.64,-2.01l-0.92,-3.07l-0.89,-4.46l2.65,-2.83l-2.48,-2.09l-4.19,0.43l-5.88,3.53l-4.5,5.45l-2.38,0.67l3.23,-3.8l4.04,-5.57l3.57,-1.9l2.35,-3.11l2.9,-0.3l4.21,0.03l6,0.92l4.74,-0.71l3.53,-3.62l4.62,-1.59l2.01,-1.58l2.04,-1.71l-0.2,-5.19l-1.13,-1.77l-2.18,-0.63l-1.11,-4.05l-1.8,-1.55l-4.47,-1.26l-2.52,-2.82l-3.73,-2.83l1.13,-3.2l-3.1,-6.26l-3.65,-6.89l-2.18,-4.98l-1.86,2.61l-2.68,6.05l-4.06,2.97l-2.03,-3.16l-2.56,-0.85l-0.93,-6.99l0.08,-4.8l-5,-0.44l-0.85,-2.27l-3.45,-3.44l-2.61,-2.04l-2.32,1.58l-2.88,-0.58l-4.81,-1.65l-1.95,1.4l0.94,9.18l1.22,5.12l-3.31,5.75l3.41,4.02l1.9,4.44l0.23,3.42l-1.55,3.5l-3.18,3.46l-4.49,2.28l1.98,2.53l1.46,7.4l-1.52,4.68l-2.16,1.46l-4.17,-4.28l-2.03,-5.17l-0.87,-4.76l0.46,-4.19l-3.05,-0.47l-4.63,-0.28l-2.97,-2.08l-3.51,-1.37l-2.01,-2.38l-2.8,-1.94l-5.21,-2.23l-3.92,1.02l-1.31,-3.95l-1.26,-4.99l-4.12,-0.9l0.15,-6.41l1.09,-4.48l3.04,-6.6l3.43,-4.9l3.26,-0.77l0.19,-4.05l2.21,-2.68l4.01,-0.42l3.25,-4.39l0.82,-2.9l2.7,-5.73l0.84,-3.5l2.9,2.11l3.9,-1.08l5.49,-4.96l0.36,-3.54l-1.98,-3.98l2.09,-4.06l-0.17,-3.87l-3.76,-3.95l-4.14,-1.19l-3.98,-0.62l-0.15,8.71l-2.04,6.56l-2.93,5.3l-2.71,-4.95l0.84,-5.61l-3.35,-5.02l-3.75,6.09l0.01,-7.99l-5.21,-1.63l2.49,-4.01l-3.81,-9.59l-2.84,-3.91l-3.7,-1.44l-3.32,6.43l-0.22,9.34l3.27,3.29l3,4.91l-1.27,7.71l-2.26,-0.2l-1.78,5.88l0.02,-7l-4.34,-2.58l-2.49,1.33l0.32,4.67l-4.09,-0.18l-4.35,1.17l-4.95,-3.35l-3.13,0.6l-2.82,-4.11l-2.26,-1.84l-2.24,0.77l-3.41,0.35l-1.81,2.61l2.86,3.19l-3.05,3.72l-2.99,-4.42l-2.39,1.3l-7.57,0.87l-5.07,-1.59l3.94,-3.74l-3.78,-3.9l-2.75,0.5l-3.86,-1.32l-6.56,-2.89l-4.29,-3.37l-3.4,-0.47l-1.06,2.36l-3.44,1.31l-0.38,-6.15l-3.73,5.5l-4.74,-7.32l-1.94,-0.89l-0.63,3.91l-2.09,1.9l-1.93,-3.39l-4.59,2.05l-4.2,3.55l-4.17,-0.98l-3.4,2.5l-2.46,3.28l-2.92,-0.72l-4.41,-3.8l-5.23,-1.94l-0.02,27.65l-0.01,35.43l2.76,0.17l2.73,1.56l1.96,2.44l2.49,3.6l2.73,-3.05l2.81,-1.79l1.49,2.85l1.89,2.23l2.57,2.42l1.75,3.79l2.87,5.88l4.77,3.2l0.08,3.12l-1.56,2.35l0.06,2.48l3.39,3.45l0.49,3.76l3.59,1.96l-0.4,2.79l1.56,3.96l5.08,1.82l2,1.89l5.43,4.23l0.38,0.01h7.96h8.32h2.76h8.55h8.27h8.41l8.42,0l9.53,0l9.59,0l5.8,0l0.01,-1.64l0.95,-0.02l0.5,2.35l0.87,0.72l1.96,0.26l2.86,0.67l2.72,1.3l2.27,-0.55l3.45,1.09l1.14,-1.66l1.59,-0.66l0.62,-1.03l0.63,-0.55l2.61,0.86l1.93,0.1l0.67,0.57l0.94,2.38l3.15,0.63l-0.49,1.18l1.11,1.21l-0.48,1.56l1.18,0.51l-0.59,1.37l0.75,0.13l0.53,-0.6l0.55,0.9l2.1,0.5l2.13,0.04l2.27,0.41l2.51,0.78l0.91,1.26l1.82,3.04l-0.9,1.3l-2.28,-0.54l-1.42,-2.44l0.36,2.49l-1.34,2.17l0.15,1.84l-0.23,1.07l-1.81,1.27l-1.32,2.09l-0.62,1.32l1.54,0.24l2.08,-1.2l1.23,-1.06l0.83,-0.17l1.54,0.38l0.75,-0.59l1.37,-0.48l2.44,-0.47v0l0,0l-0.25,-1.15l-0.13,0.04l-0.86,0.2l-1.12,-0.36l0.84,-1.32l0.85,-0.46l1.98,-0.56l2.37,-0.53l1.24,0.73l0.78,-0.85l0.89,-0.54l0.6,0.29l0.03,0.06l2.87,-2.73l1.27,-0.73l4.26,-0.03l5.17,0l0.28,-0.98l0.9,-0.2l1.19,-0.62l1,-1.82l0.86,-3.15l2.14,-3.1l0.93,1.08l1.88,-0.7l1.25,1.19l0,5.52l1.83,2.25l3.12,-0.48l4.49,-0.13l-4.87,3.26l0.11,3.29l2.13,0.28l3.13,-2.79l2.78,-1.58l6.21,-2.35l3.47,-2.62l-1.81,-1.46L305.57,314.47zM251.91,243.37l1.1,-3.12l-0.71,-1.23l-1.15,-0.13l-1.08,1.8l-0.13,0.41l0.74,1.77L251.91,243.37zM109.25,279.8L109.25,279.8l1.56,-2.35L109.25,279.8zM105.85,283.09l-2.69,0.38l-1.32,-0.62l-0.17,1.52l0.52,2.07l1.42,1.46l1.04,2.13l1.69,2.1l1.12,0.01l-2.44,-3.7L105.85,283.09z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CD\",\"title\":_vm.countries.getName('CD', _vm.codeLang),\"d\":\"M561.71,453.61L561.54,456.87L562.66,457.24L561.76,458.23L560.68,458.97L559.61,460.43L559.02,461.72L558.86,463.96L558.21,465.02L558.19,467.12L557.38,467.9L557.28,469.56L556.89,469.77L556.63,471.3L557.34,472.56L557.52,475.93L558.02,478.5L557.74,479.96L558.3,481.58L559.93,483.15L561.44,486.7L560.34,486.41L556.57,486.89L555.82,487.22L555.02,489.02L555.65,490.27L555.15,493.62L554.8,496.47L555.56,496.98L557.52,498.08L558.29,497.57L558.53,500.65L556.38,500.62L555.23,499.05L554.2,497.83L552.05,497.43L551.42,495.94L549.7,496.84L547.46,496.44L546.52,495.15L544.74,494.89L543.43,494.96L543.27,494.08L542.3,494.01L541.02,493.84L539.29,494.26L538.07,494.19L537.37,494.45L537.52,491.08L536.59,490.03L536.38,488.3L536.79,486.6L536.23,485.51L536.18,483.75L532.77,483.77L533.02,482.76L531.59,482.77L531.44,483.26L529.7,483.37L528.99,485L528.57,485.71L527.02,485.31L526.1,485.71L524.24,485.93L523.17,484.46L522.53,483.55L521.72,481.87L521.03,479.78L512.76,479.75L511.77,480.08L510.96,480.03L509.8,480.41L509.41,479.54L510.12,479.24L510.21,478.02L510.67,477.3L511.69,476.72L512.43,477L513.39,475.93L514.91,475.96L515.09,476.75L516.14,477.25L517.79,475.49L519.42,474.13L520.13,473.24L520.04,470.94L521.26,468.23L522.54,466.8L524.39,465.46L524.71,464.57L524.78,463.55L525.24,462.58L525.09,461L525.44,458.53L525.99,456.79L526.83,455.3L526.99,453.62L527.24,451.67L528.34,450.25L529.84,449.35L532.15,450.3L533.93,451.33L535.98,451.61L538.07,452.15L538.91,450.47L539.3,450.25L540.57,450.53L543.7,449.14L544.8,449.73L545.71,449.65L546.13,448.97L547.17,448.73L549.28,449.02L551.08,449.08L552.01,448.79L553.7,451.1L554.96,451.43L555.71,450.96L557.01,451.15L558.57,450.56L559.24,451.75z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CF\",\"title\":_vm.countries.getName('CF', _vm.codeLang),\"d\":\"M518.09,442.66L520.41,442.44L520.93,441.72L521.39,441.78L522.09,442.41L525.62,441.34L526.81,440.24L528.28,439.25L528,438.26L528.79,438L531.5,438.18L534.14,436.87L536.16,433.78L537.59,432.64L539.36,432.15L539.68,433.37L541.3,435.14L541.3,436.29L540.85,437.47L541.03,438.34L542,439.15L544.14,440.39L545.67,441.52L545.7,442.44L547.58,443.9L548.75,445.11L549.46,446.79L551.56,447.9L552.01,448.79L551.08,449.08L549.28,449.02L547.17,448.73L546.13,448.97L545.71,449.65L544.8,449.73L543.7,449.14L540.57,450.53L539.3,450.25L538.91,450.47L538.07,452.15L535.98,451.61L533.93,451.33L532.15,450.3L529.84,449.35L528.34,450.25L527.24,451.67L526.99,453.62L525.19,453.46L523.29,452.99L521.62,454.47L520.15,457.07L519.85,456.26L519.73,454.99L518.45,454.09L517.41,452.65L517.17,451.65L515.85,450.19L516.07,449.36L515.79,448.18L516.01,446.01L516.68,445.5z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CG\",\"title\":_vm.countries.getName('CG', _vm.codeLang),\"d\":\"M511.69,476.72L510.64,475.76L509.79,476.23L508.66,477.43L506.36,474.48L508.49,472.94L507.44,471.09L508.4,470.39L510.29,470.05L510.51,468.81L512.01,470.15L514.49,470.27L515.35,468.95L515.7,467.1L515.39,464.92L514.07,463.28L515.28,460.05L514.58,459.5L512.5,459.72L511.71,458.29L511.92,457.07L515.45,457.18L517.72,457.91L519.95,458.57L520.15,457.07L521.62,454.47L523.29,452.99L525.19,453.46L526.99,453.62L526.83,455.3L525.99,456.79L525.44,458.53L525.09,461L525.24,462.58L524.78,463.55L524.71,464.57L524.39,465.46L522.54,466.8L521.26,468.23L520.04,470.94L520.13,473.24L519.42,474.13L517.79,475.49L516.14,477.25L515.09,476.75L514.91,475.96L513.39,475.93L512.43,477z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CH\",\"title\":_vm.countries.getName('CH', _vm.codeLang),\"d\":\"M502.15,312.34L502.26,313.08L501.83,314.09L503.1,314.83L504.53,314.94L504.31,316.61L503.08,317.3L501,316.79L500.39,318.42L499.06,318.55L498.57,317.91L497,319.27L495.65,319.46L494.44,318.6L493.48,316.83L492.14,317.47L492.18,315.63L494.23,313.32L494.14,312.27L495.42,312.66L496.19,311.95L498.57,311.98L499.15,311.08z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CI\",\"title\":_vm.countries.getName('CI', _vm.codeLang),\"d\":\"M467.24,449.46L465.97,449.49L464.01,448.94L462.22,448.97L458.89,449.46L456.95,450.27L454.17,451.29L453.63,451.22L453.84,448.92L454.11,448.57L454.03,447.46L452.84,446.29L451.95,446.1L451.13,445.33L451.74,444.09L451.46,442.73L451.59,441.91L452.04,441.91L452.2,440.68L451.98,440.14L452.25,439.75L453.29,439.41L452.6,437.15L451.95,435.99L452.18,435.02L452.74,434.81L453.1,434.55L453.88,434.97L456.04,435L456.56,434.17L457.04,434.23L457.85,433.91L458.29,435.12L458.94,434.76L460.1,434.34L461.36,434.96L461.85,435.89L463.11,436.49L464.09,435.78L465.41,435.67L467.33,436.4L468.07,440.41L466.89,442.77L466.16,445.94L467.37,448.35z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CL\",\"title\":_vm.countries.getName('CL', _vm.codeLang),\"d\":\"M282.81,636.73l0,10.57l3,0l1.69,0.13l-0.93,1.98l-2.4,1.53l-1.38,-0.16l-1.66,-0.4l-2.04,-1.48l-2.94,-0.71l-3.53,-2.71l-2.86,-2.57l-3.86,-5.25l2.31,0.97l3.94,3.13l3.72,1.7l1.45,-2.17l0.91,-3.2l2.58,-1.91L282.81,636.73zM283.97,524.72l1.1,4.15l2.02,-0.41l0.34,0.76l-0.96,3.16l-3.05,1.51l0.09,5.14l-0.59,1l0.84,1.23l-1.98,1.95l-1.84,2.96l-1,2.9l0.27,3.11l-1.73,3.34l1.29,5.69l0.73,0.61l-0.01,3.09l-1.6,3.31l0.06,2.87l-2.12,2.26l0.01,3.22l0.85,3.46l-1.68,1.3l-0.75,3.22l-0.66,3.75l0.47,4.54l-1.13,0.77l0.65,4.4l1.27,1.46l-0.92,1.63l1.3,0.78l0.3,1.48l-1.22,0.75l0.3,2.33l-1.02,5.35l-1.49,3.52l0.33,2.11l-0.89,2.68l-2.15,1.88l0.25,4.6l0.99,1.6l1.87,-0.28l-0.05,3.33l1.16,2.63l6.78,0.61l2.6,0.71l-2.49,-0.03l-1.35,1.13l-2.53,1.67l-0.45,4.38l-1.19,0.11l-3.16,-1.54l-3.21,-3.25l0,0l-3.49,-2.63l-0.88,-2.87l0.79,-2.62l-1.41,-2.94l-0.36,-7.34l1.19,-4.03l2.96,-3.19l-4.26,-1.19l2.67,-3.57l0.95,-6.56l3.12,1.37l1.46,-7.97l-1.88,-1l-0.88,4.75l-1.77,-0.54l0.88,-5.42l0.96,-6.84l1.29,-2.48l-0.81,-3.5l-0.23,-3.98l1.18,-0.11l1.72,-5.6l1.94,-5.43l1.19,-4.97l-0.65,-4.91l0.84,-2.67l-0.34,-3.96l1.64,-3.87l0.51,-6.04l0.9,-6.37l0.88,-6.75l-0.21,-4.87l-0.58,-4.15l1.44,-0.75l0.75,-1.5l1.37,1.99l0.37,2.12l1.47,1.25l-0.88,2.87L283.97,524.72z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CM\",\"title\":_vm.countries.getName('CM', _vm.codeLang),\"d\":\"M511.92,457.07L511.57,456.92L509.91,457.28L508.2,456.9L506.87,457.09L502.31,457.02L502.72,454.82L501.62,452.98L500.34,452.5L499.77,451.25L499.05,450.85L499.09,450.08L499.81,448.1L501.14,445.4L501.95,445.37L503.62,443.73L504.69,443.69L506.26,444.84L508.19,443.89L508.45,442.73L509.08,441.59L509.51,440.17L511.01,439.01L511.58,437.04L512.17,436.41L512.57,434.94L513.31,433.13L515.67,430.93L515.82,429.98L516.13,429.47L515.02,428.33L515.11,427.43L515.9,427.26L517.01,429.09L517.2,430.98L517.1,432.87L518.62,435.44L517.06,435.41L516.27,435.61L514.99,435.33L514.38,436.66L516.03,438.31L517.25,438.79L517.65,439.96L518.53,441.89L518.09,442.66L516.68,445.5L516.01,446.01L515.79,448.18L516.07,449.36L515.85,450.19L517.17,451.65L517.41,452.65L518.45,454.09L519.73,454.99L519.85,456.26L520.15,457.07L519.95,458.57L517.72,457.91L515.45,457.18z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CN\",\"title\":_vm.countries.getName('CN', _vm.codeLang),\"d\":\"M784.63,410.41l-2.42,1.41l-2.3,-0.91l-0.08,-2.53l1.38,-1.34l3.06,-0.83l1.61,0.07l0.63,1.13l-1.23,1.3L784.63,410.41zM833.19,302.89l4.88,1.38l3.32,3.03l1.13,3.95l4.26,0l2.43,-1.65l4.63,-1.24l-1.47,3.76l-1.09,1.51l-0.96,4.46l-1.89,3.89l-3.4,-0.7l-2.41,1.4l0.74,3.36l-0.4,4.55l-1.43,0.1l0.02,1.93l-1.81,-2.24l-1.11,2.13l-4.33,1.62l0.44,1.97l-2.42,-0.14l-1.33,-1.17l-1.93,2.64l-3.09,1.98l-2.28,2.35l-3.92,1.06l-2.06,1.69l-3.02,0.98l1.49,-1.67l-0.59,-1.41l2.22,-2.45l-1.48,-1.93l-2.44,1.3l-3.17,2.54l-1.73,2.34l-2.75,0.17l-1.43,1.68l1.48,2.41l2.29,0.58l0.09,1.58l2.22,1.02l3.14,-2.51l2.49,1.37l1.81,0.09l0.46,1.84l-3.97,0.97l-1.31,1.87l-2.73,1.73l-1.44,2.39l3.02,1.86l1.1,3.31l1.71,3.05l1.9,2.53l-0.05,2.43l-1.76,0.89l0.67,1.73l1.65,1l-0.43,2.61l-0.71,2.52l-1.57,0.28l-2.05,3.41l-2.27,4.09l-2.6,3.68l-3.86,2.82l-3.9,2.55l-3.16,0.35l-1.71,1.34l-0.97,-0.98l-1.59,1.5l-3.92,1.5l-2.97,0.46l-0.96,3.15l-1.55,0.17l-0.74,-2.16l0.66,-1.16l-3.76,-0.96l-1.33,0.49l-2.82,-0.78l-1.33,-1.22l0.44,-1.74l-2.56,-0.55l-1.35,-1.14l-2.39,1.62l-2.73,0.35l-2.24,-0.02l-1.5,0.74l-1.45,0.44l0.42,3.43l-1.5,-0.08l-0.25,-0.7l-0.08,-1.24l-2.06,0.87l-1.21,-0.55l-2.08,-1.13l0.82,-2.51l-1.78,-0.59l-0.67,-2.8l-2.96,0.51l0.34,-3.63l2.66,-2.58l0.11,-2.57l-0.08,-2.4l-1.22,-0.75l-0.94,-1.86l-1.64,0.24l-3.02,-0.47l0.95,-1.33l-1.31,-1.99l-2,1.35L740.4,378l-3.23,2.03l-2.55,2.36l-2.26,0.39l-1.23,-0.85l-1.48,-0.08l-2,-0.73l-1.51,0.8l-1.85,2.34l-0.24,-2.48l-1.71,0.66l-3.27,-0.31l-3.17,-0.73l-2.28,-1.39l-2.18,-0.63l-0.94,-1.53l-1.58,-0.46l-2.83,-2.09l-2.25,-0.99l-1.16,0.77l-3.9,-2.26l-2.75,-2.07l-0.79,-3.63l2.01,0.44l0.09,-1.69l-1.12,-1.71l0.28,-2.74l-3.01,-3.99l-4.61,-1.39l-0.83,-2.66l-2.07,-1.63l-0.5,-1.01l-0.42,-2.01l0.1,-1.38l-1.7,-0.81l-0.92,0.36l-0.71,-3.32l0.8,-0.83l-0.39,-0.85l2.68,-1.73l1.94,-0.72l2.97,0.49l1.06,-2.35l3.6,-0.44l1,-1.48l4.42,-2.03l0.39,-0.85l-0.22,-2.17l1.92,-1l-2.52,-6.75l5.55,-1.58l1.44,-0.89l2.02,-7.26l5.56,1.35l1.56,-1.86l0.13,-4.19l2.33,-0.39l2.13,-2.83l1.1,-0.35l0.74,2.97l2.36,2.23l4,1.57l1.93,3.32l-1.08,4.73l1.01,1.73l3.33,0.68l3.78,0.55l3.39,2.45l1.73,0.43l1.28,3.57l1.65,2.27l3.09,-0.09l5.79,0.85l3.73,-0.53l2.77,0.57l4.15,2.29l3.39,0l1.24,1.16l3.26,-2.01l4.53,-1.31l4.2,-0.14l3.28,-1.34l2.01,-2.05l1.96,-1.3l-0.45,-1.28l-0.9,-1.5l1.47,-2.54l1.58,0.36l2.88,0.8l2.79,-2.1l4.28,-1.55l2.05,-2.66l1.97,-1.16l4.07,-0.54l2.21,0.46l0.31,-1.45l-2.54,-2.89l-2.25,-1.33l-2.16,1.54l-2.77,-0.65l-1.59,0.53l-0.72,-1.71l1.98,-4.23l1.37,-3.25l3.37,1.63l3.95,-2.74l-0.03,-1.93l2.53,-4.73l1.56,-1.45l-0.04,-2.52l-1.54,-1.1l2.32,-2.31l3.48,-0.84l3.72,-0.13l4.2,1.39l2.46,1.71l1.73,4.61l1.05,1.94l0.98,2.73L833.19,302.89z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CO\",\"title\":_vm.countries.getName('CO', _vm.codeLang),\"d\":\"M263.92,463.81L262.72,463.15L261.34,462.23L260.54,462.67L258.16,462.28L257.48,461.08L256.96,461.13L254.15,459.54L253.77,458.67L254.82,458.46L254.7,457.07L255.35,456.06L256.74,455.87L257.93,454.12L259,452.66L257.96,451.99L258.49,450.37L257.86,447.81L258.46,447.08L258.02,444.71L256.88,443.21L257.24,441.85L258.15,442.05L258.68,441.21L258.03,439.56L258.37,439.14L259.81,439.23L261.92,437.26L263.07,436.96L263.1,436.03L263.62,433.64L265.23,432.32L266.99,432.27L267.21,431.68L269.41,431.91L271.62,430.48L272.71,429.84L274.06,428.47L275.06,428.64L275.79,429.39L275.25,430.35L273.45,430.83L272.74,432.25L271.65,433.06L270.84,434.12L270.49,436.13L269.72,437.79L271.16,437.97L271.52,439.27L272.14,439.89L272.36,441.02L272.03,442.06L272.13,442.65L272.82,442.88L273.49,443.86L277.09,443.59L278.72,443.95L280.7,446.36L281.83,446.06L283.85,446.21L285.45,445.89L286.44,446.38L285.93,447.88L285.31,448.82L285.09,450.83L285.65,452.68L286.45,453.51L286.54,454.14L285.12,455.53L286.14,456.14L286.89,457.12L287.74,459.89L287.21,460.24L286.67,458.59L285.89,457.71L284.96,458.67L279.5,458.61L279.53,460.35L281.17,460.64L281.08,461.71L280.52,461.42L278.94,461.88L278.93,463.9L280.17,464.92L280.61,466.51L280.54,467.72L279.28,475.37L277.88,473.88L277.04,473.82L278.85,470.98L276.7,469.67L275.02,469.91L274.01,469.43L272.46,470.17L270.37,469.82L268.72,466.9L267.42,466.18L266.53,464.86L264.67,463.54z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CR\",\"title\":_vm.countries.getName('CR', _vm.codeLang),\"d\":\"M242.63,440.4L241.11,439.77L240.54,439.18L240.86,438.69L240.76,438.07L239.98,437.39L238.88,436.84L237.91,436.48L237.73,435.65L236.99,435.14L237.17,435.97L236.61,436.64L235.97,435.86L235.07,435.58L234.69,435.01L234.71,434.15L235.08,433.25L234.29,432.85L234.93,432.31L235.35,431.94L237.2,432.69L237.84,432.32L238.73,432.56L239.2,433.14L240.02,433.33L240.69,432.73L241.41,434.27L242.49,435.41L243.81,436.62L242.72,436.87L242.74,438L243.32,438.42L242.9,438.76L243.01,439.27L242.78,439.84z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CU\",\"title\":_vm.countries.getName('CU', _vm.codeLang),\"d\":\"M244.58,396.94L247.01,397.16L249.21,397.19L251.84,398.22L252.96,399.33L255.58,398.99L256.57,399.69L258.95,401.56L260.69,402.91L261.61,402.87L263.29,403.48L263.08,404.32L265.15,404.44L267.27,405.66L266.94,406.35L265.07,406.73L263.18,406.88L261.25,406.64L257.24,406.93L259.12,405.27L257.98,404.5L256.17,404.3L255.2,403.44L254.53,401.74L252.95,401.85L250.33,401.05L249.49,400.42L245.84,399.95L244.86,399.36L245.91,398.61L243.16,398.46L241.15,400.02L239.98,400.06L239.58,400.8L238.2,401.13L237,400.84L238.48,399.91L239.08,398.82L240.35,398.15L241.78,397.56L243.91,397.27z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CY\",\"title\":_vm.countries.getName('CY', _vm.codeLang),\"d\":\"M570.31,358.29L572.2,356.83L569.65,357.85L567.63,357.8L567.23,358.63L567.03,358.65L565.7,358.77L566.35,360.14L567.72,360.58L570.6,359.2L570.51,358.93z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"CZ\",\"title\":_vm.countries.getName('CZ', _vm.codeLang),\"d\":\"M522.81,307.86L521.51,307.06L520.2,307.28L518.02,305.98L517.03,306.3L515.46,308.04L513.37,306.67L511.79,304.84L510.36,303.8L510.06,301.98L509.57,300.68L511.61,299.73L512.65,298.63L514.66,297.77L515.37,296.93L516.11,297.44L517.36,296.97L518.69,298.4L520.78,298.79L520.61,300L522.13,300.9L522.55,299.77L524.47,300.26L524.74,301.63L526.82,301.89L528.11,304.02L527.28,304.03L526.84,304.8L526.2,304.99L526.02,305.96L525.48,306.17L525.4,306.56L524.45,307L523.2,306.93z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"DE\",\"title\":_vm.countries.getName('DE', _vm.codeLang),\"d\":\"M503.07,278.92L503.12,280.8L505.96,281.92L505.93,283.62L508.78,282.72L510.35,281.41L513.52,283.3L514.84,284.81L515.5,287.2L514.72,288.45L515.73,290.1L516.43,292.55L516.21,294.11L517.36,296.97L516.11,297.44L515.37,296.93L514.66,297.77L512.65,298.63L511.61,299.73L509.57,300.68L510.06,301.98L510.36,303.8L511.79,304.84L513.37,306.67L512.39,308.62L511.38,309.16L511.78,311.88L511.51,312.58L510.64,311.73L509.3,311.61L507.29,312.35L504.82,312.17L504.42,313.26L503,312.12L502.15,312.34L499.15,311.08L498.57,311.98L496.19,311.95L496.54,308.97L497.96,306.07L493.92,305.29L492.6,304.16L492.76,302.27L492.2,301.29L492.52,298.32L492.04,293.63L493.73,293.63L494.44,291.92L495.14,287.69L494.61,286.11L495.16,285.11L497.5,284.85L498.02,285.89L499.93,283.56L499.29,281.77L499.16,279.02L501.28,279.66z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"DJ\",\"title\":_vm.countries.getName('DJ', _vm.codeLang),\"d\":\"M596.05,427.72L596.71,428.6L596.62,429.79L595.02,430.47L596.23,431.24L595.19,432.76L594.57,432.26L593.9,432.46L592.33,432.41L592.28,431.55L592.07,430.76L593.01,429.43L594,428.17L595.2,428.42z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"DK\",\"title\":_vm.countries.getName('DK', _vm.codeLang),\"d\":\"M510.83,275.84l-1.68,3.97l-2.93,-2.76l-0.39,-2.05l4.11,-1.66L510.83,275.84zM505.85,271.59l-0.69,1.9l-0.83,-0.55l-2.02,3.59l0.76,2.39l-1.79,0.74l-2.12,-0.64l-1.14,-2.72l-0.08,-5.12l0.47,-1.38l0.8,-1.54l2.47,-0.32l0.98,-1.43l2.26,-1.47l-0.1,2.68l-0.83,1.68l0.34,1.43L505.85,271.59z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"DO\",\"title\":_vm.countries.getName('DO', _vm.codeLang),\"d\":\"M274.18,407.35L274.53,406.84L276.72,406.86L278.38,407.62L279.12,407.54L279.63,408.59L281.16,408.53L281.07,409.41L282.32,409.52L283.7,410.6L282.66,411.8L281.32,411.16L280.04,411.28L279.12,411.14L278.61,411.68L277.53,411.86L277.11,411.14L276.18,411.57L275.06,413.57L274.34,413.11L274.19,412.27L274.25,411.47L273.53,410.59L274.21,410.09L274.43,408.96z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"DZ\",\"title\":_vm.countries.getName('DZ', _vm.codeLang),\"d\":\"M508.9,396.08L499.29,401.83L491.17,407.68L487.22,409L484.11,409.29L484.08,407.41L482.78,406.93L481.03,406.08L480.37,404.69L470.91,398.14L461.45,391.49L450.9,383.96L450.96,383.35L450.96,383.14L450.93,379.39L455.46,377.03L458.26,376.54L460.55,375.68L461.63,374.06L464.91,372.77L465.03,370.36L466.65,370.07L467.92,368.86L471.59,368.3L472.1,367.02L471.36,366.31L470.39,362.78L470.23,360.73L469.17,358.55L471.86,356.68L474.9,356.08L476.67,354.65L479.37,353.6L484.12,352.98L488.76,352.69L490.17,353.21L492.81,351.84L495.81,351.81L496.95,352.62L498.86,352.41L498.29,354.2L498.74,357.48L498.08,360.3L496.35,362.18L496.6,364.71L498.89,366.69L498.92,367.5L500.64,368.83L501.84,374.69L502.75,377.53L502.9,379.01L502.41,381.6L502.61,383.04L502.25,384.76L502.5,386.73L501.38,388.02L503.04,390.28L503.15,391.6L504.14,393.31L505.45,392.75L507.67,394.17z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"EC\",\"title\":_vm.countries.getName('EC', _vm.codeLang),\"d\":\"M250.1,472.87L251.59,470.79L250.98,469.57L249.91,470.87L248.23,469.64L248.8,468.86L248.33,466.33L249.31,465.91L249.83,464.18L250.89,462.38L250.69,461.25L252.23,460.65L254.15,459.54L256.96,461.13L257.48,461.08L258.16,462.28L260.54,462.67L261.34,462.23L262.72,463.15L263.92,463.81L264.31,465.92L263.44,467.73L260.38,470.65L257.01,471.75L255.29,474.18L254.76,476.06L253.17,477.21L252,475.8L250.86,475.5L249.7,475.72L249.63,474.7L250.43,474.04z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"EE\",\"title\":_vm.countries.getName('EE', _vm.codeLang),\"d\":\"M543.42,264.71L543.75,261.59L542.72,262.26L540.94,260.36L540.69,257.25L544.24,255.72L547.77,254.91L550.81,255.83L553.71,255.66L554.13,256.62L552.14,259.76L552.97,264.72L551.77,266.38L549.45,266.37L547.04,264.43L545.81,263.78z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"EG\",\"title\":_vm.countries.getName('EG', _vm.codeLang),\"d\":\"M573.17,377.28L572.38,378.57L571.78,380.97L571.02,382.61L570.36,383.17L569.43,382.15L568.16,380.73L566.16,376.16L565.88,376.45L567.04,379.82L568.76,383L570.88,387.88L571.91,389.56L572.81,391.3L575.33,394.7L574.77,395.23L574.86,397.2L578.13,399.91L578.62,400.53L567.5,400.53L556.62,400.53L545.35,400.53L545.35,389.3L545.35,378.12L544.51,375.54L545.23,373.54L544.8,372.15L545.81,370.58L549.54,370.53L552.24,371.39L555.02,372.36L556.32,372.86L558.48,371.83L559.63,370.9L562.11,370.63L564.1,371.04L564.87,372.66L565.52,371.59L567.76,372.36L569.95,372.55L571.33,371.73z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"EH\",\"title\":_vm.countries.getName('EH', _vm.codeLang),\"d\":\"M438.57,383.06L442.19,383.07L450.94,383.1L450.94,383.1L450.94,383.1L442.19,383.07L438.57,383.06L438.46,383.15L438.41,383.19L436.63,386.39L434.77,387.53L433.75,389.44L433.69,391.09L432.94,392.88L432,393.37L430.44,395.31L429.48,397.46L429.66,398.48L428.74,400.05L427.66,400.87L427.53,402.26L427.41,403.53L428.02,402.53L439,402.55L438.47,398.2L439.16,396.65L441.78,396.38L441.69,388.52L450.9,388.69L450.9,383.96L450.96,383.35L450.96,383.14z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"ER\",\"title\":_vm.countries.getName('ER', _vm.codeLang),\"d\":\"M594,428.17L593.04,427.24L591.89,425.57L590.65,424.65L589.92,423.65L587.48,422.5L585.56,422.47L584.88,421.86L583.24,422.54L581.54,421.23L580.66,423.38L577.4,422.78L577.1,421.63L578.31,417.38L578.58,415.45L579.46,414.55L581.53,414.07L582.95,412.4L584.58,415.78L585.35,418.45L586.89,419.86L590.71,422.58L592.27,424.22L593.79,425.88L594.67,426.86L596.05,427.72L595.2,428.42z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"ES\",\"title\":_vm.countries.getName('ES', _vm.codeLang),\"d\":\"M449.92,334.56L450.06,331.88L448.92,330.22L452.88,327.45L456.31,328.15L460.08,328.12L463.06,328.78L465.39,328.58L469.92,328.7L471.04,330.19L476.2,331.92L477.22,331.1L480.38,332.82L483.63,332.33L483.78,334.52L481.12,337.01L477.53,337.79L477.28,339.03L475.55,341.06L474.47,344.02L475.56,346.07L473.94,347.67L473.34,349.97L471.22,350.67L469.23,353.36L465.68,353.41L463,353.35L461.25,354.57L460.18,355.88L458.8,355.59L457.77,354.42L456.97,352.42L454.35,351.88L454.12,350.72L455.16,349.4L455.54,348.44L454.58,347.38L455.35,345.03L454.23,342.86L455.44,342.56L455.55,340.84L456.01,340.31L456.04,337.43L457.34,336.43L456.56,334.55L454.92,334.42L454.44,334.89L452.79,334.9L452.08,333.06L450.94,333.61z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"ET\",\"title\":_vm.countries.getName('ET', _vm.codeLang),\"d\":\"M581.54,421.23L583.24,422.54L584.88,421.86L585.56,422.47L587.48,422.5L589.92,423.65L590.65,424.65L591.89,425.57L593.04,427.24L594,428.17L593.01,429.43L592.07,430.76L592.28,431.55L592.33,432.41L593.9,432.46L594.57,432.26L595.19,432.76L594.58,433.77L595.62,435.33L596.65,436.69L597.72,437.7L606.89,441.04L609.25,441.02L601.32,449.44L597.67,449.56L595.17,451.53L593.38,451.58L592.61,452.46L590.69,452.46L589.56,451.52L587,452.69L586.17,453.85L584.3,453.63L583.68,453.31L583.02,453.38L582.14,453.36L578.59,450.98L576.64,450.98L575.68,450.07L575.68,448.5L574.22,448.03L572.57,444.98L571.29,444.33L570.79,443.21L569.37,441.84L567.65,441.64L568.61,440.03L570.09,439.96L570.51,439.1L570.48,436.57L571.31,433.61L572.63,432.81L572.92,431.65L574.12,429.48L575.81,428.06L576.95,425.25L577.4,422.78L580.66,423.38z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"FK\",\"title\":_vm.countries.getName('FK', _vm.codeLang),\"d\":\"M303.66,633.13L307.02,630.44L309.41,631.56L311.09,629.77L313.33,631.78L312.49,633.36L308.7,634.72L307.44,633.13L305.06,635.18z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"FI\",\"title\":_vm.countries.getName('FI', _vm.codeLang),\"d\":\"M555.42,193.1L555.01,198.5L559.31,203.49L556.72,208.97L559.98,216.93L558.09,222.69L560.62,227.55L559.47,231.69L563.62,235.95L562.56,239.05L559.96,242.5L553.96,249.91L548.87,250.36L543.94,252.43L539.38,253.61L537.75,250.54L535.04,248.67L535.66,242.95L534.3,237.54L535.64,233.96L538.18,230.02L544.59,223L546.47,221.61L546.17,218.77L542.27,215.55L541.33,212.85L541.25,201.73L536.88,196.58L533.14,192.77L534.82,190.69L537.94,194.84L541.6,194.45L544.61,196.32L547.28,192.88L548.66,187.03L553.01,184.25L556.61,187.51z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"FJ\",\"title\":_vm.countries.getName('FJ', _vm.codeLang),\"d\":\"M980.53,508.61l-0.35,1.4l-0.23,0.16l-1.78,0.72l-1.79,0.61l-0.36,-1.09l1.4,-0.6l0.89,-0.16l1.64,-0.91L980.53,508.61zM974.69,512.92l-1.27,-0.36l-1.08,1l0.27,1.29l1.55,0.36l1.74,-0.4l0.46,-1.53l-0.96,-0.84L974.69,512.92z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"FR\",\"title\":_vm.countries.getName('FR', _vm.codeLang),\"d\":\"M502.06,333.54l-0.93,2.89l-1.27,-0.76l-0.65,-2.53l0.57,-1.41l1.81,-1.45L502.06,333.54zM485.31,300.19l1.96,2.06l1.44,-0.34l2.45,1.97l0.63,0.37l0.81,-0.09l1.32,1.12l4.04,0.79l-1.42,2.9l-0.36,2.98l-0.77,0.71l-1.28,-0.38l0.09,1.05l-2.05,2.3l-0.04,1.84l1.34,-0.63l0.96,1.77l-0.12,1.13l0.83,1.5l-0.97,1.21l0.72,3.04l1.52,0.49l-0.32,1.68l-2.54,2.17l-5.53,-1.04l-4.08,1.24l-0.32,2.29l-3.25,0.49l-3.15,-1.72l-1.02,0.82l-5.16,-1.73l-1.12,-1.49l1.45,-2.32l0.53,-7.88l-2.89,-4.26l-2.07,-2.09l-4.29,-1.6l-0.28,-3.07l3.64,-0.92l4.71,1.09l-0.89,-4.84l2.65,1.85l6.53,-3.37l0.84,-3.61l2.45,-0.9l0.41,1.56l1.3,0.07L485.31,300.19z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GA\",\"title\":_vm.countries.getName('GA', _vm.codeLang),\"d\":\"M506.36,474.48L503.48,471.66L501.62,469.36L499.92,466.48L500.01,465.56L500.62,464.66L501.3,462.64L501.87,460.57L502.82,460.41L506.89,460.44L506.87,457.09L508.2,456.9L509.91,457.28L511.57,456.92L511.92,457.07L511.71,458.29L512.5,459.72L514.58,459.5L515.28,460.05L514.07,463.28L515.39,464.92L515.7,467.1L515.35,468.95L514.49,470.27L512.01,470.15L510.51,468.81L510.29,470.05L508.4,470.39L507.44,471.09L508.49,472.94z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GB\",\"title\":_vm.countries.getName('GB', _vm.codeLang),\"d\":\"M459.38,281l-1.5,3.29l-2.12,-0.98l-1.73,0.07l0.58,-2.57l-0.58,-2.6l2.35,-0.2L459.38,281zM466.83,260.24l-3,5.73l2.86,-0.72l3.07,0.03l-0.73,4.22l-2.52,4.53l2.9,0.32l0.22,0.52l2.5,5.79l1.92,0.77l1.73,5.41l0.8,1.84l3.4,0.88l-0.34,2.93l-1.43,1.33l1.12,2.33l-2.52,2.33l-3.75,-0.04l-4.77,1.21l-1.31,-0.87l-1.85,2.06l-2.59,-0.5l-1.97,1.67l-1.49,-0.87l4.11,-4.64l2.51,-0.97l-0.02,0l-4.38,-0.75l-0.79,-1.8l2.93,-1.41l-1.54,-2.48l0.53,-3.06l4.17,0.42l0,0l0.41,-2.74l-1.88,-2.95l-0.04,-0.07l-3.4,-0.85l-0.67,-1.32l1.02,-2.2l-0.92,-1.37l-1.51,2.34l-0.16,-4.8l-1.42,-2.59l1.02,-5.36l2.18,-4.31l2.24,0.42L466.83,260.24z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GE\",\"title\":_vm.countries.getName('GE', _vm.codeLang),\"d\":\"M591.76,335.85L592.18,334.25L591.48,331.68L589.86,330.27L588.31,329.83L587.28,328.66L587.62,328.2L589.99,328.86L594.12,329.48L597.94,331.31L598.43,332.02L600.13,331.42L602.75,332.22L603.6,333.77L605.37,334.64L604.64,335.15L606.02,337.17L605.64,337.6L604.13,337.38L602.04,336.32L601.35,336.92L597.45,337.5L594.75,335.68z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GF\",\"title\":_vm.countries.getName('GF', _vm.codeLang),\"d\":\"M327.89,456.41l-1.07,1.06l-1.34,0.2l-0.38,-0.78l-0.63,-0.12l-0.87,0.76l-1.22,-0.57l0.71,-1.19l0.24,-1.27l0.48,-1.2l-1.09,-1.65l-0.22,-1.91l1.46,-2.41l0.95,0.31l2.06,0.66l2.97,2.36l0.46,1.14l-1.66,2.55L327.89,456.41z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GH\",\"title\":_vm.countries.getName('GH', _vm.codeLang),\"d\":\"M478.23,446.84L473.83,448.48L472.27,449.44L469.74,450.25L467.24,449.46L467.37,448.35L466.16,445.94L466.89,442.77L468.07,440.41L467.33,436.4L466.94,434.27L467.01,432.66L471.88,432.53L473.12,432.74L474.02,432.28L475.32,432.5L475.11,433.39L476.28,434.85L476.28,436.9L476.55,439.12L477.25,440.15L476.63,442.68L476.85,444.08L477.6,445.86z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GL\",\"title\":_vm.countries.getName('GL', _vm.codeLang),\"d\":\"M344.13,23.91L353.55,10.3L363.39,11.37L366.96,2.42L376.87,0L399.27,3.15L416.81,21.74L411.63,30.04L400.9,30.97L385.81,33L387.22,36.64L397.15,34.4L405.59,41.31L411.04,35.19L413.37,42.34L410.29,53.31L417.43,46.38L431.04,38.83L439.45,42.64L441.02,50.76L429.59,63.42L428.01,67.32L419.05,70.18L425.54,70.97L422.26,82.48L420,92.07L420.09,107.33L423.46,115.67L419.08,116.18L414.47,120.06L419.64,126.36L420.3,135.98L417.3,137L420.93,146.15L414.71,146.9L417.96,151.04L417.04,154.55L413.09,156.06L409.18,156.09L412.69,162.57L412.73,166.7L407.18,162.87L405.74,165.36L409.52,167.65L413.2,173.13L414.26,180.08L409.26,181.7L407.1,178.44L403.63,173.46L404.59,179.33L401.34,183.74L408.72,184.09L412.59,184.54L405.07,191.57L397.45,197.7L389.25,200.31L386.16,200.35L383.26,203.22L379.36,210.85L373.33,215.74L371.39,216.03L367.65,217.7L363.63,219.29L361.22,223.41L361.18,227.97L359.77,232.13L355.19,237.08L356.32,241.79L355.06,246.64L353.63,252.2L349.68,252.54L345.54,247.91L339.93,247.88L337.21,244.7L335.34,238.9L330.48,231.22L329.06,227.07L328.68,221.18L324.79,214.91L325.8,209.74L323.93,207.21L326.7,198.56L330.92,195.71L332.03,192.45L332.62,186.19L329.41,189.05L327.89,190.24L325.37,191.38L321.93,188.77L321.74,183.22L322.84,178.74L325.44,178.62L331.16,180.87L326.34,175.44L323.83,172.43L321.04,173.67L318.7,171.48L321.83,162.98L320.13,159.45L317.9,152.71L314.53,141.8L310.96,137.63L310.99,133L303.46,126.31L297.51,125.46L290.02,125.93L283.18,126.79L279.92,123.04L275.05,115.38L282.41,111.41L288.06,110.73L276.06,107.37L269.74,101.93L270.13,96.59L280.74,89.72L291.01,82.56L292.09,76.92L284.53,71.16L286.97,64.52L296.68,52.19L300.76,50.21L299.59,41.64L306.23,36.4L314.85,33.19L323.47,33.01L326.53,39.31L333.97,27.99L340.66,35.77L344.59,37.36L350.42,43.77L343.75,33z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GM\",\"title\":_vm.countries.getName('GM', _vm.codeLang),\"d\":\"M428.03,426.43L428.39,425.16L431.44,425.07L432.08,424.4L432.97,424.35L434.07,425.06L434.94,425.07L435.87,424.59L436.43,425.41L435.22,426.06L434,426.01L432.8,425.4L431.76,426.06L431.26,426.09L430.58,426.49z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GN\",\"title\":_vm.countries.getName('GN', _vm.codeLang),\"d\":\"M451.59,441.91L450.8,441.84L450.23,442.97L449.43,442.96L448.89,442.36L449.07,441.23L447.9,439.51L447.17,439.82L446.57,439.89L445.8,440.05L445.83,439.02L445.38,438.28L445.47,437.46L444.86,436.27L444.08,435.26L441.84,435.26L441.19,435.79L440.41,435.85L439.93,436.46L439.61,437.25L438.11,438.49L436.88,436.82L435.79,435.71L435.07,435.35L434.37,434.78L434.06,433.53L433.65,432.91L432.83,432.44L434.08,431.06L434.93,431.11L435.66,430.63L436.28,430.63L436.72,430.25L436.48,429.31L436.79,429.01L436.84,428.04L438.19,428.07L440.21,428.77L440.83,428.7L441.04,428.39L442.56,428.61L442.97,428.45L443.13,429.5L443.58,429.49L444.31,429.11L444.77,429.21L445.55,429.93L446.75,430.16L447.52,429.54L448.43,429.16L449.1,428.76L449.66,428.84L450.28,429.46L450.62,430.25L451.77,431.44L451.19,432.17L451.08,433.09L451.68,432.81L452.03,433.15L451.88,433.99L452.74,434.81L452.18,435.02L451.95,435.99L452.6,437.15L453.29,439.41L452.25,439.75L451.98,440.14L452.2,440.68L452.04,441.91z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GQ\",\"title\":_vm.countries.getName('GQ', _vm.codeLang),\"d\":\"M501.87,460.57L501.34,460.15L502.31,457.02L506.87,457.09L506.89,460.44L502.82,460.41z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GR\",\"title\":_vm.countries.getName('GR', _vm.codeLang),\"d\":\"M541.7,356.71l1.53,1.16l2.18,-0.19l2.09,0.24l-0.07,0.6l1.53,-0.41l-0.35,1.01l-4.04,0.29l0.03,-0.56l-3.42,-0.67L541.7,356.71zM549.85,335.75l-0.87,2.33l-0.67,0.41l-1.71,-0.1l-1.46,-0.35l-3.4,0.96l1.94,2.06l-1.42,0.59l-1.56,0l-1.48,-1.88l-0.53,0.8l0.63,2.18l1.4,1.7l-1.06,0.79l1.56,1.65l1.39,1.03l0.04,2l-1.36,-1.15l-1.24,0.21l0.83,1.8l-0.92,0.19l-1,-0.69l1.2,3.95l-0.58,0l-0.45,-1.25l-0.57,-0.02l-0.26,1.32l-0.45,-0.3l0.1,-0.74l-0.56,-1.04h-0.64l0.12,0.84l-0.25,0.27l-0.62,-0.54l-0.38,-1.01l0.52,-0.57l-0.36,-0.74l-0.41,-0.38l-0.42,-0.09l-0.49,-0.94l0.58,-0.52l0.36,-0.48l0.56,0.1l0.25,-0.41l0.59,-0.16l0.68,0.46l0.55,0.17l0.39,-0.62l-0.94,-0.08l-0.56,-0.19l-1.25,0.28l-1.22,0.05l-1.09,-1.64l-0.18,-0.25l0.17,-0.64l-1.42,-1.15l-0.19,-1.03l1.3,-1.76l0.17,-1.19l0.91,-0.53l0.06,-0.97l1.83,-0.33l1.07,-0.81l1.52,0.07l0.46,-0.65l0.53,-0.12l2.07,0.11l2.25,-1.02l1.98,1.3l2.55,-0.35l0.03,-1.86L549.85,335.75z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GT\",\"title\":_vm.countries.getName('GT', _vm.codeLang),\"d\":\"M222.64,424.75L221.2,424.25L219.45,424.2L218.17,423.63L216.66,422.45L216.73,421.61L217.05,420.93L216.66,420.39L218.01,418.03L221.6,418.02L221.68,417.04L221.22,416.86L220.91,416.23L219.87,415.56L218.83,414.58L220.1,414.58L220.1,412.93L222.72,412.93L225.31,412.96L225.29,415.27L225.07,418.55L225.9,418.55L226.82,419.08L227.06,418.64L227.88,419.01L226.61,420.12L225.28,420.93L225.08,421.48L225.3,422.04L224.72,422.78L224.06,422.95L224.21,423.29L223.69,423.61L222.73,424.33z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GW\",\"title\":_vm.countries.getName('GW', _vm.codeLang),\"d\":\"M432.83,432.44L431.33,431.25L430.15,431.07L429.51,430.26L429.52,429.83L428.67,429.23L428.49,428.62L429.98,428.15L430.91,428.24L431.66,427.92L436.84,428.04L436.79,429.01L436.48,429.31L436.72,430.25L436.28,430.63L435.66,430.63L434.93,431.11L434.08,431.06z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"GY\",\"title\":_vm.countries.getName('GY', _vm.codeLang),\"d\":\"M307.7,440L309.54,441.03L311.28,442.86L311.35,444.31L312.41,444.38L313.91,445.74L315.02,446.72L314.57,449.24L312.87,449.97L313.02,450.62L312.5,452.07L313.75,454.09L314.64,454.1L315.01,455.67L316.72,458.09L316.04,458.19L314.49,457.96L313.58,458.7L312.31,459.19L311.43,459.31L311.12,459.85L309.74,459.71L308.01,458.41L307.81,457.12L307.09,455.71L307.54,453.33L308.32,452.35L307.67,451.05L306.71,450.63L307.08,449.4L306.42,448.76L304.96,448.88L303.07,446.76L303.83,445.99L303.77,444.69L305.5,444.24L306.19,443.72L305.23,442.68L305.48,441.65z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"HN\",\"title\":_vm.countries.getName('HN', _vm.codeLang),\"d\":\"M230.43,426.9L229.95,426.01L229.09,425.76L229.29,424.61L228.91,424.3L228.33,424.1L227.1,424.44L227,424.05L226.15,423.59L225.55,423.02L224.72,422.78L225.3,422.04L225.08,421.48L225.28,420.93L226.61,420.12L227.88,419.01L228.17,419.13L228.79,418.62L229.59,418.58L229.85,418.81L230.29,418.67L231.59,418.93L232.89,418.85L233.79,418.53L234.12,418.21L235.01,418.36L235.68,418.56L236.41,418.49L236.97,418.24L238.25,418.64L238.7,418.7L239.55,419.24L240.36,419.89L241.38,420.33L242.12,421.13L241.16,421.07L240.77,421.46L239.8,421.84L239.09,421.84L238.47,422.21L237.91,422.08L237.43,421.64L237.14,421.72L236.78,422.41L236.51,422.38L236.46,422.98L235.48,423.77L234.97,424.11L234.68,424.47L233.85,423.89L233.25,424.65L232.66,424.63L232,424.7L232.06,426.11L231.65,426.13L231.3,426.79z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"HR\",\"title\":_vm.countries.getName('HR', _vm.codeLang),\"d\":\"M528.05,318.93L528.73,320.48L529.62,321.62L528.54,323.11L527.27,322.23L525.33,322.29L522.92,321.63L521.61,321.72L521.01,322.54L520,321.63L519.41,323.27L520.79,325.1L521.39,326.31L522.68,327.76L523.75,328.61L524.81,330.22L527.29,331.66L526.98,332.3L524.35,330.9L522.72,329.52L520.16,328.38L517.8,325.53L518.37,325.23L517.09,323.59L517.03,322.25L515.23,321.63L514.37,323.34L513.54,322.01L513.61,320.63L513.71,320.57L515.66,320.71L516.18,320.03L517.13,320.68L518.23,320.76L518.22,319.64L519.19,319.23L519.47,317.61L521.7,316.53L522.59,317.03L524.69,318.76L527,319.53z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"HT\",\"title\":_vm.countries.getName('HT', _vm.codeLang),\"d\":\"M270.04,406.75L271.75,406.88L274.18,407.35L274.43,408.96L274.21,410.09L273.53,410.59L274.25,411.47L274.19,412.27L272.33,411.77L271.01,411.97L269.3,411.76L267.99,412.31L266.48,411.39L266.73,410.44L269.31,410.85L271.43,411.09L272.44,410.43L271.16,409.16L271.18,408.03L269.41,407.57z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"HU\",\"title\":_vm.countries.getName('HU', _vm.codeLang),\"d\":\"M520.68,315.11L521.61,312.46L521.07,311.57L522.65,311.56L522.86,309.85L524.29,310.92L525.32,311.38L527.68,310.87L527.9,310.03L529.02,309.9L530.38,309.25L530.68,309.52L532,309L532.66,308L533.58,307.75L536.58,309.03L537.18,308.6L538.73,309.74L538.93,310.86L537.22,311.73L535.89,314.53L534.2,317.29L531.95,318.05L530.2,317.88L528.05,318.93L527,319.53L524.69,318.76L522.59,317.03L521.7,316.53L521.15,315.16z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"ID\",\"title\":_vm.countries.getName('ID', _vm.codeLang),\"d\":\"M813.72,492.06l-1.18,0.05l-3.72,-1.98l2.61,-0.56l1.47,0.86l0.98,0.86L813.72,492.06zM824.15,491.78l-2.4,0.62l-0.34,-0.34l0.25,-0.96l1.21,-1.72l2.77,-1.12l0.28,0.56l0.05,0.86L824.15,491.78zM805.83,486.01l1.01,0.75l1.73,-0.23l0.7,1.2l-3.24,0.57l-1.94,0.38l-1.51,-0.02l0.96,-1.62l1.54,-0.02L805.83,486.01zM819.86,486l-0.41,1.56l-4.21,0.8l-3.73,-0.35l-0.01,-1.03l2.23,-0.59l1.76,0.84l1.87,-0.21L819.86,486zM779.82,482.31l5.37,0.28l0.62,-1.16l5.2,1.35l1.02,1.82l4.21,0.51l3.44,1.67l-3.2,1.07l-3.08,-1.13l-2.54,0.08l-2.91,-0.21l-2.62,-0.51l-3.25,-1.07l-2.06,-0.28l-1.17,0.35l-5.11,-1.16l-0.49,-1.21l-2.57,-0.21l1.92,-2.68l3.4,0.17l2.26,1.09l1.16,0.21L779.82,482.31zM853,480.73l-1.44,1.91l-0.27,-2.11l0.5,-1.01l0.59,-0.95l0.64,0.82L853,480.73zM832.04,473.02l-1.05,0.93l-1.94,-0.51l-0.55,-1.2l2.84,-0.13L832.04,473.02zM841.08,472.01l1.02,2.13l-2.37,-1.15l-2.34,-0.23l-1.58,0.18l-1.94,-0.1l0.67,-1.53l3.46,-0.12L841.08,472.01zM851.37,466.59l0.78,4.51l2.9,1.67l2.34,-2.96l3.22,-1.68l2.49,0l2.4,0.97l2.08,1l3.01,0.53l0.05,9.1l0.05,9.16l-2.5,-2.31l-2.85,-0.57l-0.69,0.8l-3.55,0.09l1.19,-2.29l1.77,-0.78l-0.73,-3.05l-1.35,-2.35l-5.44,-2.37l-2.31,-0.23l-4.21,-2.58l-0.83,1.36l-1.08,0.25l-0.64,-1.02l-0.01,-1.21l-2.14,-1.37l3.02,-1l2,0.05l-0.24,-0.74l-4.1,-0.01l-1.11,-1.66l-2.5,-0.51l-1.19,-1.38l3.78,-0.67l1.44,-0.91l4.5,1.14L851.37,466.59zM826.41,459.43l-2.25,2.76l-2.11,0.54l-2.7,-0.54l-4.67,0.14l-2.45,0.4l-0.4,2.11l2.51,2.48l1.51,-1.26l5.23,-0.95l-0.23,1.28l-1.22,-0.4l-1.22,1.63l-2.47,1.08l2.65,3.57l-0.51,0.96l2.52,3.22l-0.02,1.84l-1.5,0.82l-1.1,-0.98l1.36,-2.29l-2.75,1.08l-0.7,-0.77l0.36,-1.08l-2.02,-1.64l0.21,-2.72l-1.87,0.85l0.24,3.25l0.11,4l-1.78,0.41l-1.2,-0.82l0.8,-2.57l-0.43,-2.69l-1.18,-0.02l-0.87,-1.91l1.16,-1.83l0.4,-2.21l1.41,-4.2l0.59,-1.15l2.38,-2.07l2.19,0.82l3.54,0.39l3.22,-0.12l2.77,-2.02L826.41,459.43zM836.08,460.23l-0.15,2.43l-1.45,-0.27l-0.43,1.69l1.16,1.47l-0.79,0.33l-1.13,-1.76l-0.83,-3.56l0.56,-2.23l0.93,-1.01l0.2,1.52l1.66,0.24L836.08,460.23zM805.76,458.29l3.14,2.58l-3.32,0.33l-0.94,1.9l0.12,2.52l-2.7,1.91L802,470.3l-1.08,4.27l-0.41,-0.99l-3.19,1.26l-1.11,-1.71l-2,-0.16l-1.4,-0.89l-3.33,1l-1.02,-1.35l-1.84,0.15l-2.31,-0.32l-0.43,-3.74l-1.4,-0.77l-1.35,-2.38l-0.39,-2.44l0.33,-2.58l1.67,-1.85l0.47,1.86l1.92,1.57l1.81,-0.57l1.79,0.2l1.63,-1.41l1.34,-0.24l2.65,0.78l2.29,-0.59l1.44,-3.88l1.08,-0.97l0.97,-3.17l3.22,0l2.43,0.47l-1.59,2.52l2.06,2.64L805.76,458.29zM771.95,479.71l-3.1,0.06l-2.36,-2.34l-3.6,-2.28l-1.2,-1.69l-2.12,-2.27l-1.39,-2.09l-2.13,-3.9l-2.46,-2.32l-0.82,-2.39l-1.03,-2.17l-2.53,-1.75l-1.47,-2.39l-2.11,-1.56l-2.92,-3.08l-0.25,-1.42l1.81,0.11l4.34,0.54l2.48,2.73l2.17,1.89l1.55,1.16l2.66,3l2.85,0.04l2.36,1.91l1.62,2.33l2.13,1.27l-1.12,2.27l1.61,0.97l1.01,0.07l0.48,1.94l0.98,1.56l2.06,0.25l1.36,1.76l-0.7,3.47L771.95,479.71z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"IE\",\"title\":_vm.countries.getName('IE', _vm.codeLang),\"d\":\"M457.88,284.29L458.34,287.65L456.22,291.77L451.25,294.45L447.28,293.77L449.55,288.99L448.09,284.22L451.9,280.47L454.02,278.2L454.6,280.8L454.02,283.37L455.76,283.31z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"IL\",\"title\":_vm.countries.getName('IL', _vm.codeLang),\"d\":\"M575.41,366.82L574.92,367.87L573.9,367.41L573.32,369.61L574.02,369.97L573.31,370.43L573.18,371.29L574.5,370.84L574.57,372.11L573.17,377.28L571.33,371.73L572.14,370.65L571.95,370.46L572.69,368.93L573.26,366.43L573.66,365.59L573.74,365.56L574.68,365.56L574.94,364.98L575.69,364.93L575.73,366.3L575.35,366.8z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"IN\",\"title\":_vm.countries.getName('IN', _vm.codeLang),\"d\":\"M693.5,357.44L696.51,361.43L696.23,364.17L697.34,365.88L697.25,367.57L695.24,367.13L696.03,370.76L698.78,372.82L702.68,375.09L700.9,376.55L699.81,379.54L702.53,380.74L705.17,382.29L708.83,384.06L712.67,384.47L714.29,386.06L716.45,386.35L719.83,387.08L722.16,387.03L722.48,385.79L722.11,383.8L722.33,382.45L724.04,381.78L724.28,384.26L724.33,384.89L726.88,386.08L728.65,385.59L731.01,385.8L733.3,385.71L733.5,383.78L732.36,382.78L734.62,382.38L737.17,380.03L740.4,378L742.75,378.78L744.75,377.44L746.07,379.42L745.12,380.76L748.14,381.23L748.36,382.43L747.37,383.01L747.6,384.94L745.6,384.37L741.97,386.53L742.05,388.31L740.51,390.91L740.36,392.41L739.11,394.93L736.92,394.23L736.81,397.38L736.18,398.41L736.48,399.69L735.09,400.41L733.62,395.61L732.84,395.62L732.38,397.56L730.85,395.98L731.71,394.25L732.97,394.07L734.26,391.48L732.65,390.95L730.04,391L727.38,390.58L727.13,388.43L725.79,388.27L723.57,386.93L722.58,389.04L724.6,390.67L722.85,391.82L722.23,392.94L723.95,393.76L723.48,395.6L724.45,397.88L724.89,400.36L724.48,401.46L722.58,401.42L719.12,402.04L719.28,404.29L717.78,406.05L713.75,408.05L710.61,411.51L708.5,413.36L705.71,415.27L705.71,416.61L704.31,417.33L701.78,418.36L700.47,418.52L699.63,420.72L700.21,424.47L700.36,426.84L699.18,429.55L699.16,434.38L697.71,434.52L696.44,436.67L697.29,437.6L694.73,438.4L693.79,440.32L692.66,441.13L690.01,438.5L688.71,434.54L687.63,431.68L686.65,430.34L685.16,427.6L684.47,424.02L683.98,422.22L681.43,418.25L680.27,412.61L679.43,408.84L679.44,405.26L678.9,402.46L674.82,404.25L672.84,403.89L669.18,400.26L670.53,399.17L669.7,397.99L666.41,395.41L668.28,393.37L674.45,393.38L673.89,390.74L672.32,389.18L672,386.79L670.16,385.39L673.25,382.09L676.51,382.33L679.44,379.01L681.2,375.75L683.92,372.51L683.88,370.18L686.27,368.27L684,366.64L683.03,364.39L682.04,361.44L683.41,359.98L687.67,360.81L690.79,360.3z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"IQ\",\"title\":_vm.countries.getName('IQ', _vm.codeLang),\"d\":\"M602.61,355.77L604.44,356.81L604.66,358.81L603.24,359.98L602.59,362.62L604.54,365.8L607.97,367.62L609.42,370.12L608.96,372.49L609.85,372.49L609.88,374.22L611.43,375.91L609.77,375.76L607.88,375.49L605.82,378.57L600.61,378.31L592.71,371.82L588.53,369.53L585.15,368.64L584.02,364.6L590.23,361.1L591.29,356.98L591.02,354.46L592.56,353.6L594,351.42L595.2,350.87L598.46,351.33L599.45,352.22L600.79,351.63z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"IR\",\"title\":_vm.countries.getName('IR', _vm.codeLang),\"d\":\"M626.44,351.53L628.91,350.85L630.9,348.83L632.77,348.93L634,348.27L636,348.6L639.1,350.39L641.34,350.78L644.54,353.87L646.63,353.99L646.88,356.9L645.74,361.15L644.97,363.6L646.19,364.09L644.99,365.92L645.91,368.56L646.13,370.65L648.25,371.2L648.48,373.3L645.94,376.23L647.32,377.91L648.45,379.84L651.13,381.24L651.21,384.01L652.55,384.52L652.78,385.96L648.74,387.57L647.68,391.17L642.41,390.24L639.35,389.53L636.19,389.12L634.99,385.31L633.65,384.75L631.49,385.31L628.67,386.82L625.24,385.79L622.41,383.38L619.71,382.48L617.84,379.47L615.77,375.2L614.26,375.72L612.48,374.65L611.43,375.91L609.88,374.22L609.85,372.49L608.96,372.49L609.42,370.12L607.97,367.62L604.54,365.8L602.59,362.62L603.24,359.98L604.66,358.81L604.44,356.81L602.61,355.77L600.79,351.63L599.26,348.8L599.8,347.71L598.93,343.59L600.85,342.56L601.29,343.93L602.71,345.59L604.63,346.06L605.65,345.96L608.96,343.3L610.01,343.03L610.83,344.1L609.87,345.88L611.62,347.74L612.31,347.57L613.2,350.18L615.86,350.91L617.81,352.67L621.79,353.27L626.17,352.35z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"IS\",\"title\":_vm.countries.getName('IS', _vm.codeLang),\"d\":\"M434.57,212.43L433.93,216.91L437.09,221.51L433.45,226.52L425.36,230.9L422.94,232.05L419.25,231.12L411.43,229.11L414.19,226.27L408.09,223.07L413.05,221.79L412.93,219.82L407.05,218.25L408.94,213.78L413.19,212.75L417.56,217.43L421.82,213.68L425.35,215.64L429.92,211.93z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"IT\",\"title\":_vm.countries.getName('IT', _vm.codeLang),\"d\":\"M518.77,347.88l-1.01,2.78l0.42,1.09l-0.59,1.79l-2.14,-1.31l-1.43,-0.38l-3.91,-1.79l0.39,-1.82l3.28,0.32l2.86,-0.39L518.77,347.88zM501.08,337.06l1.68,2.62l-0.39,4.81l-1.27,-0.23l-1.14,1.2l-1.06,-0.95l-0.11,-4.38l-0.64,-2.1l1.54,0.19L501.08,337.06zM509.95,315.46l4.01,1.05l-0.3,1.99l0.67,1.71l-2.23,-0.58l-2.28,1.42l0.16,1.97l-0.34,1.12l0.92,1.99l2.63,1.95l1.41,3.17l3.12,3.05l2.2,-0.02l0.68,0.83l-0.79,0.74l2.51,1.35l2.06,1.12l2.4,1.92l0.29,0.68l-0.52,1.31l-1.56,-1.7l-2.44,-0.6l-1.18,2.36l2.03,1.34l-0.33,1.88l-1.17,0.21l-1.5,3.06l-1.17,0.27l0.01,-1.08l0.57,-1.91l0.61,-0.77l-1.09,-2.09l-0.86,-1.83l-1.16,-0.46l-0.83,-1.58l-1.8,-0.67l-1.21,-1.49l-2.07,-0.24l-2.19,-1.68l-2.56,-2.45l-1.91,-2.19l-0.87,-3.8l-1.4,-0.45l-2.28,-1.29l-1.29,0.53l-1.62,1.8l-1.17,0.28l0.32,-1.68l-1.52,-0.49l-0.72,-3.04l0.97,-1.21l-0.83,-1.5l0.12,-1.13l1.21,0.86l1.35,-0.19l1.57,-1.36l0.49,0.64l1.34,-0.13l0.61,-1.63l2.07,0.51l1.24,-0.68l0.22,-1.67l1.7,0.58l0.33,-0.78l2.77,-0.71L509.95,315.46z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"JM\",\"title\":_vm.countries.getName('JM', _vm.codeLang),\"d\":\"M257.76,410.96L259.65,411.22L261.14,411.93L261.6,412.73L259.63,412.78L258.78,413.27L257.21,412.8L255.61,411.73L255.94,411.06L257.12,410.86z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"JO\",\"title\":_vm.countries.getName('JO', _vm.codeLang),\"d\":\"M574.92,367.87L575.41,366.82L578.53,368.14L584.02,364.6L585.15,368.64L584.62,369.13L579,370.78L581.8,374.04L580.87,374.58L580.41,375.67L578.27,376.11L577.6,377.27L576.38,378.25L573.26,377.74L573.17,377.28L574.57,372.11L574.5,370.84L574.92,369.88z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"JP\",\"title\":_vm.countries.getName('JP', _vm.codeLang),\"d\":\"M852.76,362.01l0.36,1.15l-1.58,2.03l-1.15,-1.07l-1.44,0.78l-0.74,1.95l-1.83,-0.95l0.02,-1.58l1.55,-2l1.59,0.39l1.15,-1.42L852.76,362.01zM870.53,351.73l-1.06,2.78l0.49,1.73l-1.46,2.42l-3.58,1.6l-4.93,0.21l-4,3.84l-1.88,-1.29L854,360.5l-4.88,0.75l-3.32,1.59l-3.28,0.06l2.84,2.46l-1.87,5.61l-1.81,1.37l-1.36,-1.27l0.69,-2.96l-1.77,-0.96l-1.14,-2.28l2.65,-1.03l1.47,-2.11l2.82,-1.75l2.06,-2.33l5.58,-1.02l3,0.7l2.93,-6.17l1.87,1.67l4.11,-3.51l1.59,-1.38l1.76,-4.38l-0.48,-4.1l1.18,-2.33l2.98,-0.68l1.53,5.11l-0.08,2.94l-2.59,3.6L870.53,351.73zM878.76,325.8l1.97,0.83l1.98,-1.65l0.62,4.35l-4.16,1.05l-2.46,3.76l-4.41,-2.58l-1.53,4.12l-3.12,0.06l-0.39,-3.74l1.39,-2.94l3,-0.21l0.82,-5.38l0.83,-3.09l3.29,4.12L878.76,325.8z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"KE\",\"title\":_vm.countries.getName('KE', _vm.codeLang),\"d\":\"M590.19,465.78L591.85,468.07L589.89,469.19L589.2,470.35L588.14,470.55L587.75,472.52L586.85,473.64L586.3,475.5L585.17,476.42L581.15,473.63L580.95,472.01L570.79,466.34L570.31,466.03L570.29,463.08L571.09,461.95L572.47,460.11L573.49,458.08L572.26,454.88L571.93,453.48L570.6,451.54L572.32,449.87L574.22,448.03L575.68,448.5L575.68,450.07L576.64,450.98L578.59,450.98L582.14,453.36L583.02,453.38L583.68,453.31L584.3,453.63L586.17,453.85L587,452.69L589.56,451.52L590.69,452.46L592.61,452.46L590.16,455.63z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"KG\",\"title\":_vm.countries.getName('KG', _vm.codeLang),\"d\":\"M674.22,333.11L674.85,331.45L676.69,330.91L681.31,332.22L681.74,329.98L683.33,329.18L687.33,330.79L688.35,330.37L693,330.47L697.16,330.87L698.56,332.24L700.29,332.79L699.9,333.65L695.48,335.68L694.48,337.16L690.88,337.6L689.82,339.95L686.85,339.46L684.92,340.18L682.24,341.9L682.63,342.75L681.83,343.58L676.53,344.13L673.06,342.96L670.02,343.24L670.29,341.14L673.34,341.75L674.37,340.62L676.5,340.98L680.09,338.34L676.77,336.38L674.77,337.31L672.7,335.91L675.05,333.48z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"KH\",\"title\":_vm.countries.getName('KH', _vm.codeLang),\"d\":\"M765.44,433.6L764.3,432.12L762.89,429.18L762.22,425.73L764.02,423.35L767.64,422.8L770.27,423.21L772.58,424.34L773.85,422.35L776.34,423.41L776.99,425.33L776.64,428.75L771.93,430.94L773.16,432.67L770.22,432.87L767.79,434.01z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"KP\",\"title\":_vm.countries.getName('KP', _vm.codeLang),\"d\":\"M841.55,332.62L841.94,333.29L840.88,333.06L839.66,334.33L838.82,335.61L838.93,338.28L837.48,339.09L836.98,339.74L835.92,340.82L834.05,341.42L832.84,342.4L832.75,343.97L832.42,344.37L833.54,344.95L835.13,346.53L834.72,347.39L833.53,347.62L831.55,347.79L830.46,349.39L829.2,349.27L829.03,349.59L827.67,348.92L827.33,349.58L826.51,349.87L826.41,349.21L825.68,348.89L824.93,348.32L825.7,346.75L826.36,346.33L826.11,345.68L826.82,343.74L826.63,343.15L825,342.75L823.68,341.78L825.96,339.43L829.05,337.45L830.98,334.8L832.31,335.97L834.73,336.11L834.29,334.14L838.62,332.51L839.74,330.38z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"KR\",\"title\":_vm.countries.getName('KR', _vm.codeLang),\"d\":\"M835.13,346.53L837.55,350.71L838.24,352.98L838.26,356.96L837.21,358.84L834.67,359.5L832.43,360.91L829.9,361.2L829.59,359.35L830.11,356.78L828.87,353.18L830.95,352.59L829.03,349.59L829.2,349.27L830.46,349.39L831.55,347.79L833.53,347.62L834.72,347.39z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"XK\",\"title\":_vm.countries.getName('XK', _vm.codeLang),\"d\":\"M533.47,333.92L533.34,334.69L532.98,334.66L532.8,333.29L532.13,332.91L531.53,331.89L532.05,331.04L532.72,330.76L533.11,329.5L533.61,329.28L534.01,329.82L534.54,330.06L534.9,330.67L535.36,330.85L535.91,331.55L536.31,331.53L535.99,332.46L535.66,332.91L535.75,333.19L535.12,333.33z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"KW\",\"title\":_vm.countries.getName('KW', _vm.codeLang),\"d\":\"M609.77,375.76L610.35,377.17L610.1,377.9L611,380.31L609.02,380.39L608.32,378.88L605.82,378.57L607.88,375.49z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"KZ\",\"title\":_vm.countries.getName('KZ', _vm.codeLang),\"d\":\"M674.22,333.11L672.61,333.81L668.92,336.42L667.69,339.07L666.64,339.09L665.88,337.34L662.31,337.22L661.74,334.16L660.37,334.13L660.58,330.33L657.23,327.53L652.42,327.83L649.13,328.39L646.45,324.89L644.16,323.41L639.81,320.57L639.29,320.22L632.07,322.57L632.18,336.7L630.74,336.88L628.78,333.95L626.88,332.89L623.7,333.68L622.46,334.93L622.3,334.01L622.99,332.44L622.46,331.12L619.21,329.82L617.94,326.35L616.4,325.37L616.3,324.09L619.03,324.46L619.14,321.58L621.52,320.94L623.97,321.53L624.48,317.62L623.98,315.11L621.17,315.31L618.79,314.31L615.54,316.1L612.93,316.96L611.5,316.3L611.79,314.2L610,311.44L607.92,311.55L605.54,308.72L607.16,305.5L606.34,304.63L608.57,299.86L611.46,302.39L611.81,299.2L617.59,294.35L621.97,294.23L628.16,297.33L631.47,299.12L634.45,297.25L638.89,297.17L642.48,299.46L643.3,298.15L647.23,298.34L647.94,296.23L643.39,293.14L646.08,290.91L645.56,289.66L648.25,288.45L646.23,285.25L647.51,283.63L658,281.97L659.37,280.78L666.39,278.99L668.91,276.95L673.95,278.01L674.83,283.02L677.76,281.86L681.36,283.49L681.13,286.07L683.82,285.8L690.84,281.31L689.82,282.81L693.4,286.47L699.66,298.05L701.16,295.72L705.02,298.28L709.05,297.14L710.59,297.94L711.94,300.49L713.9,301.33L715.1,303.18L718.71,302.6L720.2,305.23L718.06,308.06L715.73,308.46L715.6,312.64L714.04,314.5L708.48,313.15L706.46,320.41L705.02,321.3L699.47,322.88L701.99,329.63L700.07,330.63L700.29,332.79L698.56,332.24L697.16,330.87L693,330.47L688.35,330.37L687.33,330.79L683.33,329.18L681.74,329.98L681.31,332.22L676.69,330.91L674.85,331.45z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"LA\",\"title\":_vm.countries.getName('LA', _vm.codeLang),\"d\":\"M770.27,423.21L771.18,421.91L771.31,419.47L769.04,416.94L768.86,414.07L766.73,411.69L764.61,411.49L764.05,412.51L762.4,412.59L761.56,412.08L758.61,413.82L758.54,411.2L759.23,408.09L757.34,407.96L757.18,406.18L755.96,405.26L756.56,404.16L758.95,402.22L759.2,402.92L760.69,403L760.27,399.57L761.72,399.13L763.36,401.5L764.62,404.22L768.07,404.25L769.16,406.84L767.37,407.61L766.56,408.68L769.92,410.44L772.25,413.9L774.02,416.47L776.14,418.49L776.85,420.53L776.34,423.41L773.85,422.35L772.58,424.34z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"LB\",\"title\":_vm.countries.getName('LB', _vm.codeLang),\"d\":\"M575.69,364.93L574.94,364.98L574.68,365.56L573.74,365.56L574.74,362.83L576.13,360.45L576.19,360.33L577.45,360.51L577.91,361.83L576.38,363.1z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"LK\",\"title\":_vm.countries.getName('LK', _vm.codeLang),\"d\":\"M704.57,442.37L704.15,445.29L702.98,446.09L700.54,446.73L699.2,444.5L698.71,440.47L699.98,435.89L701.91,437.46L703.22,439.44z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"LR\",\"title\":_vm.countries.getName('LR', _vm.codeLang),\"d\":\"M453.63,451.22L452.89,451.24L450,449.91L447.46,447.78L445.07,446.25L443.18,444.44L443.85,443.54L444,442.73L445.26,441.2L446.57,439.89L447.17,439.82L447.9,439.51L449.07,441.23L448.89,442.36L449.43,442.96L450.23,442.97L450.8,441.84L451.59,441.91L451.46,442.73L451.74,444.09L451.13,445.33L451.95,446.1L452.84,446.29L454.03,447.46L454.11,448.57L453.84,448.92z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"LS\",\"title\":_vm.countries.getName('LS', _vm.codeLang),\"d\":\"M556.5,547.75L557.48,548.71L556.62,550.27L556.14,551.32L554.58,551.82L554.06,552.86L553.06,553.18L550.96,550.69L552.45,548.66L553.97,547.41L555.28,546.77z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"LT\",\"title\":_vm.countries.getName('LT', _vm.codeLang),\"d\":\"M538.99,282.09L538.76,280.87L539.06,279.54L537.82,278.77L534.89,277.91L534.29,273.75L537.5,272.2L542.2,272.53L544.96,272.03L545.35,273.08L546.84,273.4L549.54,275.82L549.8,278.02L547.5,279.59L546.85,282.31L543.81,284.11L541.1,284.07L540.43,282.61z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"LU\",\"title\":_vm.countries.getName('LU', _vm.codeLang),\"d\":\"M492.2,301.29L492.76,302.27L492.6,304.16L491.79,304.26L491.16,303.88L491.47,301.45z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"LV\",\"title\":_vm.countries.getName('LV', _vm.codeLang),\"d\":\"M534.29,273.75L534.39,269.94L535.77,266.7L538.41,264.92L540.63,268.8L542.88,268.7L543.42,264.71L545.81,263.78L547.04,264.43L549.45,266.37L551.77,266.38L553.12,267.57L553.35,270.06L554.26,273.05L551.24,274.98L549.54,275.82L546.84,273.4L545.35,273.08L544.96,272.03L542.2,272.53L537.5,272.2z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"LY\",\"title\":_vm.countries.getName('LY', _vm.codeLang),\"d\":\"M516.89,397.93L514.91,399.05L513.33,397.39L508.9,396.08L507.67,394.17L505.45,392.75L504.14,393.31L503.15,391.6L503.04,390.28L501.38,388.02L502.5,386.73L502.25,384.76L502.61,383.04L502.41,381.6L502.9,379.01L502.75,377.53L501.84,374.69L503.21,373.94L503.45,372.56L503.15,371.21L505.08,369.95L505.94,368.9L507.31,367.95L507.47,365.4L510.76,366.55L511.94,366.26L514.28,366.82L518,368.29L519.31,371.21L521.83,371.85L525.78,373.21L528.77,374.82L530.14,373.98L531.48,372.49L530.83,369.98L531.71,368.38L533.73,366.83L535.66,366.38L539.45,367.06L540.41,368.54L541.45,368.55L542.34,369.11L545.13,369.5L545.81,370.58L544.8,372.15L545.23,373.54L544.51,375.54L545.35,378.12L545.35,389.3L545.35,400.53L545.35,406.49L542.13,406.5L542.09,407.74L530.91,402.04L519.72,396.27z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"MA\",\"title\":_vm.countries.getName('MA', _vm.codeLang),\"d\":\"M450.96,383.14L450.93,379.39L455.46,377.03L458.26,376.54L460.55,375.68L461.63,374.06L464.91,372.77L465.03,370.36L466.65,370.07L467.92,368.86L471.59,368.3L472.1,367.02L471.36,366.31L470.39,362.78L470.23,360.73L469.17,358.55L467.95,358.51L465.05,357.76L462.38,358L460.69,356.54L458.63,356.52L457.74,358.63L455.87,362.14L453.79,363.53L450.98,365.06L449.18,367.3L448.8,369.04L447.73,371.86L448.43,375.89L446.09,378.57L444.69,379.42L442.48,381.59L439.87,381.94L438.57,383.06L442.19,383.07L450.94,383.1L450.94,383.1L450.94,383.1L442.19,383.07L438.57,383.06z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"MD\",\"title\":_vm.countries.getName('MD', _vm.codeLang),\"d\":\"M549.89,309.45L550.56,308.83L552.42,308.41L554.49,309.72L555.64,309.88L556.91,311L556.71,312.41L557.73,313.08L558.13,314.8L559.11,315.84L558.92,316.44L559.44,316.86L558.7,317.15L557.04,317.04L556.77,316.47L556.18,316.8L556.38,317.52L555.61,318.81L555.12,320.18L554.42,320.62L553.91,318.79L554.21,317.07L554.12,315.28L552.5,312.84L551.61,311.09L550.74,309.85z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"ME\",\"title\":_vm.countries.getName('ME', _vm.codeLang),\"d\":\"M530.77,332.23L530.6,331.51L529.38,333.38L529.57,334.57L528.98,334.28L528.2,333.05L526.98,332.3L527.29,331.66L527.7,329.56L528.61,328.67L529.14,328.31L529.88,328.97L530.29,329.51L531.21,329.92L532.28,330.71L532.05,331.04L531.53,331.89z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"MG\",\"title\":_vm.countries.getName('MG', _vm.codeLang),\"d\":\"M614.17,498.4L614.91,499.61L615.6,501.5L616.06,504.96L616.78,506.31L616.5,507.69L616.01,508.55L615.05,506.85L614.53,507.71L615.06,509.85L614.81,511.09L614.04,511.76L613.86,514.24L612.76,517.66L611.38,521.75L609.64,527.42L608.57,531.63L607.3,535.18L605.02,535.91L602.57,537.22L600.96,536.43L598.73,535.33L597.96,533.71L597.77,531L596.79,528.58L596.53,526.41L597.03,524.25L598.32,523.73L598.33,522.74L599.67,520.48L599.92,518.6L599.27,517.2L598.74,515.35L598.52,512.65L599.5,511.02L599.87,509.17L601.27,509.07L602.84,508.47L603.87,507.95L605.11,507.91L606.7,506.26L609.01,504.48L609.85,503.04L609.47,501.81L610.66,502.16L612.21,500.17L612.26,498.45L613.19,497.17z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"MK\",\"title\":_vm.countries.getName('MK', _vm.codeLang),\"d\":\"M532.98,334.66L533.34,334.69L533.47,333.92L535.12,333.33L535.75,333.19L536.71,332.97L538,332.91L539.41,334.12L539.61,336.59L539.07,336.71L538.61,337.36L537.09,337.29L536.02,338.1L534.19,338.42L533.03,337.52L532.63,335.93z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"ML\",\"title\":_vm.countries.getName('ML', _vm.codeLang),\"d\":\"M441.13,422.22L442.07,421.7L442.54,420L443.43,419.93L445.39,420.73L446.97,420.16L448.05,420.35L448.48,419.71L459.73,419.67L460.35,417.64L459.86,417.28L458.51,404.6L457.16,391.54L461.45,391.49L470.91,398.14L480.37,404.69L481.03,406.08L482.78,406.93L484.08,407.41L484.11,409.29L487.22,409L487.23,415.75L485.69,417.69L485.45,419.48L482.96,419.93L479.14,420.18L478.1,421.21L476.3,421.32L474.51,421.33L473.81,420.78L472.26,421.19L469.64,422.39L469.11,423.29L466.93,424.57L466.55,425.31L465.38,425.89L464.02,425.51L463.25,426.21L462.84,428.17L460.61,430.53L460.68,431.49L459.91,432.7L460.1,434.34L458.94,434.76L458.29,435.12L457.85,433.91L457.04,434.23L456.56,434.17L456.04,435L453.88,434.97L453.1,434.55L452.74,434.81L451.88,433.99L452.03,433.15L451.68,432.81L451.08,433.09L451.19,432.17L451.77,431.44L450.62,430.25L450.28,429.46L449.66,428.84L449.1,428.76L448.43,429.16L447.52,429.54L446.75,430.16L445.55,429.93L444.77,429.21L444.31,429.11L443.58,429.49L443.13,429.5L442.97,428.45L443.1,427.56L442.86,426.46L441.81,425.65L441.26,424.01z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"MM\",\"title\":_vm.countries.getName('MM', _vm.codeLang),\"d\":\"M754.36,405.95L752.72,407.23L750.74,407.37L749.46,410.56L748.28,411.09L749.64,413.66L751.42,415.79L752.56,417.71L751.54,420.23L750.57,420.76L751.24,422.21L753.11,424.49L753.43,426.09L753.38,427.42L754.48,430.02L752.94,432.67L751.58,435.58L751.31,433.48L752.17,431.3L751.23,429.62L751.46,426.51L750.32,425.03L749.41,421.59L748.9,417.93L747.69,415.53L745.84,416.99L742.65,419.05L741.08,418.79L739.34,418.12L740.31,414.51L739.73,411.77L737.53,408.38L737.87,407.31L736.23,406.93L734.24,404.51L734.06,402.1L735.04,402.56L735.09,400.41L736.48,399.69L736.18,398.41L736.81,397.38L736.92,394.23L739.11,394.93L740.36,392.41L740.51,390.91L742.05,388.31L741.97,386.53L745.6,384.37L747.6,384.94L747.37,383.01L748.36,382.43L748.14,381.23L749.78,380.99L750.72,382.85L751.94,383.6L752.03,386L751.91,388.57L749.26,391.15L748.92,394.78L751.88,394.28L752.55,397.08L754.33,397.67L753.51,400.17L755.59,401.3L756.81,401.85L758.86,400.98L758.95,402.22L756.56,404.16L755.96,405.26z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"MN\",\"title\":_vm.countries.getName('MN', _vm.codeLang),\"d\":\"M721.29,304.88L724.25,304.14L729.6,300.4L733.87,298.33L736.3,299.68L739.23,299.74L741.1,301.79L743.9,301.94L747.96,303.03L750.68,300L749.54,297.4L752.45,292.74L755.59,294.61L758.13,295.14L761.43,296.29L761.96,299.61L765.95,301.45L768.6,300.64L772.14,300.07L774.95,300.65L777.7,302.74L779.4,304.94L782,304.9L785.53,305.59L788.11,304.53L791.8,303.82L795.91,300.76L797.59,301.23L799.06,302.69L802.4,302.33L801.04,305.58L799.06,309.8L799.78,311.51L801.37,310.98L804.13,311.63L806.29,310.09L808.54,311.42L811.08,314.31L810.77,315.76L808.56,315.3L804.49,315.84L802.51,317L800.46,319.66L796.18,321.21L793.39,323.31L790.51,322.51L788.93,322.15L787.46,324.69L788.35,326.19L788.81,327.47L786.84,328.77L784.83,330.82L781.56,332.15L777.35,332.3L772.82,333.61L769.56,335.62L768.32,334.46L764.93,334.46L760.78,332.17L758.01,331.6L754.28,332.13L748.49,331.28L745.4,331.37L743.76,329.1L742.48,325.53L740.75,325.1L737.36,322.65L733.58,322.1L730.25,321.42L729.24,319.69L730.32,314.96L728.39,311.65L724.39,310.08L722.03,307.85z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"MR\",\"title\":_vm.countries.getName('MR', _vm.codeLang),\"d\":\"M441.13,422.22L439.28,420.24L437.58,418.11L435.72,417.34L434.38,416.49L432.81,416.52L431.45,417.15L430.05,416.9L429.09,417.83L428.85,416.27L429.63,414.83L429.98,412.08L429.67,409.17L429.33,407.7L429.61,406.23L428.89,404.81L427.41,403.53L428.02,402.53L439,402.55L438.47,398.2L439.16,396.65L441.78,396.38L441.69,388.52L450.9,388.69L450.9,383.96L461.45,391.49L457.16,391.54L458.51,404.6L459.86,417.28L460.35,417.64L459.73,419.67L448.48,419.71L448.05,420.35L446.97,420.16L445.39,420.73L443.43,419.93L442.54,420L442.07,421.7z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"MW\",\"title\":_vm.countries.getName('MW', _vm.codeLang),\"d\":\"M572.15,495.69L571.37,497.85L572.15,501.57L573.13,501.53L574.14,502.45L575.31,504.53L575.55,508.25L574.34,508.86L573.48,510.87L571.65,509.08L571.45,507.04L572.04,505.69L571.87,504.54L570.77,503.81L569.99,504.07L568.38,502.69L566.91,501.95L567.76,499.29L568.64,498.3L568.1,495.94L568.66,493.64L569.14,492.87L568.43,490.47L567.11,489.21L569.85,489.73L570.42,490.51L571.37,491.83z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"MX\",\"title\":_vm.countries.getName('MX', _vm.codeLang),\"d\":\"M202.89,388.72L201.8,391.43L201.31,393.64L201.1,397.72L200.83,399.19L201.32,400.83L202.19,402.3L202.75,404.61L204.61,406.82L205.26,408.51L206.36,409.96L209.34,410.75L210.5,411.97L212.96,411.15L215.09,410.86L217.19,410.33L218.96,409.82L220.74,408.62L221.41,406.89L221.64,404.4L222.13,403.53L224.02,402.74L226.99,402.05L229.47,402.15L231.17,401.9L231.84,402.53L231.75,403.97L230.24,405.74L229.58,407.55L230.09,408.06L229.67,409.34L228.97,411.63L228.26,410.88L227.67,410.93L227.14,410.97L226.14,412.74L225.63,412.39L225.29,412.53L225.31,412.96L222.72,412.93L220.1,412.93L220.1,414.58L218.83,414.58L219.87,415.56L220.91,416.23L221.22,416.86L221.68,417.04L221.6,418.02L218.01,418.03L216.66,420.39L217.05,420.93L216.73,421.61L216.66,422.45L213.49,419.34L212.04,418.4L209.75,417.64L208.19,417.85L205.93,418.94L204.52,419.23L202.54,418.47L200.44,417.91L197.82,416.58L195.72,416.17L192.54,414.82L190.2,413.42L189.49,412.64L187.92,412.47L185.05,411.54L183.88,410.2L180.87,408.53L179.47,406.66L178.8,405.21L179.73,404.92L179.44,404.07L180.09,403.3L180.1,402.26L179.16,400.92L178.9,399.72L177.96,398.2L175.49,395.18L172.67,392.79L171.31,390.88L168.9,389.62L168.39,388.86L168.82,386.94L167.39,386.21L165.73,384.69L165.03,382.5L163.52,382.24L161.9,380.58L160.58,379.03L160.46,378.03L158.95,375.61L157.96,373.13L158,371.88L155.97,370.59L155.04,370.73L153.44,369.83L152.99,371.16L153.45,372.72L153.72,375.15L154.69,376.48L156.77,378.69L157.23,379.44L157.66,379.66L158.02,380.76L158.52,380.71L159.09,382.75L159.94,383.55L160.53,384.66L162.3,386.26L163.23,389.15L164.06,390.5L164.84,391.94L164.99,393.56L166.34,393.66L167.47,395.05L168.49,396.41L168.42,396.95L167.24,398.06L166.74,398.05L166,396.2L164.17,394.47L162.15,392.99L160.71,392.21L160.8,389.96L160.38,388.28L159.04,387.32L157.11,385.93L156.74,386.33L156.04,385.51L154.31,384.76L152.66,382.93L152.86,382.69L154.01,382.87L155.05,381.69L155.16,380.26L153,377.99L151.36,377.1L150.32,375.09L149.28,372.97L147.98,370.36L146.84,367.4L150.03,367.15L153.59,366.79L153.33,367.43L157.56,369.04L163.96,371.35L169.54,371.32L171.76,371.32L171.76,369.97L176.62,369.97L177.64,371.14L179.08,372.17L180.74,373.6L181.67,375.29L182.37,377.05L183.82,378.02L186.15,378.98L187.91,376.45L190.21,376.39L192.18,377.67L193.59,379.85L194.56,381.71L196.21,383.51L196.83,385.7L197.62,387.17L199.8,388.13L201.79,388.81z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"MY\",\"title\":_vm.countries.getName('MY', _vm.codeLang),\"d\":\"M758.65,446.07l0.22,1.44l1.85,-0.33l0.92,-1.15l0.64,0.26l1.66,1.69l1.18,1.87l0.16,1.88l-0.3,1.27l0.27,0.96l0.21,1.65l0.99,0.77l1.1,2.46l-0.05,0.94l-1.99,0.19l-2.65,-2.06l-3.32,-2.21l-0.33,-1.42l-1.62,-1.87l-0.39,-2.31l-1.01,-1.52l0.31,-2.04l-0.62,-1.19l0.49,-0.5L758.65,446.07zM807.84,450.9l-2.06,0.95l-2.43,-0.47l-3.22,0l-0.97,3.17l-1.08,0.97l-1.44,3.88l-2.29,0.59l-2.65,-0.78l-1.34,0.24l-1.63,1.41l-1.79,-0.2l-1.81,0.57l-1.92,-1.57l-0.47,-1.86l2.05,0.96l2.17,-0.52l0.56,-2.36l1.2,-0.53l3.36,-0.6l2.01,-2.21l1.38,-1.77l1.28,1.45l0.59,-0.95l1.34,0.09l0.16,-1.78l0.13,-1.38l2.16,-1.95l1.41,-2.19l1.13,-0.01l1.44,1.42l0.13,1.22l1.85,0.78l2.34,0.84l-0.2,1.1l-1.88,0.14L807.84,450.9z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"MZ\",\"title\":_vm.countries.getName('MZ', _vm.codeLang),\"d\":\"M572.15,495.69L574.26,495.46L577.63,496.26L578.37,495.9L580.32,495.83L581.32,494.98L583,495.02L586.06,493.92L588.29,492.28L588.75,493.55L588.63,496.38L588.98,498.88L589.09,503.36L589.58,504.76L588.75,506.83L587.66,508.84L585.87,510.64L583.31,511.75L580.15,513.16L576.98,516.31L575.9,516.85L573.94,518.94L572.79,519.63L572.55,521.75L573.88,524L574.43,525.76L574.47,526.66L574.96,526.51L574.88,529.47L574.43,530.88L575.09,531.4L574.67,532.67L573.5,533.76L571.19,534.8L567.82,536.46L566.59,537.61L566.83,538.91L567.54,539.12L567.3,540.76L565.18,540.74L564.94,539.36L564.52,537.97L564.28,536.86L564.78,533.43L564.05,531.26L562.71,527L565.66,523.59L566.4,521.44L566.83,521.17L567.14,519.43L566.69,518.55L566.81,516.35L567.36,514.31L567.35,510.62L565.9,509.68L564.56,509.47L563.96,508.75L562.66,508.14L560.32,508.2L560.14,507.12L559.87,505.07L568.38,502.69L569.99,504.07L570.77,503.81L571.87,504.54L572.04,505.69L571.45,507.04L571.65,509.08L573.48,510.87L574.34,508.86L575.55,508.25L575.31,504.53L574.14,502.45L573.13,501.53L572.15,501.57L571.37,497.85z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"NA\",\"title\":_vm.countries.getName('NA', _vm.codeLang),\"d\":\"M521.08,546.54L519,544.15L517.9,541.85L517.28,538.82L516.59,536.57L515.65,531.85L515.59,528.22L515.23,526.58L514.14,525.34L512.69,522.87L511.22,519.3L510.61,517.45L508.32,514.58L508.15,512.33L509.5,511.78L511.18,511.28L513,511.37L514.67,512.69L515.09,512.48L526.46,512.36L528.4,513.76L535.19,514.17L540.34,512.98L542.64,512.31L544.46,512.48L545.56,513.14L545.59,513.38L544.01,514.04L543.15,514.05L541.37,515.2L540.29,513.99L535.97,515.02L533.88,515.11L533.8,525.68L531.04,525.79L531.04,534.65L531.03,546.17L528.53,547.8L527.03,548.03L525.26,547.43L524,547.2L523.53,545.84L522.42,544.97z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"NC\",\"title\":_vm.countries.getName('NC', _vm.codeLang),\"d\":\"M940.08,523.48L942.38,525.34L943.83,526.72L942.77,527.45L941.22,526.63L939.22,525.28L937.41,523.69L935.56,521.59L935.17,520.58L936.37,520.63L937.95,521.64L939.18,522.65z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"NE\",\"title\":_vm.countries.getName('NE', _vm.codeLang),\"d\":\"M481.29,429.88L481.36,427.93L478.12,427.28L478.04,425.9L476.46,424.03L476.08,422.72L476.3,421.32L478.1,421.21L479.14,420.18L482.96,419.93L485.45,419.48L485.69,417.69L487.23,415.75L487.22,409L491.17,407.68L499.29,401.83L508.9,396.08L513.33,397.39L514.91,399.05L516.89,397.93L517.58,402.6L518.63,403.38L518.68,404.33L519.84,405.35L519.23,406.63L518.15,412.61L518.01,416.4L514.43,419.14L513.22,422.94L514.39,424L514.38,425.85L516.18,425.92L515.9,427.26L515.11,427.43L515.02,428.33L514.49,428.4L512.6,425.27L511.94,425.15L509.75,426.75L507.58,425.92L506.07,425.75L505.26,426.15L503.61,426.07L501.96,427.29L500.53,427.36L497.14,425.88L495.81,426.58L494.38,426.53L493.33,425.45L490.51,424.38L487.5,424.72L486.77,425.34L486.38,426.99L485.57,428.14L485.38,430.68L483.24,429.04L482.23,429.05z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"NG\",\"title\":_vm.countries.getName('NG', _vm.codeLang),\"d\":\"M499.09,450.08L496.18,451.08L495.11,450.94L494.03,451.56L491.79,451.5L490.29,449.75L489.37,447.73L487.38,445.89L485.27,445.92L482.8,445.92L482.96,441.39L482.89,439.6L483.42,437.83L484.28,436.96L485.64,435.21L485.35,434.45L485.9,433.31L485.27,431.63L485.38,430.68L485.57,428.14L486.38,426.99L486.77,425.34L487.5,424.72L490.51,424.38L493.33,425.45L494.38,426.53L495.81,426.58L497.14,425.88L500.53,427.36L501.96,427.29L503.61,426.07L505.26,426.15L506.07,425.75L507.58,425.92L509.75,426.75L511.94,425.15L512.6,425.27L514.49,428.4L515.02,428.33L516.13,429.47L515.82,429.98L515.67,430.93L513.31,433.13L512.57,434.94L512.17,436.41L511.58,437.04L511.01,439.01L509.51,440.17L509.08,441.59L508.45,442.73L508.19,443.89L506.26,444.84L504.69,443.69L503.62,443.73L501.95,445.37L501.14,445.4L499.81,448.1z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"NI\",\"title\":_vm.countries.getName('NI', _vm.codeLang),\"d\":\"M234.93,432.31L233.96,431.41L232.65,430.26L232.03,429.3L230.85,428.41L229.44,427.12L229.75,426.68L230.22,427.11L230.43,426.9L231.3,426.79L231.65,426.13L232.06,426.11L232,424.7L232.66,424.63L233.25,424.65L233.85,423.89L234.68,424.47L234.97,424.11L235.48,423.77L236.46,422.98L236.51,422.38L236.78,422.41L237.14,421.72L237.43,421.64L237.91,422.08L238.47,422.21L239.09,421.84L239.8,421.84L240.77,421.46L241.16,421.07L242.12,421.13L241.88,421.41L241.74,422.05L242.02,423.1L241.38,424.08L241.08,425.23L240.98,426.5L241.14,427.23L241.21,428.52L240.78,428.8L240.52,430.02L240.71,430.77L240.13,431.5L240.27,432.26L240.69,432.73L240.02,433.33L239.2,433.14L238.73,432.56L237.84,432.32L237.2,432.69L235.35,431.94z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"NL\",\"title\":_vm.countries.getName('NL', _vm.codeLang),\"d\":\"M492.28,285.98L494.61,286.11L495.14,287.69L494.44,291.92L493.73,293.63L492.04,293.63L492.52,298.32L490.97,297.28L489.2,295.33L486.6,296.26L484.55,295.91L485.99,294.67L488.45,287.93z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"NO\",\"title\":_vm.countries.getName('NO', _vm.codeLang),\"d\":\"M554.23,175.61l8.77,6.24l-3.61,2.23l3.07,5.11l-4.77,3.19l-2.26,0.72l1.19,-5.59l-3.6,-3.25l-4.35,2.78l-1.38,5.85l-2.67,3.44l-3.01,-1.87l-3.66,0.38l-3.12,-4.15l-1.68,2.09l-1.74,0.32l-0.41,5.08l-5.28,-1.22l-0.74,4.22l-2.69,-0.03l-1.85,5.24l-2.8,7.87l-4.35,9.5l1.02,2.23l-0.98,2.55l-2.78,-0.11l-1.82,5.91l0.17,8.04l1.79,2.98l-0.93,6.73l-2.33,3.81l-1.24,3.15l-1.88,-3.35l-5.54,6.27l-3.74,1.24l-3.88,-2.71l-1,-5.86l-0.89,-13.26l2.58,-3.88l7.4,-5.18l5.54,-6.59l5.13,-9.3l6.74,-13.76l4.7,-5.67l7.71,-9.89l6.15,-3.59l4.61,0.44l4.27,-6.99l5.11,0.38L554.23,175.61z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"NP\",\"title\":_vm.countries.getName('NP', _vm.codeLang),\"d\":\"M722.33,382.45L722.11,383.8L722.48,385.79L722.16,387.03L719.83,387.08L716.45,386.35L714.29,386.06L712.67,384.47L708.83,384.06L705.17,382.29L702.53,380.74L699.81,379.54L700.9,376.55L702.68,375.09L703.84,374.31L706.09,375.31L708.92,377.4L710.49,377.86L711.43,379.39L713.61,380.02L715.89,381.41L719.06,382.14z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"NZ\",\"title\":_vm.countries.getName('NZ', _vm.codeLang),\"d\":\"M960.38,588.63l0.64,1.53l1.99,-1.5l0.81,1.57l0,1.57l-1.04,1.74l-1.83,2.8l-1.43,1.54l1.03,1.86l-2.16,0.05l-2.4,1.46l-0.75,2.57l-1.59,4.03l-2.2,1.8l-1.4,1.16l-2.58,-0.09l-1.82,-1.34l-3.05,-0.28l-0.47,-1.48l1.51,-2.96l3.53,-3.87l1.81,-0.73l2.01,-1.47l2.4,-2.01l1.68,-1.98l1.25,-2.81l1.06,-0.95l0.42,-2.07l1.97,-1.7L960.38,588.63zM964.84,571.61l2.03,3.67l0.06,-2.38l1.27,0.95l0.42,2.65l2.26,1.15l1.89,0.28l1.6,-1.35l1.42,0.41l-0.68,3.15l-0.85,2.09l-2.14,-0.07l-0.75,1.1l0.26,1.56l-0.41,0.68l-1.06,1.97l-1.39,2.53l-2.17,1.49l-0.48,-0.98l-1.17,-0.54l1.62,-3.04l-0.92,-2.01l-3.02,-1.45l0.08,-1.31l2.03,-1.25l0.47,-2.74l-0.13,-2.28l-1.14,-2.34l0.08,-0.61l-1.34,-1.43l-2.21,-3.04l-1.17,-2.41l1.04,-0.27l1.53,1.89l2.18,0.89L964.84,571.61z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"OM\",\"title\":_vm.countries.getName('OM', _vm.codeLang),\"d\":\"M640.29,403.18l-1.05,2.04l-1.27,-0.16l-0.58,0.71l-0.45,1.5l0.34,1.98l-0.26,0.36l-1.29,-0.01l-1.75,1.1l-0.27,1.43l-0.64,0.62l-1.74,-0.02l-1.1,0.74l0.01,1.18l-1.36,0.81l-1.55,-0.27l-1.88,0.98l-1.3,0.16l-0.92,-2.04l-2.19,-4.84l8.41,-2.96l1.87,-5.97l-1.29,-2.14l0.07,-1.22l0.82,-1.26l0.01,-1.25l1.27,-0.6l-0.5,-0.42l0.23,-2l1.43,-0.01l1.26,2.09l1.57,1.11l2.06,0.4l1.66,0.55l1.27,1.74l0.76,1l1,0.38l-0.01,0.67l-1.02,1.79l-0.45,0.84L640.29,403.18zM633.37,388.64L633,389.2l-0.53,-1.06l0.82,-1.06l0.35,0.27L633.37,388.64z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"PA\",\"title\":_vm.countries.getName('PA', _vm.codeLang),\"d\":\"M256.88,443.21L255.95,442.4L255.35,440.88L256.04,440.13L255.33,439.94L254.81,439.01L253.41,438.23L252.18,438.41L251.62,439.39L250.48,440.09L249.87,440.19L249.6,440.78L250.93,442.3L250.17,442.66L249.76,443.08L248.46,443.22L247.97,441.54L247.61,442.02L246.68,441.86L246.12,440.72L244.97,440.54L244.24,440.21L243.04,440.21L242.95,440.82L242.63,440.4L242.78,439.84L243.01,439.27L242.9,438.76L243.32,438.42L242.74,438L242.72,436.87L243.81,436.62L244.81,437.63L244.75,438.23L245.87,438.35L246.14,438.12L246.91,438.82L248.29,438.61L249.48,437.9L251.18,437.33L252.14,436.49L253.69,436.65L253.58,436.93L255.15,437.03L256.4,437.52L257.31,438.36L258.37,439.14L258.03,439.56L258.68,441.21L258.15,442.05L257.24,441.85z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"PE\",\"title\":_vm.countries.getName('PE', _vm.codeLang),\"d\":\"M280.13,513.14L279.38,514.65L277.94,515.39L275.13,513.71L274.88,512.51L269.33,509.59L264.3,506.42L262.13,504.64L260.97,502.27L261.43,501.44L259.06,497.69L256.29,492.45L253.65,486.83L252.5,485.54L251.62,483.48L249.44,481.64L247.44,480.51L248.35,479.26L246.99,476.59L247.86,474.64L250.1,472.87L250.43,474.04L249.63,474.7L249.7,475.72L250.86,475.5L252,475.8L253.17,477.21L254.76,476.06L255.29,474.18L257.01,471.75L260.38,470.65L263.44,467.73L264.31,465.92L263.92,463.81L264.67,463.54L266.53,464.86L267.42,466.18L268.72,466.9L270.37,469.82L272.46,470.17L274.01,469.43L275.02,469.91L276.7,469.67L278.85,470.98L277.04,473.82L277.88,473.88L279.28,475.37L276.75,475.24L276.38,475.66L274.08,476.19L270.88,478.1L270.67,479.4L269.96,480.38L270.24,481.89L268.54,482.7L268.54,483.89L267.8,484.4L268.97,486.93L270.53,488.65L269.94,489.86L271.8,490.02L272.86,491.53L275.33,491.6L277.63,489.94L277.44,494.24L278.72,494.57L280.3,494.08L282.73,498.66L282.12,499.62L281.99,501.64L281.93,504.08L280.83,505.52L281.34,506.59L280.69,507.56L281.9,510z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"PG\",\"title\":_vm.countries.getName('PG', _vm.codeLang),\"d\":\"M912.32,482.42l-0.79,0.28l-1.21,-1.08l-1.23,-1.78l-0.6,-2.13l0.39,-0.27l0.3,0.83l0.85,0.63l1.36,1.77l1.32,0.95L912.32,482.42zM901.39,478.67l-1.47,0.23l-0.44,0.79l-1.53,0.68l-1.44,0.66l-1.49,0l-2.3,-0.81l-1.6,-0.78l0.23,-0.87l2.51,0.41l1.53,-0.22l0.42,-1.34l0.4,-0.07l0.27,1.49l1.6,-0.21l0.79,-0.96l1.57,-1l-0.31,-1.65l1.68,-0.05l0.57,0.46l-0.06,1.55L901.39,478.67zM887.96,484.02l2.5,1.84l1.82,2.99l1.61,-0.09l-0.11,1.25l2.17,0.48l-0.84,0.53l2.98,1.19l-0.31,0.82l-1.86,0.2l-0.69,-0.73l-2.41,-0.32l-2.83,-0.43l-2.18,-1.8l-1.59,-1.55l-1.46,-2.46l-3.66,-1.23l-2.38,0.8l-1.71,0.93l0.36,2.08l-2.2,0.97l-1.57,-0.47l-2.9,-0.12l-0.05,-9.16l-0.05,-9.1l4.87,1.92l5.18,1.6l1.93,1.43l1.56,1.41l0.43,1.65l4.67,1.73l0.68,1.49l-2.58,0.3L887.96,484.02zM904.63,475.93l-0.88,0.74l-0.53,-1.65l-0.65,-1.08l-1.27,-0.91l-1.6,-1.19l-2.02,-0.82l0.78,-0.67l1.51,0.78l0.95,0.61l1.18,0.67l1.12,1.17l1.07,0.89L904.63,475.93z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"PH\",\"title\":_vm.countries.getName('PH', _vm.codeLang),\"d\":\"M829.59,439.86l0.29,1.87l0.17,1.58l-0.96,2.57l-1.02,-2.86l-1.31,1.42l0.9,2.06l-0.8,1.31l-3.3,-1.63l-0.79,-2.03l0.86,-1.33l-1.78,-1.33l-0.88,1.17l-1.32,-0.11l-2.08,1.57l-0.46,-0.82l1.1,-2.37l1.77,-0.79l1.53,-1.06l0.99,1.27l2.13,-0.77l0.46,-1.26l1.98,-0.08l-0.17,-2.18l2.27,1.34l0.24,1.42L829.59,439.86zM822.88,434.6l-1.01,0.93l-0.88,1.79l-0.88,0.84l-1.73,-1.95l0.58,-0.76l0.7,-0.79l0.31,-1.76l1.55,-0.17l-0.45,1.91l2.08,-2.74L822.88,434.6zM807.52,437.32l-3.73,2.67l1.38,-1.97l2.03,-1.74l1.68,-1.96l1.47,-2.82l0.5,2.31l-1.85,1.56L807.52,437.32zM817,430.02l1.68,0.88l1.78,0l-0.05,1.19l-1.3,1.2l-1.78,0.85l-0.1,-1.32l0.2,-1.45L817,430.02zM827.14,429.25l0.79,3.18l-2.16,-0.75l0.06,0.95l0.69,1.75l-1.33,0.63l-0.12,-1.99l-0.84,-0.15l-0.44,-1.72l1.65,0.23l-0.04,-1.08l-1.71,-2.18l2.69,0.06L827.14,429.25zM816,426.66l-0.74,2.47l-1.2,-1.42l-1.43,-2.18l2.4,0.1L816,426.66zM815.42,410.92l1.73,0.84l0.86,-0.76l0.25,0.75l-0.46,1.22l0.96,2.09l-0.74,2.42l-1.65,0.96l-0.44,2.33l0.63,2.29l1.49,0.32l1.24,-0.34l3.5,1.59l-0.27,1.56l0.92,0.69l-0.29,1.32l-2.18,-1.4l-1.04,-1.5l-0.72,1.05l-1.79,-1.72l-2.55,0.42l-1.4,-0.63l0.14,-1.19l0.88,-0.73l-0.84,-0.67l-0.36,1.04l-1.38,-1.65l-0.42,-1.26l-0.1,-2.77l1.13,0.96l0.29,-4.55l0.91,-2.66L815.42,410.92z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"PL\",\"title\":_vm.countries.getName('PL', _vm.codeLang),\"d\":\"M517.36,296.97L516.21,294.11L516.43,292.55L515.73,290.1L514.72,288.45L515.5,287.2L514.84,284.81L516.76,283.42L521.13,281.2L524.67,279.56L527.46,280.38L527.67,281.56L530.38,281.62L533.83,282.17L538.99,282.09L540.43,282.61L541.1,284.07L541.22,286.16L542,287.94L541.98,289.79L540.3,290.73L541.17,292.85L541.22,294.86L542.63,298.75L542.33,299.99L540.94,300.5L538.39,304.11L539.11,306.03L538.5,305.78L535.84,304.14L533.82,304.74L532.5,304.3L530.84,305.22L529.43,303.7L528.27,304.28L528.11,304.02L526.82,301.89L524.74,301.63L524.47,300.26L522.55,299.77L522.13,300.9L520.61,300L520.78,298.79L518.69,298.4z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"PK\",\"title\":_vm.countries.getName('PK', _vm.codeLang),\"d\":\"M685.99,351.76L688.06,353.39L688.89,356.05L693.5,357.44L690.79,360.3L687.67,360.81L683.41,359.98L682.04,361.44L683.03,364.39L684,366.64L686.27,368.27L683.88,370.18L683.92,372.51L681.2,375.75L679.44,379.01L676.51,382.33L673.25,382.09L670.16,385.39L672,386.79L672.32,389.18L673.89,390.74L674.45,393.38L668.28,393.37L666.41,395.41L664.36,394.64L663.52,392.44L661.35,390.1L656.19,390.68L651.63,390.73L647.68,391.17L648.74,387.57L652.78,385.96L652.55,384.52L651.21,384.01L651.13,381.24L648.45,379.84L647.32,377.91L645.94,376.23L650.63,377.87L653.44,377.39L655.11,377.79L655.68,377.09L657.63,377.37L661.28,376.04L661.38,373.29L662.94,371.45L665.03,371.45L665.33,370.54L667.48,370.11L668.51,370.41L669.61,369.49L669.46,367.51L670.65,365.51L672.43,364.66L671.33,362.44L674,362.55L674.77,361.33L674.65,360.03L676.05,358.6L675.72,356.9L675.06,355.44L676.7,353.93L679.71,353.2L682.93,352.8L684.35,352.15z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"PR\",\"title\":_vm.countries.getName('PR', _vm.codeLang),\"d\":\"M289.41,410.89L290.84,411.15L291.35,411.73L290.63,412.47L288.52,412.45L286.88,412.55L286.72,411.3L287.11,410.87z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"PS\",\"title\":_vm.countries.getName('PS', _vm.codeLang),\"d\":\"M574.92,367.87L574.92,369.88L574.5,370.84L573.18,371.29L573.31,370.43L574.02,369.97L573.32,369.61L573.9,367.41z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"PT\",\"title\":_vm.countries.getName('PT', _vm.codeLang),\"d\":\"M449.92,334.56L450.94,333.61L452.08,333.06L452.79,334.9L454.44,334.89L454.92,334.42L456.56,334.55L457.34,336.43L456.04,337.43L456.01,340.31L455.55,340.84L455.44,342.56L454.23,342.86L455.35,345.03L454.58,347.38L455.54,348.44L455.16,349.4L454.12,350.72L454.35,351.88L453.23,352.79L451.75,352.3L450.3,352.68L450.73,349.94L450.47,347.76L449.21,347.43L448.54,346.08L448.77,343.72L449.88,342.41L450.08,340.94L450.67,338.73L450.6,337.16L450.04,335.82z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"PY\",\"title\":_vm.countries.getName('PY', _vm.codeLang),\"d\":\"M299.49,526.99L300.6,523.4L300.67,521.8L302.01,519.18L306.9,518.32L309.5,518.37L312.12,519.88L312.16,520.79L312.99,522.45L312.81,526.51L315.77,527.09L316.91,526.5L318.8,527.32L319.33,528.22L319.59,530.99L319.92,532.17L320.96,532.3L322.01,531.81L323.02,532.36L323.02,534.04L322.64,535.86L322.09,537.64L321.63,540.39L319.09,542.79L316.87,543.29L313.72,542.81L310.9,541.96L313.66,537.23L313.25,535.86L310.37,534.66L306.94,532.4L304.65,531.94z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"QA\",\"title\":_vm.countries.getName('QA', _vm.codeLang),\"d\":\"M617.72,392.16L617.53,389.92L618.29,388.3L619.05,387.96L619.9,388.93L619.95,390.74L619.34,392.55L618.56,392.77z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"RO\",\"title\":_vm.countries.getName('RO', _vm.codeLang),\"d\":\"M538.93,310.86L540.14,309.97L541.88,310.43L543.67,310.45L544.97,311.46L545.93,310.82L548,310.42L548.71,309.44L549.89,309.45L550.74,309.85L551.61,311.09L552.5,312.84L554.12,315.28L554.21,317.07L553.91,318.79L554.42,320.62L555.67,321.35L556.98,320.71L558.26,321.39L558.32,322.42L556.96,323.26L556.11,322.9L555.33,327.61L553.68,327.2L551.64,325.79L548.34,326.69L546.95,327.68L542.83,327.48L540.67,326.87L539.59,327.16L538.78,325.56L538.27,324.88L538.92,324.22L538.22,323.73L537.34,324.61L535.71,323.47L535.49,321.84L533.78,320.9L533.47,319.63L531.95,318.05L534.2,317.29L535.89,314.53L537.22,311.73z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"RS\",\"title\":_vm.countries.getName('RS', _vm.codeLang),\"d\":\"M533.78,320.9L535.49,321.84L535.71,323.47L537.34,324.61L538.22,323.73L538.92,324.22L538.27,324.88L538.78,325.56L538.09,326.44L538.34,327.86L539.7,329.52L538.63,330.71L538.16,331.92L538.47,332.37L538,332.91L536.71,332.97L535.75,333.19L535.66,332.91L535.99,332.46L536.31,331.53L535.91,331.55L535.36,330.85L534.9,330.67L534.54,330.06L534.01,329.82L533.61,329.28L533.11,329.5L532.72,330.76L532.05,331.04L532.28,330.71L531.21,329.92L530.29,329.51L529.88,328.97L529.14,328.31L529.8,328.14L530.21,326.32L528.86,324.82L529.56,323.1L528.54,323.11L529.62,321.62L528.73,320.48L528.05,318.93L530.2,317.88L531.95,318.05L533.47,319.63z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"RU\",\"title\":_vm.countries.getName('RU', _vm.codeLang),\"d\":\"M1008.27,215.75l-2.78,2.97l-4.6,0.7l-0.07,6.46l-1.12,1.35l-2.63,-0.19l-2.14,-2.26l-3.73,-1.92l-0.63,-2.89l-2.85,-1.1l-3.19,0.87l-1.52,-2.37l0.61,-2.55l-3.36,1.64l1.26,3.19l-1.59,2.83l-0.02,0.04l-3.6,2.89l-3.63,-0.48l2.53,3.44l1.67,5.2l1.29,1.67l0.33,2.53l-0.72,1.6l-5.23,-1.32l-7.84,4.51l-2.49,0.69l-4.29,4.1l-4.07,3.5l-1.03,2.55l-4.01,-3.9l-7.31,4.42l-1.28,-2.08l-2.7,2.39l-3.75,-0.76l-0.9,3.63l-3.36,5.22l0.1,2.14l3.19,1.17l-0.38,7.46l-2.6,0.19l-1.2,4.15l1.17,2.1l-4.9,2.47l-0.97,5.4l-4.18,1.14l-0.84,4.66l-4.04,4.18l-1.04,-3.08l-1.2,-6.69l-1.56,-10.65l1.35,-6.95l2.37,-3.07l0.15,-2.44l4.36,-1.18l5.01,-6.78l4.83,-5.73l5.04,-4.57l2.25,-8.37l-3.41,0.51l-1.68,4.92l-7.11,6.36l-2.3,-7.14l-7.24,2l-7.02,9.56l2.32,3.38l-6.26,1.42l-4.33,0.56l0.2,-3.95l-4.36,-0.84l-3.47,2.7l-8.57,-0.94l-9.22,1.62l-9.08,10.33l-10.75,11.78l4.42,0.61l1.38,3l2.72,1.05l1.79,-2.38l3.08,0.31l4.05,5.19l0.09,3.92l-2.19,4.51l-0.24,5.27l-1.26,6.85l-4.23,6.01l-0.94,2.82l-3.81,4.66l-3.78,4.53l-1.81,2.28l-3.74,2.25l-1.77,0.05l-1.76,-1.86l-3.76,2.79l-0.44,1.26l-0.39,-0.66l-0.02,-1.93l1.43,-0.1l0.4,-4.55l-0.74,-3.36l2.41,-1.4l3.4,0.7l1.89,-3.89l0.96,-4.46l1.09,-1.51l1.47,-3.76l-4.63,1.24l-2.43,1.65l-4.26,0l-1.13,-3.95l-3.32,-3.03l-4.88,-1.38l-1.04,-4.28l-0.98,-2.73l-1.05,-1.94l-1.73,-4.61l-2.46,-1.71l-4.2,-1.39l-3.72,0.13l-3.48,0.84l-2.32,2.31l1.54,1.1l0.04,2.52l-1.56,1.45l-2.53,4.72l0.03,1.93l-3.95,2.74l-3.37,-1.63l-3.35,0.36l-1.47,-1.46l-1.68,-0.47l-4.11,3.06l-3.69,0.71l-2.58,1.06l-3.53,-0.7l-2.6,0.04l-1.7,-2.2l-2.75,-2.09l-2.81,-0.58l-3.55,0.57l-2.65,0.81l-3.98,-1.84l-0.53,-3.32l-3.3,-1.15l-2.54,-0.53l-3.14,-1.87l-2.9,4.66l1.14,2.6l-2.73,3.03l-4.05,-1.09l-2.8,-0.16l-1.87,-2.04l-2.92,-0.06l-2.44,-1.35l-4.26,2.07l-5.35,3.74l-2.96,0.74l-1.1,0.35l-1.49,-2.63l-3.61,0.58l-1.19,-1.84l-1.96,-0.85l-1.35,-2.55l-1.55,-0.8l-4.03,1.14l-3.86,-2.57l-1.49,2.33l-6.27,-11.58l-3.58,-3.66l1.03,-1.5l-7.03,4.49l-2.69,0.27l0.23,-2.58l-3.6,-1.63l-2.93,1.17l-0.88,-5.01l-5.04,-1.06l-2.52,2.03l-7.02,1.79l-1.37,1.19l-10.49,1.66l-1.29,1.62l2.02,3.21l-2.69,1.2l0.53,1.25l-2.69,2.22l4.54,3.1l-0.7,2.11l-3.94,-0.19l-0.81,1.31l-3.59,-2.29l-4.45,0.09l-2.98,1.87l-3.32,-1.79l-6.18,-3.1l-4.38,0.12l-5.79,4.85l-0.35,3.19l-2.88,-2.53l-2.24,4.77l0.82,0.87l-1.62,3.21l2.38,2.84l2.08,-0.12l1.79,2.76l-0.28,2.1l1.42,0.66l-1.28,2.39l-2.72,0.66l-2.79,4.09l2.55,3.7l-0.28,2.59l3.06,4.46l-1.67,1.51l-0.48,0.95l-1.24,-0.25l-1.93,-2.27l-0.79,-0.13l-1.76,-0.87l-0.86,-1.55l-2.62,-0.79l-1.7,0.6l-0.49,-0.71l-3.82,-1.83l-4.13,-0.62l-2.37,-0.66l-0.34,0.45l-3.57,-3.27l-3.2,-1.48l-2.42,-2.32l2.04,-0.64l2.33,-3.35l-1.57,-1.6l4.13,-1.67l-0.07,-0.9l-2.52,0.66l0.09,-1.83l1.45,-1.16l2.71,-0.31l0.44,-1.4l-0.62,-2.33l1.14,-2.23l-0.03,-1.26l-4.13,-1.41l-1.64,0.05l-1.73,-2.04l-2.15,0.69l-3.56,-1.54l0.06,-0.87l-1,-1.93l-2.24,-0.22l-0.23,-1.39l0.7,-0.91l-1.79,-2.58l-2.91,0.44l-0.85,-0.23l-0.71,1.04l-1.05,-0.18l-0.69,-2.94l-0.66,-1.54l0.54,-0.44l2.26,0.16l1.09,-1.02l-0.81,-1.25l-1.89,-0.83l0.17,-0.86l-1.14,-0.87l-1.76,-3.15l0.6,-1.31l-0.27,-2.31l-2.74,-1.18l-1.47,0.59l-0.4,-1.24l-2.95,-1.26l-0.9,-2.99l-0.24,-2.49l-1.35,-1.19l1.2,-1.66l-0.83,-4.96l2,-3.13l-0.42,-0.96l3.19,-3.07l-2.94,-2.68l6,-7.41l2.6,-3.45l1.05,-3.1l-4.15,-4.26l1.15,-4.15l-2.52,-4.85l1.89,-5.76l-3.26,-7.96l2.59,-5.48l-4.29,-4.99l0.41,-5.4l2.26,-0.72l4.77,-3.19l2.89,-2.81l4.61,4.86l7.68,1.88l10.59,8.65l2.15,3.51l0.19,4.8l-3.11,3.69l-4.58,1.85l-12.52,-5.31l-2.06,0.9l4.57,5.1l0.18,3.15l0.18,6.75l3.61,1.97l2.19,1.66l0.36,-3.11l-1.69,-2.8l1.78,-2.51l6.78,4.1l2.36,-1.59l-1.89,-4.88l6.53,-6.74l2.59,0.4l2.62,2.43l1.63,-4.81l-2.34,-4.28l1.37,-4.41l-2.06,-4.69l7.84,2.44l1.6,4.18l-3.55,0.91l0.02,4.04l2.21,2.44l4.33,-1.54l0.69,-4.61l5.86,-3.52l9.79,-6.54l2.11,0.38l-2.76,4.64l3.48,0.78l2.01,-2.58l5.25,-0.21l4.16,-3.19l3.2,4.62l3.19,-5.09l-2.94,-4.58l1.46,-2.66l8.28,2.44l3.88,2.49l10.16,8.8l1.88,-3.97l-2.85,-4.11l-0.08,-1.68l-3.38,-0.78l0.92,-3.83l-1.5,-6.49l-0.08,-2.74l5.17,-7.99l1.84,-8.42l2.08,-1.88l7.42,2.51l0.58,5.18l-2.66,7.28l1.74,2.78l0.9,5.94l-0.64,11.07l3.09,4.73l-1.2,5.01l-5.49,10.2l3.21,1.02l1.12,-2.51l3.08,-1.82l0.74,-3.55l2.43,-3.49l-1.63,-4.26l1.31,-5.08l-3.07,-0.64l-0.67,-4.42l2.24,-8.28l-3.64,-7.03l5.02,-6.04l-0.65,-6.62l1.4,-0.22l1.47,5.19l-1.11,8.67l3,1.59l-1.28,-6.37l4.69,-3.58l5.82,-0.49l5.18,5.18l-2.49,-7.62l-0.28,-10.28l4.88,-2.02l6.74,0.44l6.08,-1.32l-2.28,-5.38l3.25,-7.02l3.22,-0.3l5.45,-5.51l7.4,-1.51l0.94,-3.15l7.36,-1.08l2.29,2.61l6.29,-6.24l5.15,0.2l0.77,-5.24l2.68,-5.33l6.62,-5.31l4.81,4.21l-3.82,3.13l6.35,1.92l0.76,6.03l2.56,-2.94l8.2,0.16l6.32,5.84l2.25,4.35l-0.7,5.85l-3.1,3.24l-7.37,5.92l-2.11,3.08l3.48,1.43l4.15,2.55l2.52,-1.91l1.43,6.39l1.23,-2.56l4.48,-1.57l9,1.65l0.68,4.58l11.72,1.43l0.16,-7.47l5.95,1.74l4.48,-0.05l4.53,5.14l1.29,6.04l-1.66,3.84l3.52,6.98l4.41,3.49l2.71,-9.18l4.5,4l4.78,-2.38l5.43,2.72l2.07,-2.47l4.59,1.24l-2.02,-8.4l3.7,-4.07l25.32,6.06l2.39,5.35l7.34,6.65l11.32,-1.62l5.58,1.41l2.33,3.5l-0.34,6.02l3.45,2.29l3.75,-1.64l4.97,-0.21l5.29,1.57l5.31,-0.89l4.88,6.99l3.47,-2.48l-2.27,-5.07l1.25,-3.62l8.95,2.29l5.83,-0.49l8.06,3.84l3.92,3.44l6.87,5.86l7.35,7.34l-0.24,4.44l1.89,1.74l-0.65,-5.15l7.61,1.07L1008.27,215.75zM880.84,306.25l-2.82,-7.68l-1.16,-4.51l0.07,-4.5l-0.97,-4.5l-0.73,-3.15l-1.25,0.67l1.11,2.21l-2.59,2.17l-0.25,6.3l1.64,4.41l-0.12,5.85l-0.65,3.24l0.32,4.54l-0.31,4.01l0.52,3.4l1.84,-3.13l2.13,2.44l0.08,-2.84l-2.73,-4.23l1.72,-6.11L880.84,306.25zM537.82,278.77l-2.94,-0.86l-3.87,1.58l-0.64,2.13l3.45,0.55l5.16,-0.07l-0.22,-1.23l0.3,-1.33L537.82,278.77zM979.95,178.65l3.66,-0.52l2.89,-2.06l0.24,-1.19l-4.06,-2.51l-2.38,-0.02l-0.36,0.37l-3.57,3.64l0.5,2.73L979.95,178.65zM870.07,151.56l-2.66,3.92l0.49,0.52l5.75,1.08l4.25,-0.07l-0.34,-2.57l-3.98,-3.81L870.07,151.56zM894.64,142.03l3.24,-4.25l-7.04,-2.88l-5.23,-1.68l-0.67,3.59l5.21,4.27L894.64,142.03zM869.51,140.34l10.33,0.3l2.21,-8.14l-10.13,-6.07l-7.4,-0.51l-3.7,2.18l-1.51,7.75l5.55,7.01L869.51,140.34zM622.39,166.28l-2.87,1.96l0.41,4.83l5.08,2.35l0.74,3.82l9.16,1.1l1.66,-0.74l-5.36,-7.11l-0.57,-7.52l4.39,-9.14l4.18,-9.82l8.71,-10.17l8.56,-5.34l9.93,-5.74l1.88,-3.71l-1.95,-4.83l-5.46,1.6l-4.8,4.49l-9.33,2.22l-9.26,7.41l-6.27,5.85l0.76,4.87l-6.71,9.03l2.58,1.22l-5.56,8.27L622.39,166.28zM769.87,98.34l0.83,-5.72l-7.11,-8.34l-2.11,-0.98l-2.3,1.7l-5.12,18.6L769.87,98.34zM605.64,69.03l3.04,3.88l3.28,-2.69l0.39,-2.72l2.52,-1.27l3.76,-2.23l1.08,-2.62l-4.16,-3.85l-2.64,2.9l-1.61,4.12l-0.57,-4.65l-4.26,0.21L601,63.25l6.24,0.52L605.64,69.03zM736.89,82.07l4.65,5.73l7.81,4.2l6.12,-1.8l0.69,-13.62l-6.46,-16.04l-5.45,-9.02l-6.07,4.11l-7.28,11.83l3.83,3.27L736.89,82.07z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"RW\",\"title\":_vm.countries.getName('RW', _vm.codeLang),\"d\":\"M560.54,466.55L561.66,468.12L561.49,469.76L560.69,470.11L559.2,469.93L558.34,471.52L556.63,471.3L556.89,469.77L557.28,469.56L557.38,467.9L558.19,467.12L558.87,467.41z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SA\",\"title\":_vm.countries.getName('SA', _vm.codeLang),\"d\":\"M595.2,417.22L594.84,415.98L593.99,415.1L593.77,413.93L592.33,412.89L590.83,410.43L590.04,408.02L588.1,405.98L586.85,405.5L584.99,402.65L584.67,400.57L584.79,398.78L583.18,395.42L581.87,394.23L580.35,393.6L579.43,391.84L579.58,391.15L578.8,389.55L577.98,388.86L576.89,386.54L575.18,384.02L573.75,381.86L572.36,381.87L572.79,380.13L572.92,379.02L573.26,377.74L576.38,378.25L577.6,377.27L578.27,376.11L580.41,375.67L580.87,374.58L581.8,374.04L579,370.78L584.62,369.13L585.15,368.64L588.53,369.53L592.71,371.82L600.61,378.31L605.82,378.57L608.32,378.88L609.02,380.39L611,380.31L612.1,383.04L613.48,383.75L613.96,384.86L615.87,386.17L616.04,387.46L615.76,388.49L616.12,389.53L616.92,390.4L617.3,391.41L617.72,392.16L618.56,392.77L619.34,392.55L619.87,393.72L619.98,394.43L621.06,397.51L629.48,399.03L630.05,398.39L631.33,400.53L629.46,406.5L621.05,409.46L612.97,410.59L610.35,411.91L608.34,414.98L607.03,415.46L606.33,414.49L605.26,414.64L602.55,414.35L602.03,414.05L598.8,414.12L598.04,414.39L596.89,413.63L596.14,415.06L596.43,416.29z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SB\",\"title\":_vm.countries.getName('SB', _vm.codeLang),\"d\":\"M929.81,492.75l0.78,0.97l-1.96,-0.02l-1.07,-1.74l1.67,0.69L929.81,492.75zM926.26,491.02l-1.09,0.06l-1.72,-0.29l-0.59,-0.44l0.18,-1.12l1.85,0.44l0.91,0.59L926.26,491.02zM928.58,490.25l-0.42,0.52l-2.08,-2.45l-0.58,-1.68h0.95l1.01,2.25L928.58,490.25zM923.52,486.69l0.12,0.57l-2.2,-1.19l-1.54,-1.01l-1.05,-0.94l0.42,-0.29l1.29,0.67l2.3,1.29L923.52,486.69zM916.97,483.91l-0.56,0.16l-1.23,-0.64l-1.15,-1.15l0.14,-0.47l1.67,1.18L916.97,483.91z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SD\",\"title\":_vm.countries.getName('SD', _vm.codeLang),\"d\":\"M570.48,436.9L570.09,436.85L570.14,435.44L569.8,434.47L568.36,433.35L568.02,431.3L568.36,429.2L567.06,429.01L566.87,429.64L565.18,429.79L565.86,430.62L566.1,432.33L564.56,433.89L563.16,435.93L561.72,436.22L559.36,434.57L558.3,435.15L558.01,435.98L556.57,436.51L556.47,437.09L553.68,437.09L553.29,436.51L551.27,436.41L550.26,436.9L549.49,436.65L548.05,435L547.57,434.23L545.54,434.62L544.77,435.93L544.05,438.45L543.09,438.98L542.23,439.29L542,439.15L541.03,438.34L540.85,437.47L541.3,436.29L541.3,435.14L539.68,433.37L539.36,432.15L539.39,431.46L538.36,430.63L538.33,428.97L537.75,427.87L536.76,428.04L537.04,426.99L537.77,425.79L537.45,424.61L538.37,423.73L537.79,423.06L538.53,421.28L539.81,419.15L542.23,419.35L542.09,407.74L542.13,406.5L545.35,406.49L545.35,400.53L556.62,400.53L567.5,400.53L578.62,400.53L579.52,403.47L578.91,404.01L579.32,407.07L580.35,410.59L581.41,411.32L582.95,412.4L581.53,414.07L579.46,414.55L578.58,415.45L578.31,417.38L577.1,421.63L577.4,422.78L576.95,425.25L575.81,428.06L574.12,429.48L572.92,431.65L572.63,432.81L571.31,433.61L570.48,436.57z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SE\",\"title\":_vm.countries.getName('SE', _vm.codeLang),\"d\":\"M537.45,217.49L534.73,222.18L535.17,226.2L530.71,231.33L525.3,236.67L523.25,245.08L525.25,249.15L527.93,252.29L525.36,258.52L522.44,259.78L521.37,268.62L519.78,273.38L516.38,272.89L514.79,276.84L511.54,277.07L510.65,272.36L508.3,266.55L506.17,259.05L507.41,255.9L509.74,252.09L510.67,245.36L508.88,242.38L508.7,234.34L510.53,228.43L513.31,228.54L514.28,225.99L513.26,223.76L517.61,214.26L520.42,206.39L522.27,201.15L524.96,201.17L525.71,196.96L530.99,198.18L531.4,193.1L533.14,192.77L536.88,196.58L541.25,201.73L541.33,212.85L542.27,215.55z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SI\",\"title\":_vm.countries.getName('SI', _vm.codeLang),\"d\":\"M513.96,316.51L516.28,316.82L517.7,315.9L520.15,315.8L520.68,315.11L521.15,315.16L521.7,316.53L519.47,317.61L519.19,319.23L518.22,319.64L518.23,320.76L517.13,320.68L516.18,320.03L515.66,320.71L513.71,320.57L514.33,320.21L513.66,318.5z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SJ\",\"title\":_vm.countries.getName('SJ', _vm.codeLang),\"d\":\"M544.58,104.49l-6.26,5.36l-4.95,-3.02l1.94,-3.42l-1.69,-4.34l5.81,-2.78l1.11,5.18L544.58,104.49zM526.43,77.81l9.23,11.29l-7.06,5.66l-1.56,10.09l-2.46,2.49l-1.33,10.51l-3.38,0.48l-6.03,-7.64l2.54,-4.62l-4.2,-3.86l-5.46,-11.82l-2.18,-11.79l7.64,-5.69l1.54,5.56l3.99,-0.22l1.06,-5.43l4.12,-0.56L526.43,77.81zM546.6,66.35l5.5,5.8l-4.16,8.52l-8.13,1.81l-8.27,-2.56l-0.5,-4.32l-4.02,-0.28l-3.07,-7.48l8.66,-4.72l4.07,4.08l2.84,-5.09L546.6,66.35z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SK\",\"title\":_vm.countries.getName('SK', _vm.codeLang),\"d\":\"M528.11,304.02L528.27,304.28L529.43,303.7L530.84,305.22L532.5,304.3L533.82,304.74L535.84,304.14L538.5,305.78L537.73,306.89L537.18,308.6L536.58,309.03L533.58,307.75L532.66,308L532,309L530.68,309.52L530.38,309.25L529.02,309.9L527.9,310.03L527.68,310.87L525.32,311.38L524.29,310.92L522.86,309.85L522.58,308.4L522.81,307.86L523.2,306.93L524.45,307L525.4,306.56L525.48,306.17L526.02,305.96L526.2,304.99L526.84,304.8L527.28,304.03z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SL\",\"title\":_vm.countries.getName('SL', _vm.codeLang),\"d\":\"M443.18,444.44L442.42,444.23L440.41,443.1L438.95,441.6L438.46,440.57L438.11,438.49L439.61,437.25L439.93,436.46L440.41,435.85L441.19,435.79L441.84,435.26L444.08,435.26L444.86,436.27L445.47,437.46L445.38,438.28L445.83,439.02L445.8,440.05L446.57,439.89L445.26,441.2L444,442.73L443.85,443.54z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SN\",\"title\":_vm.countries.getName('SN', _vm.codeLang),\"d\":\"M428.39,425.16L427.23,422.92L425.83,421.9L427.07,421.35L428.43,419.32L429.09,417.83L430.05,416.9L431.45,417.15L432.81,416.52L434.38,416.49L435.72,417.34L437.58,418.11L439.28,420.24L441.13,422.22L441.26,424.01L441.81,425.65L442.86,426.46L443.1,427.56L442.97,428.45L442.56,428.61L441.04,428.39L440.83,428.7L440.21,428.77L438.19,428.07L436.84,428.04L431.66,427.92L430.91,428.24L429.98,428.15L428.49,428.62L428.03,426.43L430.58,426.49L431.26,426.09L431.76,426.06L432.8,425.4L434,426.01L435.22,426.06L436.43,425.41L435.87,424.59L434.94,425.07L434.07,425.06L432.97,424.35L432.08,424.4L431.44,425.07z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SO\",\"title\":_vm.countries.getName('SO', _vm.codeLang),\"d\":\"M618.63,430.43L618.56,429.64L617.5,429.65L616.17,430.63L614.68,430.91L613.39,431.33L612.5,431.39L610.9,431.49L609.9,432.01L608.51,432.2L606.04,433.08L602.99,433.41L600.34,434.14L598.95,434.13L597.69,432.94L597.14,431.77L596.23,431.24L595.19,432.76L594.58,433.77L595.62,435.33L596.65,436.69L597.72,437.7L606.89,441.04L609.25,441.02L601.32,449.44L597.67,449.56L595.17,451.53L593.38,451.58L592.61,452.46L590.16,455.63L590.19,465.78L591.85,468.07L592.48,467.41L593.13,465.95L596.2,462.57L598.81,460.45L603.01,457.69L605.81,455.43L609.11,451.62L611.5,448.49L613.91,444.39L615.64,440.8L616.99,437.65L617.78,434.6L618.38,433.58L618.37,432.08z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SR\",\"title\":_vm.countries.getName('SR', _vm.codeLang),\"d\":\"M315.02,446.72L318.38,447.28L318.68,446.77L320.95,446.57L323.96,447.33L322.5,449.73L322.72,451.64L323.83,453.3L323.34,454.5L323.09,455.77L322.37,456.94L320.77,456.35L319.44,456.64L318.31,456.39L318.03,457.2L318.5,457.75L318.25,458.32L316.72,458.09L315.01,455.67L314.64,454.1L313.75,454.09L312.5,452.07L313.02,450.62L312.87,449.97L314.57,449.24z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SS\",\"title\":_vm.countries.getName('SS', _vm.codeLang),\"d\":\"M570.48,436.9L570.51,439.1L570.09,439.96L568.61,440.03L567.65,441.64L569.37,441.84L570.79,443.21L571.29,444.33L572.57,444.98L574.22,448.03L572.32,449.87L570.6,451.54L568.87,452.82L566.9,452.82L564.64,453.47L562.86,452.84L561.71,453.61L559.24,451.75L558.57,450.56L557.01,451.15L555.71,450.96L554.96,451.43L553.7,451.1L552.01,448.79L551.56,447.9L549.46,446.79L548.75,445.11L547.58,443.9L545.7,442.44L545.67,441.52L544.14,440.39L542.23,439.29L543.09,438.98L544.05,438.45L544.77,435.93L545.54,434.62L547.57,434.23L548.05,435L549.49,436.65L550.26,436.9L551.27,436.41L553.29,436.51L553.68,437.09L556.47,437.09L556.57,436.51L558.01,435.98L558.3,435.15L559.36,434.57L561.72,436.22L563.16,435.93L564.56,433.89L566.1,432.33L565.86,430.62L565.18,429.79L566.87,429.64L567.06,429.01L568.36,429.2L568.02,431.3L568.36,433.35L569.8,434.47L570.14,435.44L570.09,436.85z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SV\",\"title\":_vm.countries.getName('SV', _vm.codeLang),\"d\":\"M229.09,425.76L228.78,426.43L227.16,426.39L226.15,426.12L224.99,425.55L223.43,425.37L222.64,424.75L222.73,424.33L223.69,423.61L224.21,423.29L224.06,422.95L224.72,422.78L225.55,423.02L226.15,423.59L227,424.05L227.1,424.44L228.33,424.1L228.91,424.3L229.29,424.61z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SY\",\"title\":_vm.countries.getName('SY', _vm.codeLang),\"d\":\"M584.02,364.6L578.53,368.14L575.41,366.82L575.35,366.8L575.73,366.3L575.69,364.93L576.38,363.1L577.91,361.83L577.45,360.51L576.19,360.33L575.93,357.72L576.61,356.31L577.36,355.56L578.11,354.8L578.27,352.86L579.18,353.54L582.27,352.57L583.76,353.22L586.07,353.21L589.29,351.9L590.81,351.96L594,351.42L592.56,353.6L591.02,354.46L591.29,356.98L590.23,361.1z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"SZ\",\"title\":_vm.countries.getName('SZ', _vm.codeLang),\"d\":\"M565.18,540.74L564.61,542.13L562.97,542.46L561.29,540.77L561.27,539.69L562.03,538.52L562.3,537.62L563.11,537.4L564.52,537.97L564.94,539.36z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TD\",\"title\":_vm.countries.getName('TD', _vm.codeLang),\"d\":\"M515.9,427.26L516.18,425.92L514.38,425.85L514.39,424L513.22,422.94L514.43,419.14L518.01,416.4L518.15,412.61L519.23,406.63L519.84,405.35L518.68,404.33L518.63,403.38L517.58,402.6L516.89,397.93L519.72,396.27L530.91,402.04L542.09,407.74L542.23,419.35L539.81,419.15L538.53,421.28L537.79,423.06L538.37,423.73L537.45,424.61L537.77,425.79L537.04,426.99L536.76,428.04L537.75,427.87L538.33,428.97L538.36,430.63L539.39,431.46L539.36,432.15L537.59,432.64L536.16,433.78L534.14,436.87L531.5,438.18L528.79,438L528,438.26L528.28,439.25L526.81,440.24L525.62,441.34L522.09,442.41L521.39,441.78L520.93,441.72L520.41,442.44L518.09,442.66L518.53,441.89L517.65,439.96L517.25,438.79L516.03,438.31L514.38,436.66L514.99,435.33L516.27,435.61L517.06,435.41L518.62,435.44L517.1,432.87L517.2,430.98L517.01,429.09z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TF\",\"title\":_vm.countries.getName('TF', _vm.codeLang),\"d\":\"M668.54,619.03L670.34,620.36L672.99,620.9L673.09,621.71L672.31,623.67L668,623.95L667.93,621.66L668.35,619.9z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TG\",\"title\":_vm.countries.getName('TG', _vm.codeLang),\"d\":\"M480.48,446.25L478.23,446.84L477.6,445.86L476.85,444.08L476.63,442.68L477.25,440.15L476.55,439.12L476.28,436.9L476.28,434.85L475.11,433.39L475.32,432.5L477.78,432.56L477.42,434.06L478.27,434.89L479.25,435.88L479.35,437.27L479.92,437.85L479.79,444.31z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TH\",\"title\":_vm.countries.getName('TH', _vm.codeLang),\"d\":\"M762.89,429.18L760.37,427.87L757.97,427.93L758.38,425.68L755.91,425.7L755.69,428.84L754.18,432.99L753.27,435.49L753.46,437.54L755.28,437.63L756.42,440.2L756.93,442.63L758.49,444.24L760.19,444.57L761.64,446.02L760.73,447.17L758.87,447.51L758.65,446.07L756.37,444.84L755.88,445.34L754.77,444.27L754.29,442.88L752.8,441.29L751.44,439.96L750.98,441.61L750.45,440.05L750.76,438.29L751.58,435.58L752.94,432.67L754.48,430.02L753.38,427.42L753.43,426.09L753.11,424.49L751.24,422.21L750.57,420.76L751.54,420.23L752.56,417.71L751.42,415.79L749.64,413.66L748.28,411.09L749.46,410.56L750.74,407.37L752.72,407.23L754.36,405.95L755.96,405.26L757.18,406.18L757.34,407.96L759.23,408.09L758.54,411.2L758.61,413.82L761.56,412.08L762.4,412.59L764.05,412.51L764.61,411.49L766.73,411.69L768.86,414.07L769.04,416.94L771.31,419.47L771.18,421.91L770.27,423.21L767.64,422.8L764.02,423.35L762.22,425.73z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TJ\",\"title\":_vm.countries.getName('TJ', _vm.codeLang),\"d\":\"M674.37,340.62L673.34,341.75L670.29,341.14L670.02,343.24L673.06,342.96L676.53,344.13L681.83,343.58L682.54,346.91L683.46,346.55L685.16,347.36L685.07,348.74L685.49,350.75L682.59,350.75L680.66,350.49L678.92,352.06L677.67,352.4L676.69,353.14L675.58,351.99L675.85,349.04L675,348.87L675.3,347.78L673.79,346.98L672.58,348.21L672.28,349.64L671.85,350.16L670.17,350.09L669.27,351.69L668.32,351.02L666.29,352.14L665.44,351.72L667.01,348.15L666.41,345.49L664.35,344.63L665.08,343.04L667.42,343.21L668.75,341.2L669.64,338.85L673.39,337.99L672.81,339.7L673.21,340.72z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TL\",\"title\":_vm.countries.getName('TL', _vm.codeLang),\"d\":\"M825.65,488.25L825.98,487.59L828.39,486.96L830.35,486.86L831.22,486.51L832.28,486.86L831.25,487.62L828.33,488.85L825.98,489.67L825.93,488.81z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TM\",\"title\":_vm.countries.getName('TM', _vm.codeLang),\"d\":\"M646.88,356.9L646.63,353.99L644.54,353.87L641.34,350.78L639.1,350.39L636,348.6L634,348.27L632.77,348.93L630.9,348.83L628.91,350.85L626.44,351.53L625.92,349.04L626.33,345.31L624.14,344.09L624.86,341.61L623,341.39L623.62,338.3L626.26,339.21L628.73,338.02L626.68,335.79L625.88,333.65L623.62,334.61L623.34,337.34L622.46,334.93L623.7,333.68L626.88,332.89L628.78,333.95L630.74,336.88L632.18,336.7L635.34,336.65L634.88,334.77L637.28,333.47L639.64,331.27L643.42,333.27L643.72,336.26L644.79,337.03L647.82,336.86L648.76,337.53L650.14,341.32L653.35,343.83L655.18,345.52L658.11,347.27L661.84,348.79L661.76,350.95L660.92,350.84L659.59,349.9L659.15,351.15L656.79,351.83L656.23,354.62L654.65,355.67L652.44,356.19L651.85,357.74L649.74,358.2z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TN\",\"title\":_vm.countries.getName('TN', _vm.codeLang),\"d\":\"M501.84,374.69L500.64,368.83L498.92,367.5L498.89,366.69L496.6,364.71L496.35,362.18L498.08,360.3L498.74,357.48L498.29,354.2L498.86,352.41L501.92,351L503.88,351.42L503.8,353.19L506.18,351.9L506.38,352.57L504.97,354.28L504.96,355.88L505.93,356.73L505.56,359.69L503.71,361.4L504.24,363.23L505.69,363.29L506.4,364.88L507.47,365.4L507.31,367.95L505.94,368.9L505.08,369.95L503.15,371.21L503.45,372.56L503.21,373.94z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TR\",\"title\":_vm.countries.getName('TR', _vm.codeLang),\"d\":\"M578.75,336.6l4.02,1.43l3.27,-0.57l2.41,0.33l3.31,-1.94l2.99,-0.18l2.7,1.83l0.48,1.3l-0.27,1.79l2.08,0.91l1.1,1.06l-1.92,1.03l0.88,4.11l-0.55,1.1l1.53,2.82l-1.34,0.59l-0.98,-0.89l-3.26,-0.45l-1.2,0.55l-3.19,0.54l-1.51,-0.06l-3.23,1.31l-2.31,0.01l-1.49,-0.66l-3.09,0.97l-0.92,-0.68l-0.15,1.94l-0.75,0.76l-0.75,0.76l-1.03,-1.57l1.06,-1.3l-1.71,0.3l-2.35,-0.8l-1.93,2l-4.26,0.39l-2.27,-1.86l-3.02,-0.12l-0.65,1.44l-1.94,0.41l-2.71,-1.85l-3.06,0.06l-1.66,-3.48l-2.05,-1.96l1.36,-2.78l-1.78,-1.72l3.11,-3.48l4.32,-0.15l1.18,-2.81l5.34,0.49l3.37,-2.42l3.27,-1.06l4.64,-0.08L578.75,336.6zM551.5,338.99l-2.34,1.98l-0.88,-1.71l0.04,-0.76l0.67,-0.41l0.87,-2.33l-1.37,-0.99l2.86,-1.18l2.41,0.5l0.33,1.44l2.45,1.2l-0.51,0.91l-3.33,0.2L551.5,338.99z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TT\",\"title\":_vm.countries.getName('TT', _vm.codeLang),\"d\":\"M302.31,433.24L303.92,432.87L304.51,432.97L304.4,435.08L302.06,435.39L301.55,435.14L302.37,434.36z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TW\",\"title\":_vm.countries.getName('TW', _vm.codeLang),\"d\":\"M816.7,393.27L815.01,398.14L813.81,400.62L812.33,398.07L812.01,395.82L813.66,392.82L815.91,390.5L817.19,391.41z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"TZ\",\"title\":_vm.countries.getName('TZ', _vm.codeLang),\"d\":\"M570.31,466.03L570.79,466.34L580.95,472.01L581.15,473.63L585.17,476.42L583.88,479.87L584.04,481.46L585.84,482.48L585.92,483.21L585.15,484.91L585.31,485.76L585.13,487.11L586.11,488.87L587.27,491.66L588.29,492.28L586.06,493.92L583,495.02L581.32,494.98L580.32,495.83L578.37,495.9L577.63,496.26L574.26,495.46L572.15,495.69L571.37,491.83L570.42,490.51L569.85,489.73L567.11,489.21L565.51,488.36L563.73,487.89L562.61,487.41L561.44,486.7L559.93,483.15L558.3,481.58L557.74,479.96L558.02,478.5L557.52,475.93L558.68,475.8L559.69,474.79L560.79,473.33L561.48,472.75L561.45,471.84L560.85,471.21L560.69,470.11L561.49,469.76L561.66,468.12L560.54,466.55L561.53,466.21L564.6,466.25z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"UA\",\"title\":_vm.countries.getName('UA', _vm.codeLang),\"d\":\"M564.38,292.49L565.42,292.68L566.13,291.64L566.98,291.87L569.89,291.43L571.68,294L570.98,294.92L571.21,296.31L573.45,296.52L574.45,298.45L574.39,299.32L577.95,300.86L580.1,300.17L581.83,302.21L583.47,302.17L587.6,303.57L587.63,304.84L586.5,307.07L587.11,309.4L586.67,310.79L583.96,311.1L582.52,312.26L582.43,314.09L580.19,314.42L578.32,315.74L575.7,315.95L573.28,317.47L571.96,318.5L573.45,319.97L574.82,320.93L577.68,320.69L577.13,322.11L574.06,322.79L570.25,325.06L568.7,324.27L569.31,322.42L566.25,321.26L566.75,320.49L569.91,318.86L569.51,318.05L569.06,318.46L568.62,318.24L564.26,317.22L564.07,315.71L561.47,316.21L560.43,318.44L558.26,321.39L556.98,320.71L555.67,321.35L554.42,320.62L555.12,320.18L555.61,318.81L556.38,317.52L556.18,316.8L556.77,316.48L557.04,317.04L558.7,317.15L559.44,316.86L558.92,316.44L559.11,315.84L558.13,314.8L557.73,313.08L556.71,312.41L556.91,311L555.64,309.88L554.49,309.72L552.42,308.41L550.56,308.83L549.89,309.45L548.71,309.44L548,310.42L545.93,310.82L544.98,311.46L543.67,310.45L541.88,310.43L540.14,309.97L538.93,310.86L538.73,309.74L537.18,308.6L537.73,306.89L538.5,305.79L539.12,306.03L538.39,304.11L540.94,300.5L542.33,299.99L542.63,298.75L541.22,294.86L542.56,294.69L544.1,293.46L546.27,293.36L549.1,293.72L552.23,294.8L554.44,294.89L555.49,295.54L556.54,294.76L557.28,295.81L559.81,295.59L560.92,296.02L561.11,293.76L561.97,292.76z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"UG\",\"title\":_vm.countries.getName('UG', _vm.codeLang),\"d\":\"M564.6,466.25L561.53,466.21L560.54,466.55L558.87,467.41L558.19,467.12L558.21,465.02L558.86,463.96L559.02,461.72L559.61,460.43L560.68,458.97L561.76,458.23L562.66,457.24L561.54,456.87L561.71,453.61L562.86,452.84L564.64,453.47L566.9,452.82L568.87,452.82L570.6,451.54L571.93,453.48L572.26,454.88L573.49,458.08L572.47,460.11L571.09,461.95L570.29,463.08L570.31,466.03z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"US\",\"title\":_vm.countries.getName('US', _vm.codeLang),\"d\":\"M109.25,279.8L109.25,279.8l-1.54,-1.83l-2.47,-1.57l-0.79,-4.36l-3.61,-4.13l-1.51,-4.94l-2.69,-0.34l-4.46,-0.13l-3.29,-1.54l-5.8,-5.64l-2.68,-1.05l-4.9,-1.99l-3.88,0.48l-5.51,-2.59l-3.33,-2.43l-3.11,1.21l0.58,3.93l-1.55,0.36l-3.24,1.16l-2.47,1.86l-3.11,1.16l-0.4,-3.24l1.26,-5.53l2.98,-1.77l-0.77,-1.46l-3.57,3.22l-1.91,3.77l-4.04,3.95l2.05,2.65l-2.65,3.85l-3.01,2.21l-2.81,1.59l-0.69,2.29l-4.38,2.63l-0.89,2.36l-3.28,2.13l-1.92,-0.38l-2.62,1.38l-2.85,1.67l-2.33,1.63l-4.81,1.38l-0.44,-0.81l3.07,-2.27l2.74,-1.51l2.99,-2.71l3.48,-0.56l1.38,-2.06l3.89,-3.05l0.63,-1.03l2.07,-1.83l0.48,-4l1.43,-3.17l-3.23,1.64l-0.9,-0.93l-1.52,1.95l-1.83,-2.73l-0.76,1.94l-1.05,-2.7l-2.8,2.17l-1.72,0l-0.24,-3.23l0.51,-2.02l-1.81,-1.98l-3.65,1.07l-2.37,-2.63l-1.92,-1.36l-0.01,-3.25l-2.16,-2.48l1.08,-3.41l2.29,-3.37l1,-3.15l2.27,-0.45l1.92,0.99l2.26,-3.01l2.04,0.54l2.14,-1.96l-0.52,-2.92l-1.57,-1.16l2.08,-2.52l-1.72,0.07l-2.98,1.43l-0.85,1.43l-2.21,-1.43l-3.97,0.73l-4.11,-1.56l-1.18,-2.65l-3.55,-3.91l3.94,-2.87l6.25,-3.41h2.31l-0.38,3.48l5.92,-0.27l-2.28,-4.34l-3.45,-2.72l-1.99,-3.64l-2.69,-3.17l-3.85,-2.38l1.57,-4.03l4.97,-0.25l3.54,-3.58l0.67,-3.92l2.86,-3.91l2.73,-0.95l5.31,-3.76l2.58,0.57l4.31,-4.61l4.24,1.83l2.03,3.87l1.25,-1.65l4.74,0.51l-0.17,1.95l4.29,1.43l2.86,-0.84l5.91,2.64l5.39,0.78l2.16,1.07l3.73,-1.34l4.25,2.46l3.05,1.13l-0.02,27.65l-0.01,35.43l2.76,0.17l2.73,1.56l1.96,2.44l2.49,3.6l2.73,-3.05l2.81,-1.79l1.49,2.85l1.89,2.23l2.57,2.42l1.75,3.79l2.87,5.88l4.77,3.2l0.08,3.12L109.25,279.8zM285.18,314.23l-1.25,-1.19l-1.88,0.7l-0.93,-1.08l-2.14,3.1l-0.86,3.15l-1,1.82l-1.19,0.62l-0.9,0.2l-0.28,0.98l-5.17,0l-4.26,0.03l-1.27,0.73l-2.87,2.73l0.29,0.54l0.17,1.51l-2.1,1.27l-2.3,-0.32l-2.2,-0.14l-1.33,0.44l0.25,1.15l0,0l0.05,0.37l-2.42,2.27l-2.11,1.09l-1.44,0.51l-1.66,1.03l-2.03,0.5l-1.4,-0.19l-1.73,-0.77l0.96,-1.45l0.62,-1.32l1.32,-2.09l-0.14,-1.57l-0.5,-2.24l-1.04,-0.39l-1.74,1.7l-0.56,-0.03l-0.14,-0.97l1.54,-1.56l0.26,-1.79l-0.23,-1.79l-2.08,-1.55l-2.38,-0.8l-0.39,1.52l-0.62,0.4l-0.5,1.95l-0.26,-1.33l-1.12,0.95l-0.7,1.32l-0.73,1.92l-0.14,1.64l0.93,2.38l-0.08,2.51l-1.14,1.84l-0.57,0.52l-0.76,0.41l-0.95,0.02l-0.26,-0.25l-0.76,-1.98l-0.02,-0.98l0.08,-0.94l-0.35,-1.87l0.53,-2.18l0.63,-2.71l1.46,-3.03l-0.42,0.01l-2.06,2.54l-0.38,-0.46l1.1,-1.42l1.67,-2.57l1.91,-0.36l2.19,-0.8l2.21,0.42l0.09,0.02l2.47,-0.36l-1.4,-1.61l-0.75,-0.13l-0.86,-0.16l-0.59,-1.14l-2.75,0.36l-2.49,0.9l-1.97,-1.55l-1.59,-0.52l0.9,-2.17l-2.48,1.37l-2.25,1.33l-2.16,1.04l-1.72,-1.4l-2.81,0.85l0.01,-0.6l1.9,-1.73l1.99,-1.65l2.86,-1.37l-3.45,-1.09l-2.27,0.55l-2.72,-1.3l-2.86,-0.67l-1.96,-0.26l-0.87,-0.72l-0.5,-2.35l-0.95,0.02l-0.01,1.64l-5.8,0l-9.59,0l-9.53,0l-8.42,0h-8.41h-8.27h-8.55h-2.76h-8.32h-7.96l0.95,3.47l0.45,3.41l-0.69,1.09l-1.49,-3.91l-4.05,-1.42l-0.34,0.82l0.82,1.94l0.89,3.53l0.51,5.42l-0.34,3.59l-0.34,3.54l-1.1,3.61l0.9,2.9l0.1,3.2l-0.61,3.05l1.49,1.99l0.39,2.95l2.17,2.99l1.24,1.17l-0.1,0.82l2.34,4.85l2.72,3.45l0.34,1.87l0.71,0.55l2.6,0.33l1,0.91l1.57,0.17l0.31,0.96l1.31,0.4l1.82,1.92l0.47,1.7l3.19,-0.25l3.56,-0.36l-0.26,0.65l4.23,1.6l6.4,2.31l5.58,-0.02l2.22,0l0.01,-1.35l4.86,0l1.02,1.16l1.43,1.03l1.67,1.43l0.93,1.69l0.7,1.77l1.45,0.97l2.33,0.96l1.77,-2.53l2.29,-0.06l1.98,1.28l1.41,2.18l0.97,1.86l1.65,1.8l0.62,2.19l0.79,1.47l2.19,0.96l1.99,0.68l1.09,-0.09l-0.53,-1.06l-0.14,-1.5l0.03,-2.16l0.65,-1.42l1.53,-1.51l2.79,-1.37l2.55,-2.37l2.36,-0.75l1.74,-0.23l2.04,0.74l2.45,-0.4l2.09,1.69l2.03,0.1l1.05,-0.61l1.04,0.47l0.53,-0.42l-0.6,-0.63l0.05,-1.3l-0.5,-0.86l1.16,-0.5l2.14,-0.22l2.49,0.36l3.17,-0.41l1.76,0.8l1.36,1.5l0.5,0.16l2.83,-1.46l1.09,0.49l2.19,2.68l0.79,1.75l-0.58,2.1l0.42,1.23l1.3,2.4l1.49,2.68l1.07,0.71l0.44,1.35l1.38,0.37l0.84,-0.39l0.7,-1.89l0.12,-1.21l0.09,-2.1l-1.33,-3.65l-0.02,-1.37l-1.25,-2.25l-0.94,-2.75l-0.5,-2.25l0.43,-2.31l1.32,-1.94l1.58,-1.57l3.08,-2.16l0.4,-1.12l1.42,-1.23l1.4,-0.22l1.84,-1.98l2.9,-1.01l1.78,-2.53l-0.39,-3.46l-0.29,-1.21l-0.8,-0.24l-0.12,-3.35l-1.93,-1.14l1.85,0.56l-0.6,-2.26l0.54,-1.55l0.33,2.97l1.43,1.36l-0.87,2.4l0.26,0.14l1.58,-2.81l0.9,-1.38l-0.04,-1.35l-0.7,-0.64l-0.58,-1.94l0.92,0.9l0.62,0.19l0.21,0.92l2.04,-2.78l0.61,-2.62l-0.83,-0.17l0.85,-1.02l-0.08,0.45l1.79,-0.01l3.93,-1.11l-0.83,-0.7l-4.12,0.7l2.34,-1.07l1.63,-0.18l1.22,-0.19l2.07,-0.65l1.35,0.07l1.89,-0.61l0.22,-1.07l-0.84,-0.84l0.29,1.37l-1.16,-0.09l-0.93,-1.99l0.03,-2.01l0.48,-0.86l1.48,-2.28l2.96,-1.15l2.88,-1.34l2.99,-1.9l-0.48,-1.29l-1.83,-2.25L285.18,314.23zM45.62,263.79l-1.5,0.8l-2.55,1.86l0.43,2.42l1.43,1.32l2.8,-1.95l2.43,-2.47l-1.19,-1.63L45.62,263.79zM0,235.22l2.04,-1.26l0.23,-0.68L0,232.61V235.22zM8.5,250.59l-2.77,0.97l1.7,1.52l1.84,1.04l1.72,-0.87l-0.27,-2.15L8.5,250.59zM105.85,283.09l-2.69,0.38l-1.32,-0.62l-0.17,1.52l0.52,2.07l1.42,1.46l1.04,2.13l1.69,2.1l1.12,0.01l-2.44,-3.7L105.85,283.09zM37.13,403.77l-1,-0.28l-0.27,0.26l0.02,0.19l0.32,0.24l0.48,0.63l0.94,-0.21l0.23,-0.36L37.13,403.77zM34.14,403.23l1.5,0.09l0.09,-0.32l-1.38,-0.13L34.14,403.23zM40.03,406.52l-0.5,-0.26l-1.07,-0.5l-0.21,-0.06l-0.16,0.28l0.19,0.58l-0.49,0.48l-0.14,0.33l0.46,1.08l-0.08,0.83l0.7,0.42l0.41,-0.49l0.9,-0.46l1.1,-0.63l0.07,-0.16l-0.71,-1.04L40.03,406.52zM32.17,401.38l-0.75,0.41l0.11,0.12l0.36,0.68l0.98,0.11l0.2,0.04l0.15,-0.17l-0.81,-0.99L32.17,401.38zM27.77,399.82l-0.43,0.3l-0.15,0.22l0.94,0.55l0.33,-0.3l-0.06,-0.7L27.77,399.82z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"UY\",\"title\":_vm.countries.getName('UY', _vm.codeLang),\"d\":\"M313.68,551.79L315.5,551.45L318.31,553.95L319.35,553.86L322.24,555.94L324.44,557.76L326.06,560.01L324.82,561.58L325.6,563.48L324.39,565.6L321.22,567.48L319.15,566.8L317.63,567.17L315.04,565.71L313.14,565.82L311.43,563.95L311.65,561.79L312.26,561.05L312.23,557.75L312.98,554.38z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"UZ\",\"title\":_vm.countries.getName('UZ', _vm.codeLang),\"d\":\"M661.76,350.95L661.84,348.79L658.11,347.27L655.18,345.52L653.35,343.83L650.14,341.32L648.76,337.53L647.82,336.86L644.79,337.03L643.72,336.26L643.42,333.27L639.64,331.27L637.28,333.47L634.88,334.77L635.34,336.65L632.18,336.7L632.07,322.57L639.29,320.22L639.81,320.57L644.16,323.41L646.45,324.89L649.13,328.39L652.42,327.83L657.23,327.53L660.58,330.33L660.37,334.13L661.74,334.16L662.31,337.22L665.88,337.34L666.64,339.09L667.69,339.07L668.92,336.42L672.61,333.81L674.22,333.11L675.05,333.48L672.7,335.91L674.77,337.31L676.77,336.38L680.09,338.34L676.5,340.98L674.37,340.62L673.21,340.72L672.81,339.7L673.39,337.99L669.64,338.85L668.75,341.2L667.42,343.21L665.08,343.04L664.35,344.63L666.41,345.49L667.01,348.15L665.44,351.72L663.32,350.98z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"VE\",\"title\":_vm.countries.getName('VE', _vm.codeLang),\"d\":\"M275.25,430.35L275.17,431.02L273.52,431.35L274.44,432.64L274.4,434.13L273.17,435.77L274.23,438.01L275.44,437.83L276.07,435.79L275.2,434.79L275.06,432.65L278.55,431.49L278.16,430.15L279.14,429.25L280.15,431.25L282.12,431.3L283.94,432.88L284.05,433.82L286.56,433.84L289.56,433.55L291.17,434.82L293.31,435.17L294.88,434.29L294.91,433.57L298.39,433.4L301.75,433.36L299.37,434.2L300.32,435.54L302.57,435.75L304.69,437.14L305.14,439.4L306.6,439.33L307.7,440L305.48,441.65L305.23,442.68L306.19,443.72L305.5,444.24L303.77,444.69L303.83,445.99L303.07,446.76L304.96,448.88L305.34,449.67L304.31,450.74L301.17,451.78L299.16,452.22L298.35,452.88L296.12,452.18L294.04,451.82L293.52,452.08L294.77,452.8L294.66,454.67L295.05,456.43L297.42,456.67L297.58,457.25L295.57,458.05L295.25,459.23L294.09,459.68L292.01,460.33L291.47,461.19L289.29,461.37L287.74,459.89L286.89,457.12L286.14,456.14L285.12,455.53L286.54,454.14L286.45,453.51L285.65,452.68L285.09,450.83L285.31,448.82L285.93,447.88L286.44,446.38L285.45,445.89L283.85,446.21L281.83,446.06L280.7,446.36L278.72,443.95L277.09,443.59L273.49,443.86L272.82,442.88L272.13,442.65L272.03,442.06L272.36,441.02L272.14,439.89L271.52,439.27L271.16,437.97L269.72,437.79L270.49,436.13L270.84,434.12L271.65,433.06L272.74,432.25L273.45,430.83z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"VN\",\"title\":_vm.countries.getName('VN', _vm.codeLang),\"d\":\"M778.21,401.87L774.47,404.43L772.13,407.24L771.51,409.29L773.66,412.38L776.28,416.2L778.82,417.99L780.53,420.32L781.81,425.64L781.43,430.66L779.1,432.53L775.88,434.36L773.6,436.72L770.1,439.34L769.08,437.53L769.87,435.62L767.79,434.01L770.22,432.87L773.16,432.67L771.93,430.94L776.64,428.75L776.99,425.33L776.34,423.41L776.85,420.53L776.14,418.49L774.02,416.47L772.25,413.9L769.92,410.44L766.56,408.68L767.37,407.61L769.16,406.84L768.07,404.25L764.62,404.22L763.36,401.5L761.72,399.13L763.23,398.39L765.46,398.41L768.19,398.06L770.58,396.44L771.93,397.58L774.5,398.13L774.05,399.87L775.39,401.09z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"VU\",\"title\":_vm.countries.getName('VU', _vm.codeLang),\"d\":\"M945.87,509.9l-0.92,0.38l-0.94,-1.27l0.1,-0.78L945.87,509.9zM943.8,505.46l0.46,2.33l-0.75,-0.36l-0.58,0.16l-0.4,-0.8l-0.06,-2.21L943.8,505.46z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"YE\",\"title\":_vm.countries.getName('YE', _vm.codeLang),\"d\":\"M624.16,416.33L622.13,417.12L621.59,418.4L621.52,419.39L618.73,420.61L614.25,421.96L611.74,423.99L610.51,424.14L609.67,423.97L608.03,425.17L606.24,425.72L603.89,425.87L603.18,426.03L602.57,426.78L601.83,426.99L601.4,427.72L600.01,427.66L599.11,428.04L597.17,427.9L596.44,426.23L596.52,424.66L596.07,423.81L595.52,421.69L594.71,420.5L595.27,420.36L594.98,419.04L595.32,418.48L595.2,417.22L596.43,416.29L596.14,415.06L596.89,413.63L598.04,414.39L598.8,414.12L602.03,414.05L602.55,414.35L605.26,414.64L606.33,414.49L607.03,415.46L608.34,414.98L610.35,411.91L612.97,410.59L621.05,409.46L623.25,414.3z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"ZA\",\"title\":_vm.countries.getName('ZA', _vm.codeLang),\"d\":\"M563.63,548.71l-0.55,0.46l-1.19,1.63l-0.78,1.66l-1.59,2.33l-3.17,3.38l-1.98,1.98l-2.12,1.51l-2.93,1.3l-1.43,0.17l-0.36,0.93l-1.7,-0.5l-1.39,0.64l-3.04,-0.65l-1.7,0.41l-1.16,-0.18l-2.89,1.33l-2.39,0.54l-1.73,1.28l-1.28,0.08l-1.19,-1.21l-0.95,-0.06l-1.21,-1.51l-0.13,0.47l-0.37,-0.91l0.02,-1.96l-0.91,-2.23l0.9,-0.6l-0.07,-2.53l-1.84,-3.05l-1.41,-2.74l0,-0.01l-2.01,-4.15l1.34,-1.57l1.11,0.87l0.47,1.36l1.26,0.23l1.76,0.6l1.51,-0.23l2.5,-1.63l0,-11.52l0.76,0.46l1.66,2.93l-0.26,1.89l0.63,1.1l2.01,-0.32l1.4,-1.39l1.33,-0.93l0.69,-1.48l1.37,-0.72l1.18,0.38l1.34,0.87l2.28,0.15l1.79,-0.72l0.28,-0.96l0.49,-1.47l1.53,-0.25l0.84,-1.15l0.93,-2.03l2.52,-2.26l3.97,-2.22l1.14,0.03l1.36,0.51l0.94,-0.36l1.49,0.3l1.34,4.26l0.73,2.17l-0.5,3.43l0.24,1.11l-1.42,-0.57l-0.81,0.22l-0.26,0.9l-0.77,1.17l0.03,1.08l1.67,1.7l1.64,-0.34l0.57,-1.39l2.13,0.03l-0.7,2.28l-0.33,2.62l-0.73,1.43L563.63,548.71zM556.5,547.75l-1.22,-0.98l-1.31,0.65l-1.52,1.25l-1.5,2.03l2.1,2.48l1,-0.32l0.52,-1.03l1.56,-0.5l0.48,-1.05l0.86,-1.56L556.5,547.75z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"ZM\",\"title\":_vm.countries.getName('ZM', _vm.codeLang),\"d\":\"M567.11,489.21L568.43,490.47L569.14,492.87L568.66,493.64L568.1,495.94L568.64,498.3L567.76,499.29L566.91,501.95L568.38,502.69L559.87,505.07L560.14,507.12L558.01,507.52L556.42,508.67L556.08,509.68L555.07,509.9L552.63,512.3L551.08,514.19L550.13,514.26L549.22,513.92L546.09,513.6L545.59,513.38L545.56,513.14L544.46,512.48L542.64,512.31L540.34,512.98L538.51,511.16L536.62,508.78L536.75,499.62L542.59,499.66L542.35,498.67L542.77,497.6L542.28,496.27L542.6,494.89L542.3,494.01L543.27,494.08L543.43,494.96L544.74,494.89L546.52,495.15L547.46,496.44L549.7,496.84L551.42,495.94L552.05,497.43L554.2,497.83L555.23,499.05L556.38,500.62L558.53,500.65L558.29,497.57L557.52,498.08L555.56,496.98L554.8,496.47L555.15,493.62L555.65,490.27L555.02,489.02L555.82,487.22L556.57,486.89L560.34,486.41L561.44,486.7L562.61,487.41L563.73,487.89L565.51,488.36z\"}}),_c('path',{staticClass:\"land\",attrs:{\"id\":\"ZW\",\"title\":_vm.countries.getName('ZW', _vm.codeLang),\"d\":\"M562.71,527L561.22,526.7L560.27,527.06L558.92,526.55L557.78,526.52L555.99,525.16L553.82,524.7L553,522.8L552.99,521.75L551.79,521.43L548.62,518.18L547.73,516.47L547.17,515.95L546.09,513.6L549.22,513.92L550.13,514.26L551.08,514.19L552.63,512.3L555.07,509.9L556.08,509.68L556.42,508.67L558.01,507.52L560.14,507.12L560.32,508.2L562.66,508.14L563.96,508.75L564.56,509.47L565.9,509.68L567.35,510.62L567.36,514.31L566.81,516.35L566.69,518.55L567.14,519.43L566.83,521.17L566.4,521.44L565.66,523.59z\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <!-- (c) ammap.com | SVG map of World - Low -->\n    <svg\n        id=\"map-svg\"\n        class=\"h-full\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:amcharts=\"http://amcharts.com/ammap\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        version=\"1.1\"\n        width=\"100%\"\n        viewBox=\"0 0 1008 650\"\n    >\n        <defs>\n            <amcharts:ammap\n                projection=\"mercator\"\n                leftLongitude=\"-169.6\"\n                topLatitude=\"83.68\"\n                rightLongitude=\"190.25\"\n                bottomLatitude=\"-55.55\"\n            ></amcharts:ammap>\n\n            <!-- All areas are listed in the line below. You can use this list in your script. -->\n            <!--{id:\"AE\"},{id:\"AF\"},{id:\"AL\"},{id:\"AM\"},{id:\"AO\"},{id:\"AR\"},{id:\"AT\"},{id:\"AU\"},{id:\"AZ\"},{id:\"BA\"},{id:\"BD\"},{id:\"BE\"},{id:\"BF\"},{id:\"BG\"},{id:\"BI\"},{id:\"BJ\"},{id:\"BN\"},{id:\"BO\"},{id:\"BR\"},{id:\"BS\"},{id:\"BT\"},{id:\"BW\"},{id:\"BY\"},{id:\"BZ\"},{id:\"CA\"},{id:\"CD\"},{id:\"CF\"},{id:\"CG\"},{id:\"CH\"},{id:\"CI\"},{id:\"CL\"},{id:\"CM\"},{id:\"CN\"},{id:\"CO\"},{id:\"CR\"},{id:\"CU\"},{id:\"CY\"},{id:\"CZ\"},{id:\"DE\"},{id:\"DJ\"},{id:\"DK\"},{id:\"DO\"},{id:\"DZ\"},{id:\"EC\"},{id:\"EE\"},{id:\"EG\"},{id:\"EH\"},{id:\"ER\"},{id:\"ES\"},{id:\"ET\"},{id:\"FK\"},{id:\"FI\"},{id:\"FJ\"},{id:\"FR\"},{id:\"GA\"},{id:\"GB\"},{id:\"GE\"},{id:\"GF\"},{id:\"GH\"},{id:\"GL\"},{id:\"GM\"},{id:\"GN\"},{id:\"GQ\"},{id:\"GR\"},{id:\"GT\"},{id:\"GW\"},{id:\"GY\"},{id:\"HN\"},{id:\"HR\"},{id:\"HT\"},{id:\"HU\"},{id:\"ID\"},{id:\"IE\"},{id:\"IL\"},{id:\"IN\"},{id:\"IQ\"},{id:\"IR\"},{id:\"IS\"},{id:\"IT\"},{id:\"JM\"},{id:\"JO\"},{id:\"JP\"},{id:\"KE\"},{id:\"KG\"},{id:\"KH\"},{id:\"KP\"},{id:\"KR\"},{id:\"XK\"},{id:\"KW\"},{id:\"KZ\"},{id:\"LA\"},{id:\"LB\"},{id:\"LK\"},{id:\"LR\"},{id:\"LS\"},{id:\"LT\"},{id:\"LU\"},{id:\"LV\"},{id:\"LY\"},{id:\"MA\"},{id:\"MD\"},{id:\"ME\"},{id:\"MG\"},{id:\"MK\"},{id:\"ML\"},{id:\"MM\"},{id:\"MN\"},{id:\"MR\"},{id:\"MW\"},{id:\"MX\"},{id:\"MY\"},{id:\"MZ\"},{id:\"NA\"},{id:\"NC\"},{id:\"NE\"},{id:\"NG\"},{id:\"NI\"},{id:\"NL\"},{id:\"NO\"},{id:\"NP\"},{id:\"NZ\"},{id:\"OM\"},{id:\"PA\"},{id:\"PE\"},{id:\"PG\"},{id:\"PH\"},{id:\"PL\"},{id:\"PK\"},{id:\"PR\"},{id:\"PS\"},{id:\"PT\"},{id:\"PY\"},{id:\"QA\"},{id:\"RO\"},{id:\"RS\"},{id:\"RU\"},{id:\"RW\"},{id:\"SA\"},{id:\"SB\"},{id:\"SD\"},{id:\"SE\"},{id:\"SI\"},{id:\"SJ\"},{id:\"SK\"},{id:\"SL\"},{id:\"SN\"},{id:\"SO\"},{id:\"SR\"},{id:\"SS\"},{id:\"SV\"},{id:\"SY\"},{id:\"SZ\"},{id:\"TD\"},{id:\"TF\"},{id:\"TG\"},{id:\"TH\"},{id:\"TJ\"},{id:\"TL\"},{id:\"TM\"},{id:\"TN\"},{id:\"TR\"},{id:\"TT\"},{id:\"TW\"},{id:\"TZ\"},{id:\"UA\"},{id:\"UG\"},{id:\"US\"},{id:\"UY\"},{id:\"UZ\"},{id:\"VE\"},{id:\"VN\"},{id:\"VU\"},{id:\"YE\"},{id:\"ZA\"},{id:\"ZM\"},{id:\"ZW\"}-->\n        </defs>\n        <g>\n            <path\n                id=\"AE\"\n                :title=\"countries.getName('AE', codeLang)\"\n                class=\"land\"\n                d=\"M619.87,393.72L620.37,393.57L620.48,394.41L622.67,393.93L624.99,394.01L626.68,394.1L628.6,392.03L630.7,390.05L632.47,388.15L633,389.2L633.38,391.64L631.95,391.65L631.72,393.65L632.22,394.07L630.95,394.67L630.94,395.92L630.12,397.18L630.05,398.39L629.48,399.03L621.06,397.51L619.98,394.43z\"\n            />\n            <path\n                id=\"AF\"\n                :title=\"countries.getName('AF', codeLang)\"\n                class=\"land\"\n                d=\"M646.88,356.9L649.74,358.2L651.85,357.74L652.44,356.19L654.65,355.67L656.23,354.62L656.79,351.83L659.15,351.15L659.59,349.9L660.92,350.84L661.76,350.95L663.32,350.98L665.44,351.72L666.29,352.14L668.32,351.02L669.27,351.69L670.17,350.09L671.85,350.16L672.28,349.64L672.58,348.21L673.79,346.98L675.3,347.78L675,348.87L675.85,349.04L675.58,351.99L676.69,353.14L677.67,352.4L678.92,352.06L680.66,350.49L682.59,350.75L685.49,350.75L685.99,351.76L684.35,352.15L682.93,352.8L679.71,353.2L676.7,353.93L675.06,355.44L675.72,356.9L676.05,358.6L674.65,360.03L674.77,361.33L674,362.55L671.33,362.44L672.43,364.66L670.65,365.51L669.46,367.51L669.61,369.49L668.51,370.41L667.48,370.11L665.33,370.54L665.03,371.45L662.94,371.45L661.38,373.29L661.28,376.04L657.63,377.37L655.68,377.09L655.11,377.79L653.44,377.39L650.63,377.87L645.94,376.23L648.48,373.3L648.25,371.2L646.13,370.65L645.91,368.56L644.99,365.92L646.19,364.09L644.97,363.6L645.74,361.15z\"\n            />\n            <path\n                id=\"AL\"\n                :title=\"countries.getName('AL', codeLang)\"\n                class=\"land\"\n                d=\"M532.98,334.66L532.63,335.93L533.03,337.52L534.19,338.42L534.13,339.39L533.22,339.93L533.05,341.12L531.75,342.88L531.27,342.63L531.22,341.83L529.66,340.6L529.42,338.85L529.66,336.32L530.04,335.16L529.57,334.57L529.38,333.38L530.6,331.51L530.77,332.23L531.53,331.89L532.13,332.91L532.8,333.29z\"\n            />\n            <path\n                id=\"AM\"\n                :title=\"countries.getName('AM', codeLang)\"\n                class=\"land\"\n                d=\"M597.45,337.5L601.35,336.92L601.93,337.9L603,338.54L602.43,339.46L603.93,340.72L603.14,341.88L604.33,342.87L605.59,343.46L605.65,345.96L604.63,346.06L603.49,343.98L603.5,343.43L602.26,343.44L601.43,342.46L600.85,342.56L599.74,341.5L597.66,340.59L597.93,338.8z\"\n            />\n            <path\n                id=\"AO\"\n                :title=\"countries.getName('AO', codeLang)\"\n                class=\"land\"\n                d=\"M521.03,479.78l0.69,2.09l0.8,1.68l0.64,0.91l1.07,1.47l1.85,-0.23l0.93,-0.4l1.55,0.4l0.42,-0.7l0.7,-1.64l1.74,-0.11l0.15,-0.49l1.43,-0.01l-0.24,1.01l3.4,-0.02l0.05,1.77l0.57,1.09l-0.41,1.7l0.21,1.74l0.94,1.05l-0.15,3.37l0.69,-0.26l1.22,0.07l1.74,-0.42l1.28,0.17l0.3,0.88l-0.32,1.38l0.49,1.34l-0.42,1.07l0.24,0.99l-5.84,-0.04l-0.13,9.16l1.89,2.38l1.83,1.82l-5.15,1.19l-6.79,-0.41l-1.94,-1.4l-11.37,0.13l-0.42,0.21l-1.67,-1.32l-1.82,-0.09l-1.68,0.5l-1.35,0.56l-0.26,-1.83l0.39,-2.55l0.97,-2.65l0.15,-1.24l0.91,-2.59l0.67,-1.17l1.61,-1.87l0.9,-1.27l0.29,-2.11l-0.15,-1.61l-0.84,-1.01l-0.75,-1.72l-0.69,-1.69l0.15,-0.59l0.86,-1.12l-0.85,-2.72l-0.57,-1.88l-1.4,-1.77l0.27,-0.54l1.16,-0.38l0.81,0.05l0.98,-0.34L521.03,479.78zM510.12,479.24l-0.71,0.3l-0.75,-2.1l1.13,-1.21l0.85,-0.47l1.05,0.96l-1.02,0.59l-0.46,0.72L510.12,479.24z\"\n            />\n            <path\n                id=\"AR\"\n                :title=\"countries.getName('AR', codeLang)\"\n                class=\"land\"\n                d=\"M291.6,648.91l-2.66,0.25l-1.43,-1.73l-1.69,-0.13l-3,0l0,-10.57l1.08,2.15l1.4,3.53l3.65,2.87l3.93,1.21L291.6,648.91zM293.1,526.47l1.65,2.18l1.09,-2.43l3.2,0.12l0.45,0.64l5.15,4.94l2.29,0.46l3.43,2.26l2.89,1.2l0.4,1.36l-2.76,4.73l2.83,0.85l3.15,0.48l2.22,-0.5l2.54,-2.4l0.46,-2.74l1.39,-0.59l1.41,1.79l-0.06,2.49l-2.36,1.73l-1.88,1.28l-3.16,3.08l-3.74,4.37l-0.7,2.59l-0.75,3.37l0.03,3.3l-0.61,0.74l-0.22,2.17l-0.19,1.76l3.56,2.91l-0.38,2.37l1.75,1.51l-0.14,1.7l-2.69,4.52l-4.16,1.91l-5.62,0.75l-3.08,-0.36l0.59,2.15l-0.57,2.72l0.52,1.85l-1.68,1.3l-2.87,0.51l-2.7,-1.35l-1.08,0.97l0.39,3.71l1.89,1.14l1.54,-1.19l0.84,1.96l-2.58,1.18l-2.25,2.38l-0.41,3.91l-0.66,2.11l-2.65,0.01l-2.2,2.04l-0.8,3.01l2.76,2.98l2.68,0.83l-0.96,3.73l-3.31,2.38l-1.82,5.03l-2.56,1.72l-1.15,2.06l0.91,4.64l1.87,2.63l-1.18,-0.23l-2.6,-0.71l-6.78,-0.61l-1.16,-2.63l0.05,-3.33l-1.87,0.28l-0.99,-1.6l-0.25,-4.6l2.15,-1.88l0.89,-2.68l-0.33,-2.11l1.49,-3.52l1.02,-5.35l-0.3,-2.33l1.22,-0.75l-0.3,-1.48l-1.3,-0.78l0.92,-1.63l-1.27,-1.46l-0.65,-4.4l1.13,-0.77l-0.47,-4.54l0.66,-3.75l0.75,-3.22l1.68,-1.3l-0.85,-3.46l-0.01,-3.22l2.12,-2.26l-0.06,-2.87l1.6,-3.31l0.01,-3.09l-0.73,-0.61l-1.29,-5.69l1.73,-3.34l-0.27,-3.11l1,-2.9l1.84,-2.96l1.98,-1.95l-0.84,-1.23l0.59,-1l-0.09,-5.14l3.05,-1.51l0.96,-3.16l-0.34,-0.76l2.34,-2.72L293.1,526.47z\"\n            />\n            <path\n                id=\"AT\"\n                :title=\"countries.getName('AT', codeLang)\"\n                class=\"land\"\n                d=\"M522.86,309.85L522.65,311.56L521.07,311.57L521.61,312.46L520.68,315.11L520.15,315.8L517.7,315.9L516.28,316.82L513.96,316.51L509.95,315.46L509.33,314.03L506.56,314.75L506.23,315.52L504.53,314.94L503.1,314.83L501.83,314.09L502.26,313.08L502.15,312.34L503,312.12L504.42,313.26L504.82,312.17L507.29,312.35L509.3,311.61L510.64,311.73L511.51,312.58L511.78,311.88L511.38,309.16L512.39,308.62L513.37,306.67L515.46,308.04L517.03,306.3L518.02,305.98L520.2,307.28L521.51,307.06L522.81,307.86L522.58,308.4z\"\n            />\n            <path\n                id=\"AU\"\n                :title=\"countries.getName('AU', codeLang)\"\n                class=\"land\"\n                d=\"M882.93,588.16l2.71,1.28l1.53,-0.51l2.19,-0.71l1.68,0.25l0.2,4.43l-0.96,1.3l-0.29,3.06l-0.98,-1.05l-1.95,2.67l-0.58,-0.21l-1.72,-0.12l-1.73,-3.28l-0.38,-2.5l-1.62,-3.25l0.07,-1.7L882.93,588.16zM877.78,502.1l1.01,2.25l1.8,-1.08l0.93,1.22l1.35,1.13l-0.29,1.28l0.6,2.48l0.43,1.45l0.71,0.35l0.76,2.5l-0.27,1.52l0.91,1.99l3.04,1.54l1.98,1.41l1.88,1.29l-0.37,0.72l1.6,1.87l1.09,3.25l1.12,-0.66l1.14,1.31l0.69,-0.46l0.48,3.21l1.99,1.87l1.3,1.17l2.19,2.49l0.79,2.49l0.07,1.77l-0.19,1.94l1.34,2.68l-0.16,2.81l-0.49,1.48l-0.76,2.87l0.06,1.86l-0.55,2.34l-1.24,3l-2.08,1.63l-1.02,2.59l-0.94,1.67l-0.83,2.93l-1.08,1.71l-0.71,2.58l-0.36,2.4l0.14,1.11l-1.61,1.22l-3.14,0.13l-2.59,1.45l-1.29,1.38l-1.69,1.54l-2.32,-1.58l-1.72,-0.63l0.44,-1.85l-1.53,0.67l-2.46,2.58l-2.42,-0.97l-1.59,-0.56l-1.6,-0.25l-2.71,-1.03l-1.81,-2.18l-0.52,-2.66l-0.65,-1.75l-1.38,-1.4l-2.7,-0.41l0.92,-1.66l-0.68,-2.52l-1.37,2.35l-2.5,0.63l1.47,-1.88l0.42,-1.95l1.08,-1.65l-0.22,-2.47l-2.28,2.85l-1.75,1.15l-1.07,2.69l-2.19,-1.4l0.09,-1.79l-1.75,-2.43l-1.48,-1.25l0.53,-0.77l-3.6,-2l-1.97,-0.09l-2.7,-1.6l-5.02,0.31l-3.63,1.18l-3.19,1.1l-2.68,-0.22l-2.97,1.7l-2.43,0.77l-0.54,1.75l-1.04,1.36l-2.38,0.08l-1.76,0.3l-2.48,-0.61l-2.02,0.37l-1.92,0.15l-1.67,1.8l-0.82,-0.15l-1.41,0.96l-1.35,1.08l-2.05,-0.13l-1.88,0l-2.97,-2.17l-1.51,-0.64l0.06,-1.93l1.39,-0.46l0.48,-0.76l-0.1,-1.2l0.34,-2.3l-0.31,-1.95l-1.48,-3.29l-0.46,-1.85l0.12,-1.83l-1.12,-2.08l-0.07,-0.93l-1.24,-1.26l-0.35,-2.47l-1.6,-2.48l-0.39,-1.33l1.23,1.35l-0.95,-2.88l1.39,0.9l0.83,1.2l-0.05,-1.59l-1.39,-2.43l-0.27,-0.97l-0.65,-0.92l0.3,-1.77l0.57,-0.75l0.38,-1.52l-0.3,-1.77l1.16,-2.17l0.21,2.29l1.18,-2.07l2.28,-1l1.37,-1.28l2.14,-1.1l1.27,-0.23l0.77,0.37l2.21,-1.11l1.7,-0.33l0.42,-0.65l0.74,-0.27l1.55,0.07l2.95,-0.87l1.52,-1.31l0.72,-1.58l1.64,-1.49l0.13,-1.17l0.07,-1.59l1.96,-2.47l1.18,2.51l1.19,-0.58l-1,-1.38l0.88,-1.41l1.24,0.63l0.34,-2.21l1.53,-1.42l0.68,-1.14l1.41,-0.49l0.04,-0.8l1.23,0.34l0.05,-0.72l1.23,-0.41l1.36,-0.39l2.07,1.32l1.56,1.71l1.75,0.02l1.78,0.27l-0.59,-1.58l1.34,-2.3l1.26,-0.75l-0.44,-0.71l1.22,-1.63l1.7,-1.01l1.43,0.34l2.36,-0.54l-0.05,-1.45l-2.05,-0.94l1.49,-0.41l1.86,0.7l1.49,1.17l2.36,0.73l0.8,-0.29l1.74,0.88l1.64,-0.82l1.05,0.25l0.66,-0.55l1.29,1.41l-0.75,1.53l-1.06,1.16l-0.96,0.1l0.33,1.15l-0.82,1.43l-1,1.41l0.2,0.81l2.23,1.6l2.16,0.93l1.44,1l2.03,1.72l0.79,0l1.47,0.75l0.43,0.9l2.68,0.99l1.85,-1l0.55,-1.57l0.57,-1.29l0.35,-1.59l0.85,-2.3l-0.39,-1.39l0.2,-0.84l-0.32,-1.64l0.37,-2.16l0.54,-0.58l-0.44,-0.95l0.68,-1.51l0.53,-1.56l0.07,-0.81l1.04,-1.06l0.79,1.39l0.19,1.78l0.7,0.34l0.12,1.2l1.02,1.45l0.21,1.62L877.78,502.1z\"\n            />\n            <path\n                id=\"AZ\"\n                :title=\"countries.getName('AZ', codeLang)\"\n                class=\"land\"\n                d=\"M601.43,342.46l0.83,0.97l1.24,-0.01l-0.01,0.56l1.14,2.08l-1.92,-0.48l-1.42,-1.66l-0.44,-1.37L601.43,342.46zM608.08,337.03l1.24,0.25l0.48,-0.95l1.67,-1.51l1.47,1.97l1.43,2.62l1.31,0.17l0.86,0.99l-2.31,0.29l-0.49,2.82l-0.48,1.26l-1.03,0.84l0.08,1.77l-0.7,0.18l-1.75,-1.87l0.97,-1.78l-0.83,-1.06l-1.05,0.27l-3.31,2.66l-0.06,-2.5l-1.26,-0.59l-1.19,-0.99l0.79,-1.16l-1.49,-1.26l0.56,-0.92l-1.07,-0.64l-0.58,-0.97l0.69,-0.61l2.09,1.07l1.51,0.22l0.38,-0.43l-1.38,-2.02l0.73,-0.52l0.79,0.13L608.08,337.03z\"\n            />\n            <path\n                id=\"BA\"\n                :title=\"countries.getName('BA', codeLang)\"\n                class=\"land\"\n                d=\"M528.54,323.11L529.56,323.1L528.86,324.82L530.21,326.32L529.8,328.14L529.14,328.31L528.61,328.67L527.7,329.56L527.29,331.66L524.81,330.22L523.75,328.61L522.68,327.76L521.39,326.31L520.79,325.1L519.41,323.27L520,321.63L521.01,322.54L521.61,321.72L522.92,321.63L525.33,322.29L527.27,322.23z\"\n            />\n            <path\n                id=\"BD\"\n                :title=\"countries.getName('BD', codeLang)\"\n                class=\"land\"\n                d=\"M735.09,400.41L735.04,402.56L734.06,402.1L734.24,404.51L733.44,402.95L733.28,401.43L732.74,399.98L731.57,398.22L728.99,398.1L729.25,399.35L728.37,401.02L727.17,400.41L726.76,400.96L725.97,400.63L724.89,400.36L724.45,397.88L723.48,395.6L723.95,393.76L722.23,392.94L722.85,391.82L724.6,390.67L722.58,389.04L723.57,386.93L725.79,388.27L727.13,388.43L727.38,390.58L730.04,391L732.65,390.95L734.26,391.48L732.97,394.07L731.71,394.25L730.85,395.98L732.38,397.56L732.84,395.62L733.62,395.61z\"\n            />\n            <path\n                id=\"BE\"\n                :title=\"countries.getName('BE', codeLang)\"\n                class=\"land\"\n                d=\"M484.55,295.91L486.6,296.26L489.2,295.33L490.97,297.28L492.52,298.32L492.2,301.29L491.47,301.45L491.16,303.88L488.71,301.91L487.27,302.25L485.31,300.19L484.01,298.42L482.71,298.35L482.3,296.79z\"\n            />\n            <path\n                id=\"BF\"\n                :title=\"countries.getName('BF', codeLang)\"\n                class=\"land\"\n                d=\"M467.33,436.4L465.41,435.67L464.09,435.78L463.11,436.49L461.85,435.89L461.36,434.96L460.1,434.34L459.91,432.7L460.68,431.49L460.61,430.53L462.84,428.17L463.25,426.21L464.02,425.51L465.38,425.89L466.55,425.31L466.93,424.57L469.11,423.29L469.64,422.39L472.26,421.19L473.81,420.78L474.51,421.33L476.3,421.32L476.08,422.72L476.46,424.03L478.04,425.9L478.12,427.28L481.36,427.93L481.29,429.88L480.68,430.74L479.31,431L478.74,432.24L477.78,432.56L475.32,432.5L474.02,432.28L473.12,432.74L471.88,432.53L467.01,432.66L466.94,434.27z\"\n            />\n            <path\n                id=\"BG\"\n                :title=\"countries.getName('BG', codeLang)\"\n                class=\"land\"\n                d=\"M538.78,325.56L539.59,327.16L540.67,326.87L542.83,327.48L546.95,327.68L548.34,326.69L551.64,325.79L553.68,327.2L555.33,327.61L553.87,329.2L552.85,331.93L553.75,334.09L551.34,333.58L548.48,334.76L548.45,336.62L545.9,336.97L543.93,335.67L541.68,336.7L539.61,336.59L539.41,334.12L538,332.91L538.47,332.37L538.16,331.92L538.63,330.71L539.7,329.52L538.34,327.86L538.09,326.44z\"\n            />\n            <path\n                id=\"BI\"\n                :title=\"countries.getName('BI', codeLang)\"\n                class=\"land\"\n                d=\"M557.52,475.93L557.34,472.56L556.63,471.3L558.34,471.52L559.2,469.93L560.69,470.11L560.85,471.21L561.45,471.84L561.48,472.75L560.79,473.33L559.69,474.79L558.68,475.8z\"\n            />\n            <path\n                id=\"BJ\"\n                :title=\"countries.getName('BJ', codeLang)\"\n                class=\"land\"\n                d=\"M482.8,445.92L480.48,446.25L479.79,444.31L479.92,437.85L479.35,437.27L479.25,435.88L478.27,434.89L477.42,434.06L477.78,432.56L478.74,432.24L479.31,431L480.68,430.74L481.29,429.88L482.23,429.05L483.24,429.04L485.38,430.68L485.27,431.63L485.9,433.31L485.35,434.45L485.64,435.21L484.28,436.96L483.42,437.83L482.89,439.6L482.96,441.39z\"\n            />\n            <path\n                id=\"BN\"\n                :title=\"countries.getName('BN', codeLang)\"\n                class=\"land\"\n                d=\"M795.46,450.77L796.57,449.72L798.96,448.19L798.83,449.57L798.67,451.35L797.33,451.26L796.74,452.21z\"\n            />\n            <path\n                id=\"BO\"\n                :title=\"countries.getName('BO', codeLang)\"\n                class=\"land\"\n                d=\"M299.04,526.35L295.84,526.22L294.75,528.65L293.1,526.47L289.43,525.74L287.1,528.46L285.07,528.87L283.97,524.72L282.47,521.38L283.35,518.51L281.88,517.26L281.51,515.14L280.13,513.14L281.9,510L280.69,507.56L281.34,506.59L280.83,505.52L281.93,504.08L281.99,501.64L282.12,499.62L282.73,498.66L280.3,494.08L282.39,494.32L283.83,494.25L284.46,493.4L286.91,492.25L288.38,491.19L292.05,490.71L291.76,492.83L292.1,493.92L291.87,495.82L294.92,498.37L298.06,498.84L299.16,499.91L301.06,500.48L302.22,501.31L303.98,501.28L305.61,502.13L305.73,503.79L306.28,504.63L306.32,505.88L305.5,505.92L306.58,509.29L311.95,509.41L311.54,511.09L311.84,512.24L313.37,513.06L314.04,514.88L313.54,517.2L312.77,518.49L313.04,520.18L312.16,520.79L312.12,519.88L309.5,518.37L306.9,518.32L302.01,519.18L300.67,521.8L300.6,523.4L299.49,526.99z\"\n            />\n            <path\n                id=\"BR\"\n                :title=\"countries.getName('BR', codeLang)\"\n                class=\"land\"\n                d=\"M313.68,551.79L317.42,547.42L320.59,544.34L322.47,543.06L324.83,541.33L324.89,538.84L323.48,537.05L322.09,537.64L322.64,535.86L323.02,534.04L323.02,532.36L322.01,531.81L320.96,532.3L319.92,532.17L319.59,530.99L319.33,528.22L318.8,527.32L316.91,526.5L315.77,527.09L312.81,526.51L312.99,522.45L312.16,520.79L313.04,520.18L312.77,518.49L313.54,517.2L314.04,514.88L313.37,513.06L311.84,512.24L311.54,511.09L311.95,509.41L306.58,509.29L305.5,505.92L306.32,505.88L306.28,504.63L305.73,503.79L305.61,502.13L303.98,501.28L302.22,501.31L301.06,500.48L299.16,499.91L298.06,498.84L294.92,498.37L291.87,495.82L292.1,493.92L291.76,492.83L292.05,490.71L288.38,491.19L286.91,492.25L284.46,493.4L283.83,494.25L282.39,494.32L280.3,494.08L278.72,494.57L277.44,494.24L277.63,489.94L275.33,491.6L272.86,491.53L271.8,490.02L269.94,489.86L270.53,488.65L268.97,486.93L267.8,484.4L268.54,483.89L268.54,482.7L270.24,481.89L269.96,480.38L270.67,479.4L270.88,478.1L274.08,476.19L276.38,475.66L276.75,475.24L279.28,475.37L280.54,467.72L280.61,466.51L280.17,464.92L278.93,463.9L278.94,461.88L280.52,461.42L281.08,461.71L281.17,460.64L279.53,460.35L279.5,458.61L284.96,458.67L285.89,457.71L286.67,458.59L287.21,460.24L287.74,459.89L289.29,461.37L291.47,461.19L292.01,460.33L294.09,459.68L295.25,459.23L295.57,458.05L297.58,457.25L297.42,456.67L295.05,456.43L294.66,454.67L294.77,452.8L293.52,452.08L294.04,451.82L296.12,452.18L298.35,452.88L299.16,452.22L301.17,451.78L304.31,450.74L305.34,449.67L304.96,448.88L306.42,448.76L307.08,449.4L306.71,450.63L307.67,451.05L308.32,452.35L307.54,453.33L307.09,455.71L307.81,457.12L308.01,458.41L309.74,459.71L311.12,459.85L311.43,459.31L312.31,459.19L313.58,458.7L314.49,457.96L316.04,458.19L316.72,458.09L318.25,458.32L318.5,457.75L318.03,457.2L318.31,456.39L319.44,456.64L320.77,456.35L322.37,456.94L323.6,457.52L324.47,456.76L325.09,456.88L325.48,457.67L326.82,457.47L327.89,456.41L328.75,454.35L330.41,451.8L331.37,451.67L332.06,453.21L333.63,458.09L335.13,458.55L335.21,460.47L333.1,462.76L333.97,463.6L338.93,464.04L339.03,466.83L341.16,465L344.69,466.01L349.34,467.71L350.71,469.34L350.25,470.88L353.51,470.02L358.97,471.5L363.16,471.39L367.3,473.7L370.88,476.83L373.04,477.63L375.44,477.75L376.46,478.63L377.41,482.2L377.88,483.89L376.76,488.55L375.33,490.39L371.38,494.33L369.59,497.54L367.52,500.02L366.82,500.08L366.03,502.18L366.23,507.58L365.45,512.06L365.15,513.99L364.27,515.14L363.77,519.08L360.93,522.96L360.45,526.05L358.18,527.36L357.52,529.17L354.48,529.16L350.07,530.33L348.09,531.68L344.95,532.57L341.65,535.01L339.28,538.07L338.87,540.39L339.34,542.12L338.81,545.3L338.18,546.85L336.22,548.6L333.11,554.28L330.64,556.87L328.73,558.41L327.46,561.57L325.6,563.48L324.82,561.58L326.06,560.01L324.44,557.76L322.24,555.94L319.35,553.86L318.31,553.95L315.5,551.45z\"\n            />\n            <path\n                id=\"BS\"\n                :title=\"countries.getName('BS', codeLang)\"\n                class=\"land\"\n                d=\"M257.86,395.2l-0.69,0.15l-0.71,-1.76l-1.05,-0.89l0.61,-1.95l0.84,0.12l0.98,2.55L257.86,395.2zM257.06,386.51l-3.06,0.5l-0.2,-1.15l1.32,-0.25l1.85,0.09L257.06,386.51zM259.36,386.48l-0.48,2.21l-0.52,-0.4l0.05,-1.63l-1.26,-1.23l-0.01,-0.36L259.36,386.48z\"\n            />\n            <path\n                id=\"BT\"\n                :title=\"countries.getName('BT', codeLang)\"\n                class=\"land\"\n                d=\"M732.36,382.78L733.5,383.78L733.3,385.71L731.01,385.8L728.65,385.59L726.88,386.08L724.33,384.89L724.28,384.26L726.13,381.92L727.64,381.12L729.65,381.85L731.13,381.93z\"\n            />\n            <path\n                id=\"BW\"\n                :title=\"countries.getName('BW', codeLang)\"\n                class=\"land\"\n                d=\"M547.17,515.95L547.73,516.47L548.62,518.18L551.79,521.43L552.99,521.75L553,522.8L553.82,524.7L555.99,525.16L557.78,526.52L553.81,528.74L551.29,531L550.36,533.03L549.52,534.18L547.99,534.43L547.5,535.9L547.21,536.86L545.42,537.58L543.14,537.43L541.8,536.57L540.62,536.19L539.25,536.91L538.56,538.39L537.23,539.32L535.83,540.71L533.82,541.03L533.2,539.94L533.46,538.04L531.79,535.11L531.04,534.65L531.04,525.79L533.8,525.68L533.88,515.11L535.97,515.02L540.29,513.99L541.37,515.2L543.15,514.05L544.01,514.04L545.59,513.38L546.09,513.6z\"\n            />\n            <path\n                id=\"BY\"\n                :title=\"countries.getName('BY', codeLang)\"\n                class=\"land\"\n                d=\"M541.1,284.07L543.81,284.11L546.85,282.31L547.5,279.59L549.8,278.02L549.54,275.82L551.24,274.98L554.26,273.05L557.21,274.31L557.61,275.54L559.08,274.95L561.82,276.13L562.09,278.44L561.49,279.76L563.25,282.91L564.39,283.78L564.22,284.64L566.11,285.47L566.92,286.72L565.83,287.74L563.57,287.58L563.03,288.02L563.69,289.56L564.38,292.49L561.97,292.76L561.11,293.76L560.92,296.02L559.81,295.59L557.28,295.81L556.54,294.76L555.49,295.54L554.44,294.89L552.23,294.8L549.1,293.72L546.27,293.36L544.1,293.46L542.56,294.69L541.22,294.86L541.17,292.85L540.3,290.73L541.98,289.79L542,287.94L541.22,286.16z\"\n            />\n            <path\n                id=\"BZ\"\n                :title=\"countries.getName('BZ', codeLang)\"\n                class=\"land\"\n                d=\"M225.31,412.96L225.29,412.53L225.63,412.39L226.14,412.74L227.14,410.97L227.67,410.93L227.68,411.36L228.21,411.37L228.17,412.17L227.71,413.44L227.96,413.89L227.67,414.94L227.84,415.21L227.52,416.68L226.97,417.46L226.46,417.55L225.9,418.55L225.07,418.55L225.29,415.27z\"\n            />\n            <path\n                id=\"CA\"\n                :title=\"countries.getName('CA', codeLang)\"\n                class=\"land\"\n                d=\"M198.93,96.23l-0.22,-5.9l3.63,0.58l1.63,0.96l3.35,4.92l-0.76,4.97l-4.15,2.77l-2.28,-3.12L198.93,96.23zM212.14,108.88l0.33,-1.49l-1.97,-2.45l-5.65,-0.19l0.75,3.68l5.25,0.83L212.14,108.88zM248.49,155.83l3.08,5.1l0.81,0.57l3.07,-1.27l3.02,0.2l2.98,0.28l-0.25,-2.64l-4.84,-5.38l-6.42,-1.08l-1.35,0.67L248.49,155.83zM183.06,93.13l-2.71,4.19l6.24,0.52l4.61,4.44l4.58,1.5l-1.09,-5.68l-2.14,-6.73l-7.58,-5.35l-5.5,-2.04l0.2,5.69L183.06,93.13zM208.96,82.89l5.13,-0.12l-2.22,4l-0.04,5.3l3.01,5.76l5.81,1.77l4.96,-0.99l5.18,-10.73l3.85,-4.45l-3.38,-4.97l-2.21,-10.65l-4.6,-3.19l-4.72,-3.68l-3.58,-9.56l-6.52,0.94l1.23,4.15l-2.87,1.25l-1.94,5.32l-1.94,7.46l1.78,7.26L208.96,82.89zM145.21,136.27l3.92,1.95l12.67,-1.3l-5.82,4.77l0.36,3.43l4.26,-0.24l7.07,-4.58l9.5,-1.67l1.71,-5.22l-0.49,-5.57l-2.94,-0.5l-2.5,1.93l-1.1,-4.13l-0.95,-5.7l-2.9,-1.42l-2.57,4.41l4.01,11.05l-4.9,-0.85l-4.98,-6.79l-7.89,-4l-2.64,3.32L145.21,136.27zM167.77,94.21l-3.65,-2.9l-1.5,-0.66l-2.88,4.28l-0.05,2l4.66,0.01L167.77,94.21zM166.31,106.56l0.93,-3.99l-3.95,-2.12l-4.09,1.39l-2.27,4.26l4.16,4.21L166.31,106.56zM195.4,139.8l4.62,-1.11l1.28,-8.25l-0.09,-5.95l-2.14,-5.56l-0.22,1.6l-3.94,-0.7l-4.22,4.09l-3.02,-0.37l0.18,8.92l4.6,-0.87l-0.06,6.47L195.4,139.8zM192.12,185.41l-5.06,-3.93l-4.71,-4.21l-0.87,-6.18l-1.76,-8.92l-3.14,-3.84l-2.79,-1.55l-2.47,1.42l1.99,9.59l-1.41,3.73l-2.29,-8.98l-2.56,-3.11l-3.17,4.81l-3.9,-4.76l-6.24,2.87l1.4,-4.46l-2.87,-1.87l-7.51,5.84l-1.95,3.71l-2.35,6.77l4.9,2.32l4.33,-0.12l-6.5,3.46l1.48,3.13l3.98,0.17l5.99,-0.67l5.42,1.96l-3.66,1.44l-3.95,-0.37l-4.33,1.41l-1.87,0.87l3.45,6.35l2.49,-0.88l3.83,2.15l1.52,3.65l4.99,-0.73l7.1,-1.16l5.26,-2.65l3.26,-0.48l4.82,2.12l5.07,1.22l0.94,-2.86l-1.79,-3.05l4.6,-0.64L192.12,185.41zM199.86,184.43l-1.96,3.54l-2.47,2.49l3.83,3.54l2.28,-0.85l3.78,2.36l1.74,-2.73l-1.71,-3.03l-0.84,-1.53l-1.68,-1.46L199.86,184.43zM182.25,154.98l-2.13,-2.17l-3.76,0.4l-0.95,1.38l4.37,6.75L182.25,154.98zM210.94,168.15l3.01,-6.93l3.34,-1.85l4.19,-8.74l-5.36,-2.47l-5.84,-0.36l-2.78,2.77l-1.47,4.23l-0.04,4.82l1.75,8.19L210.94,168.15zM228.09,145.15l5.76,-0.18l8.04,-1.61l3.59,1.28l4.18,-2.26l1.75,-2.84l-0.63,-4.52l-3,-4.23l-4.56,-0.8l-5.71,0.97l-4.46,2.44l-4.09,-0.94l-3.78,-0.5l-1.78,-2.7l-3.22,-2.61l0.64,-4.43l-2.42,-3.98l-5.52,0.03l-3.11,-3.99l-5.78,-0.8l-1.06,5.1l3.25,3.74l5.8,1.45l2.81,5.09l0.34,5.6l0.97,5.99l7.45,3.42L228.09,145.15zM139.07,126.88l5.21,-5.05l2.62,-0.59l2.16,-4.23l0.38,-9.77l-3.85,1.91l-4.3,-0.18l-5.76,8.19l-4.76,8.98l3.8,2.51L139.07,126.88zM211.25,143.05l1.53,-4.14l-1.02,-3.46l-2.45,-3.92l-4.03,3.02l-1.49,4.92l3.4,2.79L211.25,143.05zM202.94,154.49l-0.73,-2.88l-5,1.26l-3.34,-2.11l-3.32,4.8l3.09,6.28l-5.72,-1.17l-0.06,3.01l6.97,7.05l1.94,3.38l2.7,0.73l4.6,-3.41l0.5,-8.21l-4.24,-4.07L202.94,154.49zM128.95,308.23l-1.16,-2.34l-2.8,-1.77l-1.39,-2.05l-0.95,-1.5l-2.64,-0.46l-1.72,-0.67l-2.94,-0.96l-0.24,1.02l1.08,2.38l2.89,0.78l0.5,1.23l2.51,1.5l0.84,1.51l4.6,1.92L128.95,308.23zM250.65,230.6l-2,-2.11l-2.06,0.5l-0.25,-3.06l-3.21,-2.04l-3.07,-2.27l-1.63,-1.75l-1.43,1.03l-0.52,-2.96l-2.03,-0.55l-0.96,6.13l-0.36,5.11l-2.44,3.14l3.8,-0.6l0.96,3.65l3.99,-3.23l2.78,-3.38l1.57,2.86l4.36,1.51L250.65,230.6zM130.12,178.05l7.38,-4.18V170l3.48,-6.41l6.88,-6.69l3.52,-2.47l-3.01,-4.2l-2.72,-2.95l-7.16,-0.57l-4,-2.16l-9.48,1.63l2.74,6.23l-2.43,6.43l-1.94,6.87l-1.2,3.86l6.47,4.69L130.12,178.05zM264.36,205.36l0.32,-1.01l-0.03,-3.17l-2.19,-2.08l-2.57,1.05l-1.19,4.17l0.7,3.56l3.14,-0.36L264.36,205.36zM288.18,212.9l4.41,6.6l3.45,2.85l4.92,-7.87l0.87,-4.93l-4.41,-0.47l-4.03,-6.7l-4.45,-1.64l-6.6,-4.97l5.15,-3.63l-2.65,-7.54l-2.44,-3.35l-6.77,-3.35l-2.92,-5.55l-5.21,1.99l-0.36,-3.86l-3.86,-4.32l-6.22,-4.71l-2.65,3.71l-5.55,2.66l0.42,-6.06l-4.81,-10.05l-7.11,4.06l-2.59,7.7l-2.21,-5.92l2.06,-6.37l-7.24,2.65l-2.88,3.99l-2.15,8.42l0.89,9.05l3.98,0.04l-2.93,3.92l2.33,2.96l4.55,1.25l5.93,2.42l10.2,1.82l5.08,-1.04l1.5,-2.42l2.21,2.79l2.47,0.46l2.97,4.96l-1.8,1.98l5.68,2.63l4.29,3.68l1.08,2.55l0.77,3.24l-3.63,6.93l-0.98,3.44l0.94,2.42l-5.77,0.86l-5.27,0.12l-1.85,4.87l2.37,2.23l8.11,-1.03l-0.04,-1.89l4.08,3.15l4.18,3.28l-0.98,1.77l3.4,3.02l6.02,3.53l7.6,2.39l-0.46,-2.09l-2.92,-3.67l-3.96,-5.37l7.03,5l3.54,1.66l0.97,-4.44l-1.82,-6.3l-1.16,-1.73l-3.81,-3.03l-2.95,-3.91l0.35,-3.94L288.18,212.9zM222.35,51.34l2.34,7.29l4.96,5.88l9.81,-1.09l6.31,1.97l-4.38,6.05l-2.21,-1.78l-7.66,-0.71l1.19,8.31l3.96,6.04l-0.8,5.2l-4.97,3.46l-2.27,5.47l4.55,2.65l3.82,8.55l-7.5,-5.7l-1.71,0.94l1.38,9.38l-5.18,2.83l0.35,5.85l5.3,0.63l4.17,1.44l8.24,-1.84l7.33,3.27l7.49,-7.19l-0.06,-3.02l-4.79,0.48l-0.39,-2.84l3.92,-3.83l1.33,-5.15l4.33,-3.83l2.66,-4.76l-2.32,-7.1l1.94,-2.65l-3.86,-1.89l8.49,-1.63l1.79,-3.15l5.78,-2.6l4.8,-13.47l4.57,-4.94l6.62,-11.12l-6.1,0.1l2.54,-4.3l6.78,-3.99l6.84,-8.9l0.12,-5.73l-5.13,-6.04l-6.02,-2.93l-7.49,-1.82l-6.07,-1.49l-6.07,-1.5l-8.1,3.98l-1.49,-2.53l-8.57,0.98l-5.03,2.57l-3.7,3.65l-2.13,11.74L239,24.52l-3.48,-1.14l-4.12,7.97l-5.5,3.35l-3.27,0.66l-4.17,3.84l0.61,6.65L222.35,51.34zM296.75,316.34l-0.98,-1.98l-1.06,1.26l0.7,1.36l3.56,1.71l1.04,-0.26l1.38,-1.66l-2.6,0.11L296.75,316.34zM239.75,238.48l0.61,1.63l1.98,0.14l3.28,-3.34l0.06,-1.19l-3.85,-0.06L239.75,238.48zM301.88,304.92l-2.87,-1.8l-3.69,-1.09l-0.97,0.37l2.61,2.04l3.63,1.34l1.36,-0.08L301.88,304.92zM326.76,309.71l-0.36,-2.24l-1.96,0.72l0.87,-3.11l-2.8,-1.32l-1.29,1.05l-2.49,-1.18l0.98,-1.51l-1.88,-0.93l-1.83,1.47l1.86,-3.82l1.5,-2.8l0.54,-1.22l-1.3,-0.2l-2.43,1.55l-1.74,2.53l-2.9,6.92l-2.35,2.56l1.22,1.14l-1.75,1.47l0.43,1.23l5.44,0.13l3.01,-0.25l2.69,1.01l-1.98,1.93l1.67,0.14l3.25,-3.58l0.78,0.53l-0.61,3.37l1.84,0.77l1.27,-0.15l1.18,-3.61L326.76,309.71zM305.57,314.47l-2.81,4.56l-4.63,0.58l-3.64,-2.01l-0.92,-3.07l-0.89,-4.46l2.65,-2.83l-2.48,-2.09l-4.19,0.43l-5.88,3.53l-4.5,5.45l-2.38,0.67l3.23,-3.8l4.04,-5.57l3.57,-1.9l2.35,-3.11l2.9,-0.3l4.21,0.03l6,0.92l4.74,-0.71l3.53,-3.62l4.62,-1.59l2.01,-1.58l2.04,-1.71l-0.2,-5.19l-1.13,-1.77l-2.18,-0.63l-1.11,-4.05l-1.8,-1.55l-4.47,-1.26l-2.52,-2.82l-3.73,-2.83l1.13,-3.2l-3.1,-6.26l-3.65,-6.89l-2.18,-4.98l-1.86,2.61l-2.68,6.05l-4.06,2.97l-2.03,-3.16l-2.56,-0.85l-0.93,-6.99l0.08,-4.8l-5,-0.44l-0.85,-2.27l-3.45,-3.44l-2.61,-2.04l-2.32,1.58l-2.88,-0.58l-4.81,-1.65l-1.95,1.4l0.94,9.18l1.22,5.12l-3.31,5.75l3.41,4.02l1.9,4.44l0.23,3.42l-1.55,3.5l-3.18,3.46l-4.49,2.28l1.98,2.53l1.46,7.4l-1.52,4.68l-2.16,1.46l-4.17,-4.28l-2.03,-5.17l-0.87,-4.76l0.46,-4.19l-3.05,-0.47l-4.63,-0.28l-2.97,-2.08l-3.51,-1.37l-2.01,-2.38l-2.8,-1.94l-5.21,-2.23l-3.92,1.02l-1.31,-3.95l-1.26,-4.99l-4.12,-0.9l0.15,-6.41l1.09,-4.48l3.04,-6.6l3.43,-4.9l3.26,-0.77l0.19,-4.05l2.21,-2.68l4.01,-0.42l3.25,-4.39l0.82,-2.9l2.7,-5.73l0.84,-3.5l2.9,2.11l3.9,-1.08l5.49,-4.96l0.36,-3.54l-1.98,-3.98l2.09,-4.06l-0.17,-3.87l-3.76,-3.95l-4.14,-1.19l-3.98,-0.62l-0.15,8.71l-2.04,6.56l-2.93,5.3l-2.71,-4.95l0.84,-5.61l-3.35,-5.02l-3.75,6.09l0.01,-7.99l-5.21,-1.63l2.49,-4.01l-3.81,-9.59l-2.84,-3.91l-3.7,-1.44l-3.32,6.43l-0.22,9.34l3.27,3.29l3,4.91l-1.27,7.71l-2.26,-0.2l-1.78,5.88l0.02,-7l-4.34,-2.58l-2.49,1.33l0.32,4.67l-4.09,-0.18l-4.35,1.17l-4.95,-3.35l-3.13,0.6l-2.82,-4.11l-2.26,-1.84l-2.24,0.77l-3.41,0.35l-1.81,2.61l2.86,3.19l-3.05,3.72l-2.99,-4.42l-2.39,1.3l-7.57,0.87l-5.07,-1.59l3.94,-3.74l-3.78,-3.9l-2.75,0.5l-3.86,-1.32l-6.56,-2.89l-4.29,-3.37l-3.4,-0.47l-1.06,2.36l-3.44,1.31l-0.38,-6.15l-3.73,5.5l-4.74,-7.32l-1.94,-0.89l-0.63,3.91l-2.09,1.9l-1.93,-3.39l-4.59,2.05l-4.2,3.55l-4.17,-0.98l-3.4,2.5l-2.46,3.28l-2.92,-0.72l-4.41,-3.8l-5.23,-1.94l-0.02,27.65l-0.01,35.43l2.76,0.17l2.73,1.56l1.96,2.44l2.49,3.6l2.73,-3.05l2.81,-1.79l1.49,2.85l1.89,2.23l2.57,2.42l1.75,3.79l2.87,5.88l4.77,3.2l0.08,3.12l-1.56,2.35l0.06,2.48l3.39,3.45l0.49,3.76l3.59,1.96l-0.4,2.79l1.56,3.96l5.08,1.82l2,1.89l5.43,4.23l0.38,0.01h7.96h8.32h2.76h8.55h8.27h8.41l8.42,0l9.53,0l9.59,0l5.8,0l0.01,-1.64l0.95,-0.02l0.5,2.35l0.87,0.72l1.96,0.26l2.86,0.67l2.72,1.3l2.27,-0.55l3.45,1.09l1.14,-1.66l1.59,-0.66l0.62,-1.03l0.63,-0.55l2.61,0.86l1.93,0.1l0.67,0.57l0.94,2.38l3.15,0.63l-0.49,1.18l1.11,1.21l-0.48,1.56l1.18,0.51l-0.59,1.37l0.75,0.13l0.53,-0.6l0.55,0.9l2.1,0.5l2.13,0.04l2.27,0.41l2.51,0.78l0.91,1.26l1.82,3.04l-0.9,1.3l-2.28,-0.54l-1.42,-2.44l0.36,2.49l-1.34,2.17l0.15,1.84l-0.23,1.07l-1.81,1.27l-1.32,2.09l-0.62,1.32l1.54,0.24l2.08,-1.2l1.23,-1.06l0.83,-0.17l1.54,0.38l0.75,-0.59l1.37,-0.48l2.44,-0.47v0l0,0l-0.25,-1.15l-0.13,0.04l-0.86,0.2l-1.12,-0.36l0.84,-1.32l0.85,-0.46l1.98,-0.56l2.37,-0.53l1.24,0.73l0.78,-0.85l0.89,-0.54l0.6,0.29l0.03,0.06l2.87,-2.73l1.27,-0.73l4.26,-0.03l5.17,0l0.28,-0.98l0.9,-0.2l1.19,-0.62l1,-1.82l0.86,-3.15l2.14,-3.1l0.93,1.08l1.88,-0.7l1.25,1.19l0,5.52l1.83,2.25l3.12,-0.48l4.49,-0.13l-4.87,3.26l0.11,3.29l2.13,0.28l3.13,-2.79l2.78,-1.58l6.21,-2.35l3.47,-2.62l-1.81,-1.46L305.57,314.47zM251.91,243.37l1.1,-3.12l-0.71,-1.23l-1.15,-0.13l-1.08,1.8l-0.13,0.41l0.74,1.77L251.91,243.37zM109.25,279.8L109.25,279.8l1.56,-2.35L109.25,279.8zM105.85,283.09l-2.69,0.38l-1.32,-0.62l-0.17,1.52l0.52,2.07l1.42,1.46l1.04,2.13l1.69,2.1l1.12,0.01l-2.44,-3.7L105.85,283.09z\"\n            />\n            <path\n                id=\"CD\"\n                :title=\"countries.getName('CD', codeLang)\"\n                class=\"land\"\n                d=\"M561.71,453.61L561.54,456.87L562.66,457.24L561.76,458.23L560.68,458.97L559.61,460.43L559.02,461.72L558.86,463.96L558.21,465.02L558.19,467.12L557.38,467.9L557.28,469.56L556.89,469.77L556.63,471.3L557.34,472.56L557.52,475.93L558.02,478.5L557.74,479.96L558.3,481.58L559.93,483.15L561.44,486.7L560.34,486.41L556.57,486.89L555.82,487.22L555.02,489.02L555.65,490.27L555.15,493.62L554.8,496.47L555.56,496.98L557.52,498.08L558.29,497.57L558.53,500.65L556.38,500.62L555.23,499.05L554.2,497.83L552.05,497.43L551.42,495.94L549.7,496.84L547.46,496.44L546.52,495.15L544.74,494.89L543.43,494.96L543.27,494.08L542.3,494.01L541.02,493.84L539.29,494.26L538.07,494.19L537.37,494.45L537.52,491.08L536.59,490.03L536.38,488.3L536.79,486.6L536.23,485.51L536.18,483.75L532.77,483.77L533.02,482.76L531.59,482.77L531.44,483.26L529.7,483.37L528.99,485L528.57,485.71L527.02,485.31L526.1,485.71L524.24,485.93L523.17,484.46L522.53,483.55L521.72,481.87L521.03,479.78L512.76,479.75L511.77,480.08L510.96,480.03L509.8,480.41L509.41,479.54L510.12,479.24L510.21,478.02L510.67,477.3L511.69,476.72L512.43,477L513.39,475.93L514.91,475.96L515.09,476.75L516.14,477.25L517.79,475.49L519.42,474.13L520.13,473.24L520.04,470.94L521.26,468.23L522.54,466.8L524.39,465.46L524.71,464.57L524.78,463.55L525.24,462.58L525.09,461L525.44,458.53L525.99,456.79L526.83,455.3L526.99,453.62L527.24,451.67L528.34,450.25L529.84,449.35L532.15,450.3L533.93,451.33L535.98,451.61L538.07,452.15L538.91,450.47L539.3,450.25L540.57,450.53L543.7,449.14L544.8,449.73L545.71,449.65L546.13,448.97L547.17,448.73L549.28,449.02L551.08,449.08L552.01,448.79L553.7,451.1L554.96,451.43L555.71,450.96L557.01,451.15L558.57,450.56L559.24,451.75z\"\n            />\n            <path\n                id=\"CF\"\n                :title=\"countries.getName('CF', codeLang)\"\n                class=\"land\"\n                d=\"M518.09,442.66L520.41,442.44L520.93,441.72L521.39,441.78L522.09,442.41L525.62,441.34L526.81,440.24L528.28,439.25L528,438.26L528.79,438L531.5,438.18L534.14,436.87L536.16,433.78L537.59,432.64L539.36,432.15L539.68,433.37L541.3,435.14L541.3,436.29L540.85,437.47L541.03,438.34L542,439.15L544.14,440.39L545.67,441.52L545.7,442.44L547.58,443.9L548.75,445.11L549.46,446.79L551.56,447.9L552.01,448.79L551.08,449.08L549.28,449.02L547.17,448.73L546.13,448.97L545.71,449.65L544.8,449.73L543.7,449.14L540.57,450.53L539.3,450.25L538.91,450.47L538.07,452.15L535.98,451.61L533.93,451.33L532.15,450.3L529.84,449.35L528.34,450.25L527.24,451.67L526.99,453.62L525.19,453.46L523.29,452.99L521.62,454.47L520.15,457.07L519.85,456.26L519.73,454.99L518.45,454.09L517.41,452.65L517.17,451.65L515.85,450.19L516.07,449.36L515.79,448.18L516.01,446.01L516.68,445.5z\"\n            />\n            <path\n                id=\"CG\"\n                :title=\"countries.getName('CG', codeLang)\"\n                class=\"land\"\n                d=\"M511.69,476.72L510.64,475.76L509.79,476.23L508.66,477.43L506.36,474.48L508.49,472.94L507.44,471.09L508.4,470.39L510.29,470.05L510.51,468.81L512.01,470.15L514.49,470.27L515.35,468.95L515.7,467.1L515.39,464.92L514.07,463.28L515.28,460.05L514.58,459.5L512.5,459.72L511.71,458.29L511.92,457.07L515.45,457.18L517.72,457.91L519.95,458.57L520.15,457.07L521.62,454.47L523.29,452.99L525.19,453.46L526.99,453.62L526.83,455.3L525.99,456.79L525.44,458.53L525.09,461L525.24,462.58L524.78,463.55L524.71,464.57L524.39,465.46L522.54,466.8L521.26,468.23L520.04,470.94L520.13,473.24L519.42,474.13L517.79,475.49L516.14,477.25L515.09,476.75L514.91,475.96L513.39,475.93L512.43,477z\"\n            />\n            <path\n                id=\"CH\"\n                :title=\"countries.getName('CH', codeLang)\"\n                class=\"land\"\n                d=\"M502.15,312.34L502.26,313.08L501.83,314.09L503.1,314.83L504.53,314.94L504.31,316.61L503.08,317.3L501,316.79L500.39,318.42L499.06,318.55L498.57,317.91L497,319.27L495.65,319.46L494.44,318.6L493.48,316.83L492.14,317.47L492.18,315.63L494.23,313.32L494.14,312.27L495.42,312.66L496.19,311.95L498.57,311.98L499.15,311.08z\"\n            />\n            <path\n                id=\"CI\"\n                :title=\"countries.getName('CI', codeLang)\"\n                class=\"land\"\n                d=\"M467.24,449.46L465.97,449.49L464.01,448.94L462.22,448.97L458.89,449.46L456.95,450.27L454.17,451.29L453.63,451.22L453.84,448.92L454.11,448.57L454.03,447.46L452.84,446.29L451.95,446.1L451.13,445.33L451.74,444.09L451.46,442.73L451.59,441.91L452.04,441.91L452.2,440.68L451.98,440.14L452.25,439.75L453.29,439.41L452.6,437.15L451.95,435.99L452.18,435.02L452.74,434.81L453.1,434.55L453.88,434.97L456.04,435L456.56,434.17L457.04,434.23L457.85,433.91L458.29,435.12L458.94,434.76L460.1,434.34L461.36,434.96L461.85,435.89L463.11,436.49L464.09,435.78L465.41,435.67L467.33,436.4L468.07,440.41L466.89,442.77L466.16,445.94L467.37,448.35z\"\n            />\n            <path\n                id=\"CL\"\n                :title=\"countries.getName('CL', codeLang)\"\n                class=\"land\"\n                d=\"M282.81,636.73l0,10.57l3,0l1.69,0.13l-0.93,1.98l-2.4,1.53l-1.38,-0.16l-1.66,-0.4l-2.04,-1.48l-2.94,-0.71l-3.53,-2.71l-2.86,-2.57l-3.86,-5.25l2.31,0.97l3.94,3.13l3.72,1.7l1.45,-2.17l0.91,-3.2l2.58,-1.91L282.81,636.73zM283.97,524.72l1.1,4.15l2.02,-0.41l0.34,0.76l-0.96,3.16l-3.05,1.51l0.09,5.14l-0.59,1l0.84,1.23l-1.98,1.95l-1.84,2.96l-1,2.9l0.27,3.11l-1.73,3.34l1.29,5.69l0.73,0.61l-0.01,3.09l-1.6,3.31l0.06,2.87l-2.12,2.26l0.01,3.22l0.85,3.46l-1.68,1.3l-0.75,3.22l-0.66,3.75l0.47,4.54l-1.13,0.77l0.65,4.4l1.27,1.46l-0.92,1.63l1.3,0.78l0.3,1.48l-1.22,0.75l0.3,2.33l-1.02,5.35l-1.49,3.52l0.33,2.11l-0.89,2.68l-2.15,1.88l0.25,4.6l0.99,1.6l1.87,-0.28l-0.05,3.33l1.16,2.63l6.78,0.61l2.6,0.71l-2.49,-0.03l-1.35,1.13l-2.53,1.67l-0.45,4.38l-1.19,0.11l-3.16,-1.54l-3.21,-3.25l0,0l-3.49,-2.63l-0.88,-2.87l0.79,-2.62l-1.41,-2.94l-0.36,-7.34l1.19,-4.03l2.96,-3.19l-4.26,-1.19l2.67,-3.57l0.95,-6.56l3.12,1.37l1.46,-7.97l-1.88,-1l-0.88,4.75l-1.77,-0.54l0.88,-5.42l0.96,-6.84l1.29,-2.48l-0.81,-3.5l-0.23,-3.98l1.18,-0.11l1.72,-5.6l1.94,-5.43l1.19,-4.97l-0.65,-4.91l0.84,-2.67l-0.34,-3.96l1.64,-3.87l0.51,-6.04l0.9,-6.37l0.88,-6.75l-0.21,-4.87l-0.58,-4.15l1.44,-0.75l0.75,-1.5l1.37,1.99l0.37,2.12l1.47,1.25l-0.88,2.87L283.97,524.72z\"\n            />\n            <path\n                id=\"CM\"\n                :title=\"countries.getName('CM', codeLang)\"\n                class=\"land\"\n                d=\"M511.92,457.07L511.57,456.92L509.91,457.28L508.2,456.9L506.87,457.09L502.31,457.02L502.72,454.82L501.62,452.98L500.34,452.5L499.77,451.25L499.05,450.85L499.09,450.08L499.81,448.1L501.14,445.4L501.95,445.37L503.62,443.73L504.69,443.69L506.26,444.84L508.19,443.89L508.45,442.73L509.08,441.59L509.51,440.17L511.01,439.01L511.58,437.04L512.17,436.41L512.57,434.94L513.31,433.13L515.67,430.93L515.82,429.98L516.13,429.47L515.02,428.33L515.11,427.43L515.9,427.26L517.01,429.09L517.2,430.98L517.1,432.87L518.62,435.44L517.06,435.41L516.27,435.61L514.99,435.33L514.38,436.66L516.03,438.31L517.25,438.79L517.65,439.96L518.53,441.89L518.09,442.66L516.68,445.5L516.01,446.01L515.79,448.18L516.07,449.36L515.85,450.19L517.17,451.65L517.41,452.65L518.45,454.09L519.73,454.99L519.85,456.26L520.15,457.07L519.95,458.57L517.72,457.91L515.45,457.18z\"\n            />\n            <path\n                id=\"CN\"\n                :title=\"countries.getName('CN', codeLang)\"\n                class=\"land\"\n                d=\"M784.63,410.41l-2.42,1.41l-2.3,-0.91l-0.08,-2.53l1.38,-1.34l3.06,-0.83l1.61,0.07l0.63,1.13l-1.23,1.3L784.63,410.41zM833.19,302.89l4.88,1.38l3.32,3.03l1.13,3.95l4.26,0l2.43,-1.65l4.63,-1.24l-1.47,3.76l-1.09,1.51l-0.96,4.46l-1.89,3.89l-3.4,-0.7l-2.41,1.4l0.74,3.36l-0.4,4.55l-1.43,0.1l0.02,1.93l-1.81,-2.24l-1.11,2.13l-4.33,1.62l0.44,1.97l-2.42,-0.14l-1.33,-1.17l-1.93,2.64l-3.09,1.98l-2.28,2.35l-3.92,1.06l-2.06,1.69l-3.02,0.98l1.49,-1.67l-0.59,-1.41l2.22,-2.45l-1.48,-1.93l-2.44,1.3l-3.17,2.54l-1.73,2.34l-2.75,0.17l-1.43,1.68l1.48,2.41l2.29,0.58l0.09,1.58l2.22,1.02l3.14,-2.51l2.49,1.37l1.81,0.09l0.46,1.84l-3.97,0.97l-1.31,1.87l-2.73,1.73l-1.44,2.39l3.02,1.86l1.1,3.31l1.71,3.05l1.9,2.53l-0.05,2.43l-1.76,0.89l0.67,1.73l1.65,1l-0.43,2.61l-0.71,2.52l-1.57,0.28l-2.05,3.41l-2.27,4.09l-2.6,3.68l-3.86,2.82l-3.9,2.55l-3.16,0.35l-1.71,1.34l-0.97,-0.98l-1.59,1.5l-3.92,1.5l-2.97,0.46l-0.96,3.15l-1.55,0.17l-0.74,-2.16l0.66,-1.16l-3.76,-0.96l-1.33,0.49l-2.82,-0.78l-1.33,-1.22l0.44,-1.74l-2.56,-0.55l-1.35,-1.14l-2.39,1.62l-2.73,0.35l-2.24,-0.02l-1.5,0.74l-1.45,0.44l0.42,3.43l-1.5,-0.08l-0.25,-0.7l-0.08,-1.24l-2.06,0.87l-1.21,-0.55l-2.08,-1.13l0.82,-2.51l-1.78,-0.59l-0.67,-2.8l-2.96,0.51l0.34,-3.63l2.66,-2.58l0.11,-2.57l-0.08,-2.4l-1.22,-0.75l-0.94,-1.86l-1.64,0.24l-3.02,-0.47l0.95,-1.33l-1.31,-1.99l-2,1.35L740.4,378l-3.23,2.03l-2.55,2.36l-2.26,0.39l-1.23,-0.85l-1.48,-0.08l-2,-0.73l-1.51,0.8l-1.85,2.34l-0.24,-2.48l-1.71,0.66l-3.27,-0.31l-3.17,-0.73l-2.28,-1.39l-2.18,-0.63l-0.94,-1.53l-1.58,-0.46l-2.83,-2.09l-2.25,-0.99l-1.16,0.77l-3.9,-2.26l-2.75,-2.07l-0.79,-3.63l2.01,0.44l0.09,-1.69l-1.12,-1.71l0.28,-2.74l-3.01,-3.99l-4.61,-1.39l-0.83,-2.66l-2.07,-1.63l-0.5,-1.01l-0.42,-2.01l0.1,-1.38l-1.7,-0.81l-0.92,0.36l-0.71,-3.32l0.8,-0.83l-0.39,-0.85l2.68,-1.73l1.94,-0.72l2.97,0.49l1.06,-2.35l3.6,-0.44l1,-1.48l4.42,-2.03l0.39,-0.85l-0.22,-2.17l1.92,-1l-2.52,-6.75l5.55,-1.58l1.44,-0.89l2.02,-7.26l5.56,1.35l1.56,-1.86l0.13,-4.19l2.33,-0.39l2.13,-2.83l1.1,-0.35l0.74,2.97l2.36,2.23l4,1.57l1.93,3.32l-1.08,4.73l1.01,1.73l3.33,0.68l3.78,0.55l3.39,2.45l1.73,0.43l1.28,3.57l1.65,2.27l3.09,-0.09l5.79,0.85l3.73,-0.53l2.77,0.57l4.15,2.29l3.39,0l1.24,1.16l3.26,-2.01l4.53,-1.31l4.2,-0.14l3.28,-1.34l2.01,-2.05l1.96,-1.3l-0.45,-1.28l-0.9,-1.5l1.47,-2.54l1.58,0.36l2.88,0.8l2.79,-2.1l4.28,-1.55l2.05,-2.66l1.97,-1.16l4.07,-0.54l2.21,0.46l0.31,-1.45l-2.54,-2.89l-2.25,-1.33l-2.16,1.54l-2.77,-0.65l-1.59,0.53l-0.72,-1.71l1.98,-4.23l1.37,-3.25l3.37,1.63l3.95,-2.74l-0.03,-1.93l2.53,-4.73l1.56,-1.45l-0.04,-2.52l-1.54,-1.1l2.32,-2.31l3.48,-0.84l3.72,-0.13l4.2,1.39l2.46,1.71l1.73,4.61l1.05,1.94l0.98,2.73L833.19,302.89z\"\n            />\n            <path\n                id=\"CO\"\n                :title=\"countries.getName('CO', codeLang)\"\n                class=\"land\"\n                d=\"M263.92,463.81L262.72,463.15L261.34,462.23L260.54,462.67L258.16,462.28L257.48,461.08L256.96,461.13L254.15,459.54L253.77,458.67L254.82,458.46L254.7,457.07L255.35,456.06L256.74,455.87L257.93,454.12L259,452.66L257.96,451.99L258.49,450.37L257.86,447.81L258.46,447.08L258.02,444.71L256.88,443.21L257.24,441.85L258.15,442.05L258.68,441.21L258.03,439.56L258.37,439.14L259.81,439.23L261.92,437.26L263.07,436.96L263.1,436.03L263.62,433.64L265.23,432.32L266.99,432.27L267.21,431.68L269.41,431.91L271.62,430.48L272.71,429.84L274.06,428.47L275.06,428.64L275.79,429.39L275.25,430.35L273.45,430.83L272.74,432.25L271.65,433.06L270.84,434.12L270.49,436.13L269.72,437.79L271.16,437.97L271.52,439.27L272.14,439.89L272.36,441.02L272.03,442.06L272.13,442.65L272.82,442.88L273.49,443.86L277.09,443.59L278.72,443.95L280.7,446.36L281.83,446.06L283.85,446.21L285.45,445.89L286.44,446.38L285.93,447.88L285.31,448.82L285.09,450.83L285.65,452.68L286.45,453.51L286.54,454.14L285.12,455.53L286.14,456.14L286.89,457.12L287.74,459.89L287.21,460.24L286.67,458.59L285.89,457.71L284.96,458.67L279.5,458.61L279.53,460.35L281.17,460.64L281.08,461.71L280.52,461.42L278.94,461.88L278.93,463.9L280.17,464.92L280.61,466.51L280.54,467.72L279.28,475.37L277.88,473.88L277.04,473.82L278.85,470.98L276.7,469.67L275.02,469.91L274.01,469.43L272.46,470.17L270.37,469.82L268.72,466.9L267.42,466.18L266.53,464.86L264.67,463.54z\"\n            />\n            <path\n                id=\"CR\"\n                :title=\"countries.getName('CR', codeLang)\"\n                class=\"land\"\n                d=\"M242.63,440.4L241.11,439.77L240.54,439.18L240.86,438.69L240.76,438.07L239.98,437.39L238.88,436.84L237.91,436.48L237.73,435.65L236.99,435.14L237.17,435.97L236.61,436.64L235.97,435.86L235.07,435.58L234.69,435.01L234.71,434.15L235.08,433.25L234.29,432.85L234.93,432.31L235.35,431.94L237.2,432.69L237.84,432.32L238.73,432.56L239.2,433.14L240.02,433.33L240.69,432.73L241.41,434.27L242.49,435.41L243.81,436.62L242.72,436.87L242.74,438L243.32,438.42L242.9,438.76L243.01,439.27L242.78,439.84z\"\n            />\n            <path\n                id=\"CU\"\n                :title=\"countries.getName('CU', codeLang)\"\n                class=\"land\"\n                d=\"M244.58,396.94L247.01,397.16L249.21,397.19L251.84,398.22L252.96,399.33L255.58,398.99L256.57,399.69L258.95,401.56L260.69,402.91L261.61,402.87L263.29,403.48L263.08,404.32L265.15,404.44L267.27,405.66L266.94,406.35L265.07,406.73L263.18,406.88L261.25,406.64L257.24,406.93L259.12,405.27L257.98,404.5L256.17,404.3L255.2,403.44L254.53,401.74L252.95,401.85L250.33,401.05L249.49,400.42L245.84,399.95L244.86,399.36L245.91,398.61L243.16,398.46L241.15,400.02L239.98,400.06L239.58,400.8L238.2,401.13L237,400.84L238.48,399.91L239.08,398.82L240.35,398.15L241.78,397.56L243.91,397.27z\"\n            />\n            <path\n                id=\"CY\"\n                :title=\"countries.getName('CY', codeLang)\"\n                class=\"land\"\n                d=\"M570.31,358.29L572.2,356.83L569.65,357.85L567.63,357.8L567.23,358.63L567.03,358.65L565.7,358.77L566.35,360.14L567.72,360.58L570.6,359.2L570.51,358.93z\"\n            />\n            <path\n                id=\"CZ\"\n                :title=\"countries.getName('CZ', codeLang)\"\n                class=\"land\"\n                d=\"M522.81,307.86L521.51,307.06L520.2,307.28L518.02,305.98L517.03,306.3L515.46,308.04L513.37,306.67L511.79,304.84L510.36,303.8L510.06,301.98L509.57,300.68L511.61,299.73L512.65,298.63L514.66,297.77L515.37,296.93L516.11,297.44L517.36,296.97L518.69,298.4L520.78,298.79L520.61,300L522.13,300.9L522.55,299.77L524.47,300.26L524.74,301.63L526.82,301.89L528.11,304.02L527.28,304.03L526.84,304.8L526.2,304.99L526.02,305.96L525.48,306.17L525.4,306.56L524.45,307L523.2,306.93z\"\n            />\n            <path\n                id=\"DE\"\n                :title=\"countries.getName('DE', codeLang)\"\n                class=\"land\"\n                d=\"M503.07,278.92L503.12,280.8L505.96,281.92L505.93,283.62L508.78,282.72L510.35,281.41L513.52,283.3L514.84,284.81L515.5,287.2L514.72,288.45L515.73,290.1L516.43,292.55L516.21,294.11L517.36,296.97L516.11,297.44L515.37,296.93L514.66,297.77L512.65,298.63L511.61,299.73L509.57,300.68L510.06,301.98L510.36,303.8L511.79,304.84L513.37,306.67L512.39,308.62L511.38,309.16L511.78,311.88L511.51,312.58L510.64,311.73L509.3,311.61L507.29,312.35L504.82,312.17L504.42,313.26L503,312.12L502.15,312.34L499.15,311.08L498.57,311.98L496.19,311.95L496.54,308.97L497.96,306.07L493.92,305.29L492.6,304.16L492.76,302.27L492.2,301.29L492.52,298.32L492.04,293.63L493.73,293.63L494.44,291.92L495.14,287.69L494.61,286.11L495.16,285.11L497.5,284.85L498.02,285.89L499.93,283.56L499.29,281.77L499.16,279.02L501.28,279.66z\"\n            />\n            <path\n                id=\"DJ\"\n                :title=\"countries.getName('DJ', codeLang)\"\n                class=\"land\"\n                d=\"M596.05,427.72L596.71,428.6L596.62,429.79L595.02,430.47L596.23,431.24L595.19,432.76L594.57,432.26L593.9,432.46L592.33,432.41L592.28,431.55L592.07,430.76L593.01,429.43L594,428.17L595.2,428.42z\"\n            />\n            <path\n                id=\"DK\"\n                :title=\"countries.getName('DK', codeLang)\"\n                class=\"land\"\n                d=\"M510.83,275.84l-1.68,3.97l-2.93,-2.76l-0.39,-2.05l4.11,-1.66L510.83,275.84zM505.85,271.59l-0.69,1.9l-0.83,-0.55l-2.02,3.59l0.76,2.39l-1.79,0.74l-2.12,-0.64l-1.14,-2.72l-0.08,-5.12l0.47,-1.38l0.8,-1.54l2.47,-0.32l0.98,-1.43l2.26,-1.47l-0.1,2.68l-0.83,1.68l0.34,1.43L505.85,271.59z\"\n            />\n            <path\n                id=\"DO\"\n                :title=\"countries.getName('DO', codeLang)\"\n                class=\"land\"\n                d=\"M274.18,407.35L274.53,406.84L276.72,406.86L278.38,407.62L279.12,407.54L279.63,408.59L281.16,408.53L281.07,409.41L282.32,409.52L283.7,410.6L282.66,411.8L281.32,411.16L280.04,411.28L279.12,411.14L278.61,411.68L277.53,411.86L277.11,411.14L276.18,411.57L275.06,413.57L274.34,413.11L274.19,412.27L274.25,411.47L273.53,410.59L274.21,410.09L274.43,408.96z\"\n            />\n            <path\n                id=\"DZ\"\n                :title=\"countries.getName('DZ', codeLang)\"\n                class=\"land\"\n                d=\"M508.9,396.08L499.29,401.83L491.17,407.68L487.22,409L484.11,409.29L484.08,407.41L482.78,406.93L481.03,406.08L480.37,404.69L470.91,398.14L461.45,391.49L450.9,383.96L450.96,383.35L450.96,383.14L450.93,379.39L455.46,377.03L458.26,376.54L460.55,375.68L461.63,374.06L464.91,372.77L465.03,370.36L466.65,370.07L467.92,368.86L471.59,368.3L472.1,367.02L471.36,366.31L470.39,362.78L470.23,360.73L469.17,358.55L471.86,356.68L474.9,356.08L476.67,354.65L479.37,353.6L484.12,352.98L488.76,352.69L490.17,353.21L492.81,351.84L495.81,351.81L496.95,352.62L498.86,352.41L498.29,354.2L498.74,357.48L498.08,360.3L496.35,362.18L496.6,364.71L498.89,366.69L498.92,367.5L500.64,368.83L501.84,374.69L502.75,377.53L502.9,379.01L502.41,381.6L502.61,383.04L502.25,384.76L502.5,386.73L501.38,388.02L503.04,390.28L503.15,391.6L504.14,393.31L505.45,392.75L507.67,394.17z\"\n            />\n            <path\n                id=\"EC\"\n                :title=\"countries.getName('EC', codeLang)\"\n                class=\"land\"\n                d=\"M250.1,472.87L251.59,470.79L250.98,469.57L249.91,470.87L248.23,469.64L248.8,468.86L248.33,466.33L249.31,465.91L249.83,464.18L250.89,462.38L250.69,461.25L252.23,460.65L254.15,459.54L256.96,461.13L257.48,461.08L258.16,462.28L260.54,462.67L261.34,462.23L262.72,463.15L263.92,463.81L264.31,465.92L263.44,467.73L260.38,470.65L257.01,471.75L255.29,474.18L254.76,476.06L253.17,477.21L252,475.8L250.86,475.5L249.7,475.72L249.63,474.7L250.43,474.04z\"\n            />\n            <path\n                id=\"EE\"\n                :title=\"countries.getName('EE', codeLang)\"\n                class=\"land\"\n                d=\"M543.42,264.71L543.75,261.59L542.72,262.26L540.94,260.36L540.69,257.25L544.24,255.72L547.77,254.91L550.81,255.83L553.71,255.66L554.13,256.62L552.14,259.76L552.97,264.72L551.77,266.38L549.45,266.37L547.04,264.43L545.81,263.78z\"\n            />\n            <path\n                id=\"EG\"\n                :title=\"countries.getName('EG', codeLang)\"\n                class=\"land\"\n                d=\"M573.17,377.28L572.38,378.57L571.78,380.97L571.02,382.61L570.36,383.17L569.43,382.15L568.16,380.73L566.16,376.16L565.88,376.45L567.04,379.82L568.76,383L570.88,387.88L571.91,389.56L572.81,391.3L575.33,394.7L574.77,395.23L574.86,397.2L578.13,399.91L578.62,400.53L567.5,400.53L556.62,400.53L545.35,400.53L545.35,389.3L545.35,378.12L544.51,375.54L545.23,373.54L544.8,372.15L545.81,370.58L549.54,370.53L552.24,371.39L555.02,372.36L556.32,372.86L558.48,371.83L559.63,370.9L562.11,370.63L564.1,371.04L564.87,372.66L565.52,371.59L567.76,372.36L569.95,372.55L571.33,371.73z\"\n            />\n            <path\n                id=\"EH\"\n                :title=\"countries.getName('EH', codeLang)\"\n                class=\"land\"\n                d=\"M438.57,383.06L442.19,383.07L450.94,383.1L450.94,383.1L450.94,383.1L442.19,383.07L438.57,383.06L438.46,383.15L438.41,383.19L436.63,386.39L434.77,387.53L433.75,389.44L433.69,391.09L432.94,392.88L432,393.37L430.44,395.31L429.48,397.46L429.66,398.48L428.74,400.05L427.66,400.87L427.53,402.26L427.41,403.53L428.02,402.53L439,402.55L438.47,398.2L439.16,396.65L441.78,396.38L441.69,388.52L450.9,388.69L450.9,383.96L450.96,383.35L450.96,383.14z\"\n            />\n            <path\n                id=\"ER\"\n                :title=\"countries.getName('ER', codeLang)\"\n                class=\"land\"\n                d=\"M594,428.17L593.04,427.24L591.89,425.57L590.65,424.65L589.92,423.65L587.48,422.5L585.56,422.47L584.88,421.86L583.24,422.54L581.54,421.23L580.66,423.38L577.4,422.78L577.1,421.63L578.31,417.38L578.58,415.45L579.46,414.55L581.53,414.07L582.95,412.4L584.58,415.78L585.35,418.45L586.89,419.86L590.71,422.58L592.27,424.22L593.79,425.88L594.67,426.86L596.05,427.72L595.2,428.42z\"\n            />\n            <path\n                id=\"ES\"\n                :title=\"countries.getName('ES', codeLang)\"\n                class=\"land\"\n                d=\"M449.92,334.56L450.06,331.88L448.92,330.22L452.88,327.45L456.31,328.15L460.08,328.12L463.06,328.78L465.39,328.58L469.92,328.7L471.04,330.19L476.2,331.92L477.22,331.1L480.38,332.82L483.63,332.33L483.78,334.52L481.12,337.01L477.53,337.79L477.28,339.03L475.55,341.06L474.47,344.02L475.56,346.07L473.94,347.67L473.34,349.97L471.22,350.67L469.23,353.36L465.68,353.41L463,353.35L461.25,354.57L460.18,355.88L458.8,355.59L457.77,354.42L456.97,352.42L454.35,351.88L454.12,350.72L455.16,349.4L455.54,348.44L454.58,347.38L455.35,345.03L454.23,342.86L455.44,342.56L455.55,340.84L456.01,340.31L456.04,337.43L457.34,336.43L456.56,334.55L454.92,334.42L454.44,334.89L452.79,334.9L452.08,333.06L450.94,333.61z\"\n            />\n            <path\n                id=\"ET\"\n                :title=\"countries.getName('ET', codeLang)\"\n                class=\"land\"\n                d=\"M581.54,421.23L583.24,422.54L584.88,421.86L585.56,422.47L587.48,422.5L589.92,423.65L590.65,424.65L591.89,425.57L593.04,427.24L594,428.17L593.01,429.43L592.07,430.76L592.28,431.55L592.33,432.41L593.9,432.46L594.57,432.26L595.19,432.76L594.58,433.77L595.62,435.33L596.65,436.69L597.72,437.7L606.89,441.04L609.25,441.02L601.32,449.44L597.67,449.56L595.17,451.53L593.38,451.58L592.61,452.46L590.69,452.46L589.56,451.52L587,452.69L586.17,453.85L584.3,453.63L583.68,453.31L583.02,453.38L582.14,453.36L578.59,450.98L576.64,450.98L575.68,450.07L575.68,448.5L574.22,448.03L572.57,444.98L571.29,444.33L570.79,443.21L569.37,441.84L567.65,441.64L568.61,440.03L570.09,439.96L570.51,439.1L570.48,436.57L571.31,433.61L572.63,432.81L572.92,431.65L574.12,429.48L575.81,428.06L576.95,425.25L577.4,422.78L580.66,423.38z\"\n            />\n            <path\n                id=\"FK\"\n                :title=\"countries.getName('FK', codeLang)\"\n                class=\"land\"\n                d=\"M303.66,633.13L307.02,630.44L309.41,631.56L311.09,629.77L313.33,631.78L312.49,633.36L308.7,634.72L307.44,633.13L305.06,635.18z\"\n            />\n            <path\n                id=\"FI\"\n                :title=\"countries.getName('FI', codeLang)\"\n                class=\"land\"\n                d=\"M555.42,193.1L555.01,198.5L559.31,203.49L556.72,208.97L559.98,216.93L558.09,222.69L560.62,227.55L559.47,231.69L563.62,235.95L562.56,239.05L559.96,242.5L553.96,249.91L548.87,250.36L543.94,252.43L539.38,253.61L537.75,250.54L535.04,248.67L535.66,242.95L534.3,237.54L535.64,233.96L538.18,230.02L544.59,223L546.47,221.61L546.17,218.77L542.27,215.55L541.33,212.85L541.25,201.73L536.88,196.58L533.14,192.77L534.82,190.69L537.94,194.84L541.6,194.45L544.61,196.32L547.28,192.88L548.66,187.03L553.01,184.25L556.61,187.51z\"\n            />\n            <path\n                id=\"FJ\"\n                :title=\"countries.getName('FJ', codeLang)\"\n                class=\"land\"\n                d=\"M980.53,508.61l-0.35,1.4l-0.23,0.16l-1.78,0.72l-1.79,0.61l-0.36,-1.09l1.4,-0.6l0.89,-0.16l1.64,-0.91L980.53,508.61zM974.69,512.92l-1.27,-0.36l-1.08,1l0.27,1.29l1.55,0.36l1.74,-0.4l0.46,-1.53l-0.96,-0.84L974.69,512.92z\"\n            />\n            <path\n                id=\"FR\"\n                :title=\"countries.getName('FR', codeLang)\"\n                class=\"land\"\n                d=\"M502.06,333.54l-0.93,2.89l-1.27,-0.76l-0.65,-2.53l0.57,-1.41l1.81,-1.45L502.06,333.54zM485.31,300.19l1.96,2.06l1.44,-0.34l2.45,1.97l0.63,0.37l0.81,-0.09l1.32,1.12l4.04,0.79l-1.42,2.9l-0.36,2.98l-0.77,0.71l-1.28,-0.38l0.09,1.05l-2.05,2.3l-0.04,1.84l1.34,-0.63l0.96,1.77l-0.12,1.13l0.83,1.5l-0.97,1.21l0.72,3.04l1.52,0.49l-0.32,1.68l-2.54,2.17l-5.53,-1.04l-4.08,1.24l-0.32,2.29l-3.25,0.49l-3.15,-1.72l-1.02,0.82l-5.16,-1.73l-1.12,-1.49l1.45,-2.32l0.53,-7.88l-2.89,-4.26l-2.07,-2.09l-4.29,-1.6l-0.28,-3.07l3.64,-0.92l4.71,1.09l-0.89,-4.84l2.65,1.85l6.53,-3.37l0.84,-3.61l2.45,-0.9l0.41,1.56l1.3,0.07L485.31,300.19z\"\n            />\n            <path\n                id=\"GA\"\n                :title=\"countries.getName('GA', codeLang)\"\n                class=\"land\"\n                d=\"M506.36,474.48L503.48,471.66L501.62,469.36L499.92,466.48L500.01,465.56L500.62,464.66L501.3,462.64L501.87,460.57L502.82,460.41L506.89,460.44L506.87,457.09L508.2,456.9L509.91,457.28L511.57,456.92L511.92,457.07L511.71,458.29L512.5,459.72L514.58,459.5L515.28,460.05L514.07,463.28L515.39,464.92L515.7,467.1L515.35,468.95L514.49,470.27L512.01,470.15L510.51,468.81L510.29,470.05L508.4,470.39L507.44,471.09L508.49,472.94z\"\n            />\n            <path\n                id=\"GB\"\n                :title=\"countries.getName('GB', codeLang)\"\n                class=\"land\"\n                d=\"M459.38,281l-1.5,3.29l-2.12,-0.98l-1.73,0.07l0.58,-2.57l-0.58,-2.6l2.35,-0.2L459.38,281zM466.83,260.24l-3,5.73l2.86,-0.72l3.07,0.03l-0.73,4.22l-2.52,4.53l2.9,0.32l0.22,0.52l2.5,5.79l1.92,0.77l1.73,5.41l0.8,1.84l3.4,0.88l-0.34,2.93l-1.43,1.33l1.12,2.33l-2.52,2.33l-3.75,-0.04l-4.77,1.21l-1.31,-0.87l-1.85,2.06l-2.59,-0.5l-1.97,1.67l-1.49,-0.87l4.11,-4.64l2.51,-0.97l-0.02,0l-4.38,-0.75l-0.79,-1.8l2.93,-1.41l-1.54,-2.48l0.53,-3.06l4.17,0.42l0,0l0.41,-2.74l-1.88,-2.95l-0.04,-0.07l-3.4,-0.85l-0.67,-1.32l1.02,-2.2l-0.92,-1.37l-1.51,2.34l-0.16,-4.8l-1.42,-2.59l1.02,-5.36l2.18,-4.31l2.24,0.42L466.83,260.24z\"\n            />\n            <path\n                id=\"GE\"\n                :title=\"countries.getName('GE', codeLang)\"\n                class=\"land\"\n                d=\"M591.76,335.85L592.18,334.25L591.48,331.68L589.86,330.27L588.31,329.83L587.28,328.66L587.62,328.2L589.99,328.86L594.12,329.48L597.94,331.31L598.43,332.02L600.13,331.42L602.75,332.22L603.6,333.77L605.37,334.64L604.64,335.15L606.02,337.17L605.64,337.6L604.13,337.38L602.04,336.32L601.35,336.92L597.45,337.5L594.75,335.68z\"\n            />\n            <path\n                id=\"GF\"\n                :title=\"countries.getName('GF', codeLang)\"\n                class=\"land\"\n                d=\"M327.89,456.41l-1.07,1.06l-1.34,0.2l-0.38,-0.78l-0.63,-0.12l-0.87,0.76l-1.22,-0.57l0.71,-1.19l0.24,-1.27l0.48,-1.2l-1.09,-1.65l-0.22,-1.91l1.46,-2.41l0.95,0.31l2.06,0.66l2.97,2.36l0.46,1.14l-1.66,2.55L327.89,456.41z\"\n            />\n            <path\n                id=\"GH\"\n                :title=\"countries.getName('GH', codeLang)\"\n                class=\"land\"\n                d=\"M478.23,446.84L473.83,448.48L472.27,449.44L469.74,450.25L467.24,449.46L467.37,448.35L466.16,445.94L466.89,442.77L468.07,440.41L467.33,436.4L466.94,434.27L467.01,432.66L471.88,432.53L473.12,432.74L474.02,432.28L475.32,432.5L475.11,433.39L476.28,434.85L476.28,436.9L476.55,439.12L477.25,440.15L476.63,442.68L476.85,444.08L477.6,445.86z\"\n            />\n            <path\n                id=\"GL\"\n                :title=\"countries.getName('GL', codeLang)\"\n                class=\"land\"\n                d=\"M344.13,23.91L353.55,10.3L363.39,11.37L366.96,2.42L376.87,0L399.27,3.15L416.81,21.74L411.63,30.04L400.9,30.97L385.81,33L387.22,36.64L397.15,34.4L405.59,41.31L411.04,35.19L413.37,42.34L410.29,53.31L417.43,46.38L431.04,38.83L439.45,42.64L441.02,50.76L429.59,63.42L428.01,67.32L419.05,70.18L425.54,70.97L422.26,82.48L420,92.07L420.09,107.33L423.46,115.67L419.08,116.18L414.47,120.06L419.64,126.36L420.3,135.98L417.3,137L420.93,146.15L414.71,146.9L417.96,151.04L417.04,154.55L413.09,156.06L409.18,156.09L412.69,162.57L412.73,166.7L407.18,162.87L405.74,165.36L409.52,167.65L413.2,173.13L414.26,180.08L409.26,181.7L407.1,178.44L403.63,173.46L404.59,179.33L401.34,183.74L408.72,184.09L412.59,184.54L405.07,191.57L397.45,197.7L389.25,200.31L386.16,200.35L383.26,203.22L379.36,210.85L373.33,215.74L371.39,216.03L367.65,217.7L363.63,219.29L361.22,223.41L361.18,227.97L359.77,232.13L355.19,237.08L356.32,241.79L355.06,246.64L353.63,252.2L349.68,252.54L345.54,247.91L339.93,247.88L337.21,244.7L335.34,238.9L330.48,231.22L329.06,227.07L328.68,221.18L324.79,214.91L325.8,209.74L323.93,207.21L326.7,198.56L330.92,195.71L332.03,192.45L332.62,186.19L329.41,189.05L327.89,190.24L325.37,191.38L321.93,188.77L321.74,183.22L322.84,178.74L325.44,178.62L331.16,180.87L326.34,175.44L323.83,172.43L321.04,173.67L318.7,171.48L321.83,162.98L320.13,159.45L317.9,152.71L314.53,141.8L310.96,137.63L310.99,133L303.46,126.31L297.51,125.46L290.02,125.93L283.18,126.79L279.92,123.04L275.05,115.38L282.41,111.41L288.06,110.73L276.06,107.37L269.74,101.93L270.13,96.59L280.74,89.72L291.01,82.56L292.09,76.92L284.53,71.16L286.97,64.52L296.68,52.19L300.76,50.21L299.59,41.64L306.23,36.4L314.85,33.19L323.47,33.01L326.53,39.31L333.97,27.99L340.66,35.77L344.59,37.36L350.42,43.77L343.75,33z\"\n            />\n            <path\n                id=\"GM\"\n                :title=\"countries.getName('GM', codeLang)\"\n                class=\"land\"\n                d=\"M428.03,426.43L428.39,425.16L431.44,425.07L432.08,424.4L432.97,424.35L434.07,425.06L434.94,425.07L435.87,424.59L436.43,425.41L435.22,426.06L434,426.01L432.8,425.4L431.76,426.06L431.26,426.09L430.58,426.49z\"\n            />\n            <path\n                id=\"GN\"\n                :title=\"countries.getName('GN', codeLang)\"\n                class=\"land\"\n                d=\"M451.59,441.91L450.8,441.84L450.23,442.97L449.43,442.96L448.89,442.36L449.07,441.23L447.9,439.51L447.17,439.82L446.57,439.89L445.8,440.05L445.83,439.02L445.38,438.28L445.47,437.46L444.86,436.27L444.08,435.26L441.84,435.26L441.19,435.79L440.41,435.85L439.93,436.46L439.61,437.25L438.11,438.49L436.88,436.82L435.79,435.71L435.07,435.35L434.37,434.78L434.06,433.53L433.65,432.91L432.83,432.44L434.08,431.06L434.93,431.11L435.66,430.63L436.28,430.63L436.72,430.25L436.48,429.31L436.79,429.01L436.84,428.04L438.19,428.07L440.21,428.77L440.83,428.7L441.04,428.39L442.56,428.61L442.97,428.45L443.13,429.5L443.58,429.49L444.31,429.11L444.77,429.21L445.55,429.93L446.75,430.16L447.52,429.54L448.43,429.16L449.1,428.76L449.66,428.84L450.28,429.46L450.62,430.25L451.77,431.44L451.19,432.17L451.08,433.09L451.68,432.81L452.03,433.15L451.88,433.99L452.74,434.81L452.18,435.02L451.95,435.99L452.6,437.15L453.29,439.41L452.25,439.75L451.98,440.14L452.2,440.68L452.04,441.91z\"\n            />\n            <path\n                id=\"GQ\"\n                :title=\"countries.getName('GQ', codeLang)\"\n                class=\"land\"\n                d=\"M501.87,460.57L501.34,460.15L502.31,457.02L506.87,457.09L506.89,460.44L502.82,460.41z\"\n            />\n            <path\n                id=\"GR\"\n                :title=\"countries.getName('GR', codeLang)\"\n                class=\"land\"\n                d=\"M541.7,356.71l1.53,1.16l2.18,-0.19l2.09,0.24l-0.07,0.6l1.53,-0.41l-0.35,1.01l-4.04,0.29l0.03,-0.56l-3.42,-0.67L541.7,356.71zM549.85,335.75l-0.87,2.33l-0.67,0.41l-1.71,-0.1l-1.46,-0.35l-3.4,0.96l1.94,2.06l-1.42,0.59l-1.56,0l-1.48,-1.88l-0.53,0.8l0.63,2.18l1.4,1.7l-1.06,0.79l1.56,1.65l1.39,1.03l0.04,2l-1.36,-1.15l-1.24,0.21l0.83,1.8l-0.92,0.19l-1,-0.69l1.2,3.95l-0.58,0l-0.45,-1.25l-0.57,-0.02l-0.26,1.32l-0.45,-0.3l0.1,-0.74l-0.56,-1.04h-0.64l0.12,0.84l-0.25,0.27l-0.62,-0.54l-0.38,-1.01l0.52,-0.57l-0.36,-0.74l-0.41,-0.38l-0.42,-0.09l-0.49,-0.94l0.58,-0.52l0.36,-0.48l0.56,0.1l0.25,-0.41l0.59,-0.16l0.68,0.46l0.55,0.17l0.39,-0.62l-0.94,-0.08l-0.56,-0.19l-1.25,0.28l-1.22,0.05l-1.09,-1.64l-0.18,-0.25l0.17,-0.64l-1.42,-1.15l-0.19,-1.03l1.3,-1.76l0.17,-1.19l0.91,-0.53l0.06,-0.97l1.83,-0.33l1.07,-0.81l1.52,0.07l0.46,-0.65l0.53,-0.12l2.07,0.11l2.25,-1.02l1.98,1.3l2.55,-0.35l0.03,-1.86L549.85,335.75z\"\n            />\n            <path\n                id=\"GT\"\n                :title=\"countries.getName('GT', codeLang)\"\n                class=\"land\"\n                d=\"M222.64,424.75L221.2,424.25L219.45,424.2L218.17,423.63L216.66,422.45L216.73,421.61L217.05,420.93L216.66,420.39L218.01,418.03L221.6,418.02L221.68,417.04L221.22,416.86L220.91,416.23L219.87,415.56L218.83,414.58L220.1,414.58L220.1,412.93L222.72,412.93L225.31,412.96L225.29,415.27L225.07,418.55L225.9,418.55L226.82,419.08L227.06,418.64L227.88,419.01L226.61,420.12L225.28,420.93L225.08,421.48L225.3,422.04L224.72,422.78L224.06,422.95L224.21,423.29L223.69,423.61L222.73,424.33z\"\n            />\n            <path\n                id=\"GW\"\n                :title=\"countries.getName('GW', codeLang)\"\n                class=\"land\"\n                d=\"M432.83,432.44L431.33,431.25L430.15,431.07L429.51,430.26L429.52,429.83L428.67,429.23L428.49,428.62L429.98,428.15L430.91,428.24L431.66,427.92L436.84,428.04L436.79,429.01L436.48,429.31L436.72,430.25L436.28,430.63L435.66,430.63L434.93,431.11L434.08,431.06z\"\n            />\n            <path\n                id=\"GY\"\n                :title=\"countries.getName('GY', codeLang)\"\n                class=\"land\"\n                d=\"M307.7,440L309.54,441.03L311.28,442.86L311.35,444.31L312.41,444.38L313.91,445.74L315.02,446.72L314.57,449.24L312.87,449.97L313.02,450.62L312.5,452.07L313.75,454.09L314.64,454.1L315.01,455.67L316.72,458.09L316.04,458.19L314.49,457.96L313.58,458.7L312.31,459.19L311.43,459.31L311.12,459.85L309.74,459.71L308.01,458.41L307.81,457.12L307.09,455.71L307.54,453.33L308.32,452.35L307.67,451.05L306.71,450.63L307.08,449.4L306.42,448.76L304.96,448.88L303.07,446.76L303.83,445.99L303.77,444.69L305.5,444.24L306.19,443.72L305.23,442.68L305.48,441.65z\"\n            />\n            <path\n                id=\"HN\"\n                :title=\"countries.getName('HN', codeLang)\"\n                class=\"land\"\n                d=\"M230.43,426.9L229.95,426.01L229.09,425.76L229.29,424.61L228.91,424.3L228.33,424.1L227.1,424.44L227,424.05L226.15,423.59L225.55,423.02L224.72,422.78L225.3,422.04L225.08,421.48L225.28,420.93L226.61,420.12L227.88,419.01L228.17,419.13L228.79,418.62L229.59,418.58L229.85,418.81L230.29,418.67L231.59,418.93L232.89,418.85L233.79,418.53L234.12,418.21L235.01,418.36L235.68,418.56L236.41,418.49L236.97,418.24L238.25,418.64L238.7,418.7L239.55,419.24L240.36,419.89L241.38,420.33L242.12,421.13L241.16,421.07L240.77,421.46L239.8,421.84L239.09,421.84L238.47,422.21L237.91,422.08L237.43,421.64L237.14,421.72L236.78,422.41L236.51,422.38L236.46,422.98L235.48,423.77L234.97,424.11L234.68,424.47L233.85,423.89L233.25,424.65L232.66,424.63L232,424.7L232.06,426.11L231.65,426.13L231.3,426.79z\"\n            />\n            <path\n                id=\"HR\"\n                :title=\"countries.getName('HR', codeLang)\"\n                class=\"land\"\n                d=\"M528.05,318.93L528.73,320.48L529.62,321.62L528.54,323.11L527.27,322.23L525.33,322.29L522.92,321.63L521.61,321.72L521.01,322.54L520,321.63L519.41,323.27L520.79,325.1L521.39,326.31L522.68,327.76L523.75,328.61L524.81,330.22L527.29,331.66L526.98,332.3L524.35,330.9L522.72,329.52L520.16,328.38L517.8,325.53L518.37,325.23L517.09,323.59L517.03,322.25L515.23,321.63L514.37,323.34L513.54,322.01L513.61,320.63L513.71,320.57L515.66,320.71L516.18,320.03L517.13,320.68L518.23,320.76L518.22,319.64L519.19,319.23L519.47,317.61L521.7,316.53L522.59,317.03L524.69,318.76L527,319.53z\"\n            />\n            <path\n                id=\"HT\"\n                :title=\"countries.getName('HT', codeLang)\"\n                class=\"land\"\n                d=\"M270.04,406.75L271.75,406.88L274.18,407.35L274.43,408.96L274.21,410.09L273.53,410.59L274.25,411.47L274.19,412.27L272.33,411.77L271.01,411.97L269.3,411.76L267.99,412.31L266.48,411.39L266.73,410.44L269.31,410.85L271.43,411.09L272.44,410.43L271.16,409.16L271.18,408.03L269.41,407.57z\"\n            />\n            <path\n                id=\"HU\"\n                :title=\"countries.getName('HU', codeLang)\"\n                class=\"land\"\n                d=\"M520.68,315.11L521.61,312.46L521.07,311.57L522.65,311.56L522.86,309.85L524.29,310.92L525.32,311.38L527.68,310.87L527.9,310.03L529.02,309.9L530.38,309.25L530.68,309.52L532,309L532.66,308L533.58,307.75L536.58,309.03L537.18,308.6L538.73,309.74L538.93,310.86L537.22,311.73L535.89,314.53L534.2,317.29L531.95,318.05L530.2,317.88L528.05,318.93L527,319.53L524.69,318.76L522.59,317.03L521.7,316.53L521.15,315.16z\"\n            />\n            <path\n                id=\"ID\"\n                :title=\"countries.getName('ID', codeLang)\"\n                class=\"land\"\n                d=\"M813.72,492.06l-1.18,0.05l-3.72,-1.98l2.61,-0.56l1.47,0.86l0.98,0.86L813.72,492.06zM824.15,491.78l-2.4,0.62l-0.34,-0.34l0.25,-0.96l1.21,-1.72l2.77,-1.12l0.28,0.56l0.05,0.86L824.15,491.78zM805.83,486.01l1.01,0.75l1.73,-0.23l0.7,1.2l-3.24,0.57l-1.94,0.38l-1.51,-0.02l0.96,-1.62l1.54,-0.02L805.83,486.01zM819.86,486l-0.41,1.56l-4.21,0.8l-3.73,-0.35l-0.01,-1.03l2.23,-0.59l1.76,0.84l1.87,-0.21L819.86,486zM779.82,482.31l5.37,0.28l0.62,-1.16l5.2,1.35l1.02,1.82l4.21,0.51l3.44,1.67l-3.2,1.07l-3.08,-1.13l-2.54,0.08l-2.91,-0.21l-2.62,-0.51l-3.25,-1.07l-2.06,-0.28l-1.17,0.35l-5.11,-1.16l-0.49,-1.21l-2.57,-0.21l1.92,-2.68l3.4,0.17l2.26,1.09l1.16,0.21L779.82,482.31zM853,480.73l-1.44,1.91l-0.27,-2.11l0.5,-1.01l0.59,-0.95l0.64,0.82L853,480.73zM832.04,473.02l-1.05,0.93l-1.94,-0.51l-0.55,-1.2l2.84,-0.13L832.04,473.02zM841.08,472.01l1.02,2.13l-2.37,-1.15l-2.34,-0.23l-1.58,0.18l-1.94,-0.1l0.67,-1.53l3.46,-0.12L841.08,472.01zM851.37,466.59l0.78,4.51l2.9,1.67l2.34,-2.96l3.22,-1.68l2.49,0l2.4,0.97l2.08,1l3.01,0.53l0.05,9.1l0.05,9.16l-2.5,-2.31l-2.85,-0.57l-0.69,0.8l-3.55,0.09l1.19,-2.29l1.77,-0.78l-0.73,-3.05l-1.35,-2.35l-5.44,-2.37l-2.31,-0.23l-4.21,-2.58l-0.83,1.36l-1.08,0.25l-0.64,-1.02l-0.01,-1.21l-2.14,-1.37l3.02,-1l2,0.05l-0.24,-0.74l-4.1,-0.01l-1.11,-1.66l-2.5,-0.51l-1.19,-1.38l3.78,-0.67l1.44,-0.91l4.5,1.14L851.37,466.59zM826.41,459.43l-2.25,2.76l-2.11,0.54l-2.7,-0.54l-4.67,0.14l-2.45,0.4l-0.4,2.11l2.51,2.48l1.51,-1.26l5.23,-0.95l-0.23,1.28l-1.22,-0.4l-1.22,1.63l-2.47,1.08l2.65,3.57l-0.51,0.96l2.52,3.22l-0.02,1.84l-1.5,0.82l-1.1,-0.98l1.36,-2.29l-2.75,1.08l-0.7,-0.77l0.36,-1.08l-2.02,-1.64l0.21,-2.72l-1.87,0.85l0.24,3.25l0.11,4l-1.78,0.41l-1.2,-0.82l0.8,-2.57l-0.43,-2.69l-1.18,-0.02l-0.87,-1.91l1.16,-1.83l0.4,-2.21l1.41,-4.2l0.59,-1.15l2.38,-2.07l2.19,0.82l3.54,0.39l3.22,-0.12l2.77,-2.02L826.41,459.43zM836.08,460.23l-0.15,2.43l-1.45,-0.27l-0.43,1.69l1.16,1.47l-0.79,0.33l-1.13,-1.76l-0.83,-3.56l0.56,-2.23l0.93,-1.01l0.2,1.52l1.66,0.24L836.08,460.23zM805.76,458.29l3.14,2.58l-3.32,0.33l-0.94,1.9l0.12,2.52l-2.7,1.91L802,470.3l-1.08,4.27l-0.41,-0.99l-3.19,1.26l-1.11,-1.71l-2,-0.16l-1.4,-0.89l-3.33,1l-1.02,-1.35l-1.84,0.15l-2.31,-0.32l-0.43,-3.74l-1.4,-0.77l-1.35,-2.38l-0.39,-2.44l0.33,-2.58l1.67,-1.85l0.47,1.86l1.92,1.57l1.81,-0.57l1.79,0.2l1.63,-1.41l1.34,-0.24l2.65,0.78l2.29,-0.59l1.44,-3.88l1.08,-0.97l0.97,-3.17l3.22,0l2.43,0.47l-1.59,2.52l2.06,2.64L805.76,458.29zM771.95,479.71l-3.1,0.06l-2.36,-2.34l-3.6,-2.28l-1.2,-1.69l-2.12,-2.27l-1.39,-2.09l-2.13,-3.9l-2.46,-2.32l-0.82,-2.39l-1.03,-2.17l-2.53,-1.75l-1.47,-2.39l-2.11,-1.56l-2.92,-3.08l-0.25,-1.42l1.81,0.11l4.34,0.54l2.48,2.73l2.17,1.89l1.55,1.16l2.66,3l2.85,0.04l2.36,1.91l1.62,2.33l2.13,1.27l-1.12,2.27l1.61,0.97l1.01,0.07l0.48,1.94l0.98,1.56l2.06,0.25l1.36,1.76l-0.7,3.47L771.95,479.71z\"\n            />\n            <path\n                id=\"IE\"\n                :title=\"countries.getName('IE', codeLang)\"\n                class=\"land\"\n                d=\"M457.88,284.29L458.34,287.65L456.22,291.77L451.25,294.45L447.28,293.77L449.55,288.99L448.09,284.22L451.9,280.47L454.02,278.2L454.6,280.8L454.02,283.37L455.76,283.31z\"\n            />\n            <path\n                id=\"IL\"\n                :title=\"countries.getName('IL', codeLang)\"\n                class=\"land\"\n                d=\"M575.41,366.82L574.92,367.87L573.9,367.41L573.32,369.61L574.02,369.97L573.31,370.43L573.18,371.29L574.5,370.84L574.57,372.11L573.17,377.28L571.33,371.73L572.14,370.65L571.95,370.46L572.69,368.93L573.26,366.43L573.66,365.59L573.74,365.56L574.68,365.56L574.94,364.98L575.69,364.93L575.73,366.3L575.35,366.8z\"\n            />\n            <path\n                id=\"IN\"\n                :title=\"countries.getName('IN', codeLang)\"\n                class=\"land\"\n                d=\"M693.5,357.44L696.51,361.43L696.23,364.17L697.34,365.88L697.25,367.57L695.24,367.13L696.03,370.76L698.78,372.82L702.68,375.09L700.9,376.55L699.81,379.54L702.53,380.74L705.17,382.29L708.83,384.06L712.67,384.47L714.29,386.06L716.45,386.35L719.83,387.08L722.16,387.03L722.48,385.79L722.11,383.8L722.33,382.45L724.04,381.78L724.28,384.26L724.33,384.89L726.88,386.08L728.65,385.59L731.01,385.8L733.3,385.71L733.5,383.78L732.36,382.78L734.62,382.38L737.17,380.03L740.4,378L742.75,378.78L744.75,377.44L746.07,379.42L745.12,380.76L748.14,381.23L748.36,382.43L747.37,383.01L747.6,384.94L745.6,384.37L741.97,386.53L742.05,388.31L740.51,390.91L740.36,392.41L739.11,394.93L736.92,394.23L736.81,397.38L736.18,398.41L736.48,399.69L735.09,400.41L733.62,395.61L732.84,395.62L732.38,397.56L730.85,395.98L731.71,394.25L732.97,394.07L734.26,391.48L732.65,390.95L730.04,391L727.38,390.58L727.13,388.43L725.79,388.27L723.57,386.93L722.58,389.04L724.6,390.67L722.85,391.82L722.23,392.94L723.95,393.76L723.48,395.6L724.45,397.88L724.89,400.36L724.48,401.46L722.58,401.42L719.12,402.04L719.28,404.29L717.78,406.05L713.75,408.05L710.61,411.51L708.5,413.36L705.71,415.27L705.71,416.61L704.31,417.33L701.78,418.36L700.47,418.52L699.63,420.72L700.21,424.47L700.36,426.84L699.18,429.55L699.16,434.38L697.71,434.52L696.44,436.67L697.29,437.6L694.73,438.4L693.79,440.32L692.66,441.13L690.01,438.5L688.71,434.54L687.63,431.68L686.65,430.34L685.16,427.6L684.47,424.02L683.98,422.22L681.43,418.25L680.27,412.61L679.43,408.84L679.44,405.26L678.9,402.46L674.82,404.25L672.84,403.89L669.18,400.26L670.53,399.17L669.7,397.99L666.41,395.41L668.28,393.37L674.45,393.38L673.89,390.74L672.32,389.18L672,386.79L670.16,385.39L673.25,382.09L676.51,382.33L679.44,379.01L681.2,375.75L683.92,372.51L683.88,370.18L686.27,368.27L684,366.64L683.03,364.39L682.04,361.44L683.41,359.98L687.67,360.81L690.79,360.3z\"\n            />\n            <path\n                id=\"IQ\"\n                :title=\"countries.getName('IQ', codeLang)\"\n                class=\"land\"\n                d=\"M602.61,355.77L604.44,356.81L604.66,358.81L603.24,359.98L602.59,362.62L604.54,365.8L607.97,367.62L609.42,370.12L608.96,372.49L609.85,372.49L609.88,374.22L611.43,375.91L609.77,375.76L607.88,375.49L605.82,378.57L600.61,378.31L592.71,371.82L588.53,369.53L585.15,368.64L584.02,364.6L590.23,361.1L591.29,356.98L591.02,354.46L592.56,353.6L594,351.42L595.2,350.87L598.46,351.33L599.45,352.22L600.79,351.63z\"\n            />\n            <path\n                id=\"IR\"\n                :title=\"countries.getName('IR', codeLang)\"\n                class=\"land\"\n                d=\"M626.44,351.53L628.91,350.85L630.9,348.83L632.77,348.93L634,348.27L636,348.6L639.1,350.39L641.34,350.78L644.54,353.87L646.63,353.99L646.88,356.9L645.74,361.15L644.97,363.6L646.19,364.09L644.99,365.92L645.91,368.56L646.13,370.65L648.25,371.2L648.48,373.3L645.94,376.23L647.32,377.91L648.45,379.84L651.13,381.24L651.21,384.01L652.55,384.52L652.78,385.96L648.74,387.57L647.68,391.17L642.41,390.24L639.35,389.53L636.19,389.12L634.99,385.31L633.65,384.75L631.49,385.31L628.67,386.82L625.24,385.79L622.41,383.38L619.71,382.48L617.84,379.47L615.77,375.2L614.26,375.72L612.48,374.65L611.43,375.91L609.88,374.22L609.85,372.49L608.96,372.49L609.42,370.12L607.97,367.62L604.54,365.8L602.59,362.62L603.24,359.98L604.66,358.81L604.44,356.81L602.61,355.77L600.79,351.63L599.26,348.8L599.8,347.71L598.93,343.59L600.85,342.56L601.29,343.93L602.71,345.59L604.63,346.06L605.65,345.96L608.96,343.3L610.01,343.03L610.83,344.1L609.87,345.88L611.62,347.74L612.31,347.57L613.2,350.18L615.86,350.91L617.81,352.67L621.79,353.27L626.17,352.35z\"\n            />\n            <path\n                id=\"IS\"\n                :title=\"countries.getName('IS', codeLang)\"\n                class=\"land\"\n                d=\"M434.57,212.43L433.93,216.91L437.09,221.51L433.45,226.52L425.36,230.9L422.94,232.05L419.25,231.12L411.43,229.11L414.19,226.27L408.09,223.07L413.05,221.79L412.93,219.82L407.05,218.25L408.94,213.78L413.19,212.75L417.56,217.43L421.82,213.68L425.35,215.64L429.92,211.93z\"\n            />\n            <path\n                id=\"IT\"\n                :title=\"countries.getName('IT', codeLang)\"\n                class=\"land\"\n                d=\"M518.77,347.88l-1.01,2.78l0.42,1.09l-0.59,1.79l-2.14,-1.31l-1.43,-0.38l-3.91,-1.79l0.39,-1.82l3.28,0.32l2.86,-0.39L518.77,347.88zM501.08,337.06l1.68,2.62l-0.39,4.81l-1.27,-0.23l-1.14,1.2l-1.06,-0.95l-0.11,-4.38l-0.64,-2.1l1.54,0.19L501.08,337.06zM509.95,315.46l4.01,1.05l-0.3,1.99l0.67,1.71l-2.23,-0.58l-2.28,1.42l0.16,1.97l-0.34,1.12l0.92,1.99l2.63,1.95l1.41,3.17l3.12,3.05l2.2,-0.02l0.68,0.83l-0.79,0.74l2.51,1.35l2.06,1.12l2.4,1.92l0.29,0.68l-0.52,1.31l-1.56,-1.7l-2.44,-0.6l-1.18,2.36l2.03,1.34l-0.33,1.88l-1.17,0.21l-1.5,3.06l-1.17,0.27l0.01,-1.08l0.57,-1.91l0.61,-0.77l-1.09,-2.09l-0.86,-1.83l-1.16,-0.46l-0.83,-1.58l-1.8,-0.67l-1.21,-1.49l-2.07,-0.24l-2.19,-1.68l-2.56,-2.45l-1.91,-2.19l-0.87,-3.8l-1.4,-0.45l-2.28,-1.29l-1.29,0.53l-1.62,1.8l-1.17,0.28l0.32,-1.68l-1.52,-0.49l-0.72,-3.04l0.97,-1.21l-0.83,-1.5l0.12,-1.13l1.21,0.86l1.35,-0.19l1.57,-1.36l0.49,0.64l1.34,-0.13l0.61,-1.63l2.07,0.51l1.24,-0.68l0.22,-1.67l1.7,0.58l0.33,-0.78l2.77,-0.71L509.95,315.46z\"\n            />\n            <path\n                id=\"JM\"\n                :title=\"countries.getName('JM', codeLang)\"\n                class=\"land\"\n                d=\"M257.76,410.96L259.65,411.22L261.14,411.93L261.6,412.73L259.63,412.78L258.78,413.27L257.21,412.8L255.61,411.73L255.94,411.06L257.12,410.86z\"\n            />\n            <path\n                id=\"JO\"\n                :title=\"countries.getName('JO', codeLang)\"\n                class=\"land\"\n                d=\"M574.92,367.87L575.41,366.82L578.53,368.14L584.02,364.6L585.15,368.64L584.62,369.13L579,370.78L581.8,374.04L580.87,374.58L580.41,375.67L578.27,376.11L577.6,377.27L576.38,378.25L573.26,377.74L573.17,377.28L574.57,372.11L574.5,370.84L574.92,369.88z\"\n            />\n            <path\n                id=\"JP\"\n                :title=\"countries.getName('JP', codeLang)\"\n                class=\"land\"\n                d=\"M852.76,362.01l0.36,1.15l-1.58,2.03l-1.15,-1.07l-1.44,0.78l-0.74,1.95l-1.83,-0.95l0.02,-1.58l1.55,-2l1.59,0.39l1.15,-1.42L852.76,362.01zM870.53,351.73l-1.06,2.78l0.49,1.73l-1.46,2.42l-3.58,1.6l-4.93,0.21l-4,3.84l-1.88,-1.29L854,360.5l-4.88,0.75l-3.32,1.59l-3.28,0.06l2.84,2.46l-1.87,5.61l-1.81,1.37l-1.36,-1.27l0.69,-2.96l-1.77,-0.96l-1.14,-2.28l2.65,-1.03l1.47,-2.11l2.82,-1.75l2.06,-2.33l5.58,-1.02l3,0.7l2.93,-6.17l1.87,1.67l4.11,-3.51l1.59,-1.38l1.76,-4.38l-0.48,-4.1l1.18,-2.33l2.98,-0.68l1.53,5.11l-0.08,2.94l-2.59,3.6L870.53,351.73zM878.76,325.8l1.97,0.83l1.98,-1.65l0.62,4.35l-4.16,1.05l-2.46,3.76l-4.41,-2.58l-1.53,4.12l-3.12,0.06l-0.39,-3.74l1.39,-2.94l3,-0.21l0.82,-5.38l0.83,-3.09l3.29,4.12L878.76,325.8z\"\n            />\n            <path\n                id=\"KE\"\n                :title=\"countries.getName('KE', codeLang)\"\n                class=\"land\"\n                d=\"M590.19,465.78L591.85,468.07L589.89,469.19L589.2,470.35L588.14,470.55L587.75,472.52L586.85,473.64L586.3,475.5L585.17,476.42L581.15,473.63L580.95,472.01L570.79,466.34L570.31,466.03L570.29,463.08L571.09,461.95L572.47,460.11L573.49,458.08L572.26,454.88L571.93,453.48L570.6,451.54L572.32,449.87L574.22,448.03L575.68,448.5L575.68,450.07L576.64,450.98L578.59,450.98L582.14,453.36L583.02,453.38L583.68,453.31L584.3,453.63L586.17,453.85L587,452.69L589.56,451.52L590.69,452.46L592.61,452.46L590.16,455.63z\"\n            />\n            <path\n                id=\"KG\"\n                :title=\"countries.getName('KG', codeLang)\"\n                class=\"land\"\n                d=\"M674.22,333.11L674.85,331.45L676.69,330.91L681.31,332.22L681.74,329.98L683.33,329.18L687.33,330.79L688.35,330.37L693,330.47L697.16,330.87L698.56,332.24L700.29,332.79L699.9,333.65L695.48,335.68L694.48,337.16L690.88,337.6L689.82,339.95L686.85,339.46L684.92,340.18L682.24,341.9L682.63,342.75L681.83,343.58L676.53,344.13L673.06,342.96L670.02,343.24L670.29,341.14L673.34,341.75L674.37,340.62L676.5,340.98L680.09,338.34L676.77,336.38L674.77,337.31L672.7,335.91L675.05,333.48z\"\n            />\n            <path\n                id=\"KH\"\n                :title=\"countries.getName('KH', codeLang)\"\n                class=\"land\"\n                d=\"M765.44,433.6L764.3,432.12L762.89,429.18L762.22,425.73L764.02,423.35L767.64,422.8L770.27,423.21L772.58,424.34L773.85,422.35L776.34,423.41L776.99,425.33L776.64,428.75L771.93,430.94L773.16,432.67L770.22,432.87L767.79,434.01z\"\n            />\n            <path\n                id=\"KP\"\n                :title=\"countries.getName('KP', codeLang)\"\n                class=\"land\"\n                d=\"M841.55,332.62L841.94,333.29L840.88,333.06L839.66,334.33L838.82,335.61L838.93,338.28L837.48,339.09L836.98,339.74L835.92,340.82L834.05,341.42L832.84,342.4L832.75,343.97L832.42,344.37L833.54,344.95L835.13,346.53L834.72,347.39L833.53,347.62L831.55,347.79L830.46,349.39L829.2,349.27L829.03,349.59L827.67,348.92L827.33,349.58L826.51,349.87L826.41,349.21L825.68,348.89L824.93,348.32L825.7,346.75L826.36,346.33L826.11,345.68L826.82,343.74L826.63,343.15L825,342.75L823.68,341.78L825.96,339.43L829.05,337.45L830.98,334.8L832.31,335.97L834.73,336.11L834.29,334.14L838.62,332.51L839.74,330.38z\"\n            />\n            <path\n                id=\"KR\"\n                :title=\"countries.getName('KR', codeLang)\"\n                class=\"land\"\n                d=\"M835.13,346.53L837.55,350.71L838.24,352.98L838.26,356.96L837.21,358.84L834.67,359.5L832.43,360.91L829.9,361.2L829.59,359.35L830.11,356.78L828.87,353.18L830.95,352.59L829.03,349.59L829.2,349.27L830.46,349.39L831.55,347.79L833.53,347.62L834.72,347.39z\"\n            />\n            <path\n                id=\"XK\"\n                :title=\"countries.getName('XK', codeLang)\"\n                class=\"land\"\n                d=\"M533.47,333.92L533.34,334.69L532.98,334.66L532.8,333.29L532.13,332.91L531.53,331.89L532.05,331.04L532.72,330.76L533.11,329.5L533.61,329.28L534.01,329.82L534.54,330.06L534.9,330.67L535.36,330.85L535.91,331.55L536.31,331.53L535.99,332.46L535.66,332.91L535.75,333.19L535.12,333.33z\"\n            />\n            <path\n                id=\"KW\"\n                :title=\"countries.getName('KW', codeLang)\"\n                class=\"land\"\n                d=\"M609.77,375.76L610.35,377.17L610.1,377.9L611,380.31L609.02,380.39L608.32,378.88L605.82,378.57L607.88,375.49z\"\n            />\n            <path\n                id=\"KZ\"\n                :title=\"countries.getName('KZ', codeLang)\"\n                class=\"land\"\n                d=\"M674.22,333.11L672.61,333.81L668.92,336.42L667.69,339.07L666.64,339.09L665.88,337.34L662.31,337.22L661.74,334.16L660.37,334.13L660.58,330.33L657.23,327.53L652.42,327.83L649.13,328.39L646.45,324.89L644.16,323.41L639.81,320.57L639.29,320.22L632.07,322.57L632.18,336.7L630.74,336.88L628.78,333.95L626.88,332.89L623.7,333.68L622.46,334.93L622.3,334.01L622.99,332.44L622.46,331.12L619.21,329.82L617.94,326.35L616.4,325.37L616.3,324.09L619.03,324.46L619.14,321.58L621.52,320.94L623.97,321.53L624.48,317.62L623.98,315.11L621.17,315.31L618.79,314.31L615.54,316.1L612.93,316.96L611.5,316.3L611.79,314.2L610,311.44L607.92,311.55L605.54,308.72L607.16,305.5L606.34,304.63L608.57,299.86L611.46,302.39L611.81,299.2L617.59,294.35L621.97,294.23L628.16,297.33L631.47,299.12L634.45,297.25L638.89,297.17L642.48,299.46L643.3,298.15L647.23,298.34L647.94,296.23L643.39,293.14L646.08,290.91L645.56,289.66L648.25,288.45L646.23,285.25L647.51,283.63L658,281.97L659.37,280.78L666.39,278.99L668.91,276.95L673.95,278.01L674.83,283.02L677.76,281.86L681.36,283.49L681.13,286.07L683.82,285.8L690.84,281.31L689.82,282.81L693.4,286.47L699.66,298.05L701.16,295.72L705.02,298.28L709.05,297.14L710.59,297.94L711.94,300.49L713.9,301.33L715.1,303.18L718.71,302.6L720.2,305.23L718.06,308.06L715.73,308.46L715.6,312.64L714.04,314.5L708.48,313.15L706.46,320.41L705.02,321.3L699.47,322.88L701.99,329.63L700.07,330.63L700.29,332.79L698.56,332.24L697.16,330.87L693,330.47L688.35,330.37L687.33,330.79L683.33,329.18L681.74,329.98L681.31,332.22L676.69,330.91L674.85,331.45z\"\n            />\n            <path\n                id=\"LA\"\n                :title=\"countries.getName('LA', codeLang)\"\n                class=\"land\"\n                d=\"M770.27,423.21L771.18,421.91L771.31,419.47L769.04,416.94L768.86,414.07L766.73,411.69L764.61,411.49L764.05,412.51L762.4,412.59L761.56,412.08L758.61,413.82L758.54,411.2L759.23,408.09L757.34,407.96L757.18,406.18L755.96,405.26L756.56,404.16L758.95,402.22L759.2,402.92L760.69,403L760.27,399.57L761.72,399.13L763.36,401.5L764.62,404.22L768.07,404.25L769.16,406.84L767.37,407.61L766.56,408.68L769.92,410.44L772.25,413.9L774.02,416.47L776.14,418.49L776.85,420.53L776.34,423.41L773.85,422.35L772.58,424.34z\"\n            />\n            <path\n                id=\"LB\"\n                :title=\"countries.getName('LB', codeLang)\"\n                class=\"land\"\n                d=\"M575.69,364.93L574.94,364.98L574.68,365.56L573.74,365.56L574.74,362.83L576.13,360.45L576.19,360.33L577.45,360.51L577.91,361.83L576.38,363.1z\"\n            />\n            <path\n                id=\"LK\"\n                :title=\"countries.getName('LK', codeLang)\"\n                class=\"land\"\n                d=\"M704.57,442.37L704.15,445.29L702.98,446.09L700.54,446.73L699.2,444.5L698.71,440.47L699.98,435.89L701.91,437.46L703.22,439.44z\"\n            />\n            <path\n                id=\"LR\"\n                :title=\"countries.getName('LR', codeLang)\"\n                class=\"land\"\n                d=\"M453.63,451.22L452.89,451.24L450,449.91L447.46,447.78L445.07,446.25L443.18,444.44L443.85,443.54L444,442.73L445.26,441.2L446.57,439.89L447.17,439.82L447.9,439.51L449.07,441.23L448.89,442.36L449.43,442.96L450.23,442.97L450.8,441.84L451.59,441.91L451.46,442.73L451.74,444.09L451.13,445.33L451.95,446.1L452.84,446.29L454.03,447.46L454.11,448.57L453.84,448.92z\"\n            />\n            <path\n                id=\"LS\"\n                :title=\"countries.getName('LS', codeLang)\"\n                class=\"land\"\n                d=\"M556.5,547.75L557.48,548.71L556.62,550.27L556.14,551.32L554.58,551.82L554.06,552.86L553.06,553.18L550.96,550.69L552.45,548.66L553.97,547.41L555.28,546.77z\"\n            />\n            <path\n                id=\"LT\"\n                :title=\"countries.getName('LT', codeLang)\"\n                class=\"land\"\n                d=\"M538.99,282.09L538.76,280.87L539.06,279.54L537.82,278.77L534.89,277.91L534.29,273.75L537.5,272.2L542.2,272.53L544.96,272.03L545.35,273.08L546.84,273.4L549.54,275.82L549.8,278.02L547.5,279.59L546.85,282.31L543.81,284.11L541.1,284.07L540.43,282.61z\"\n            />\n            <path\n                id=\"LU\"\n                :title=\"countries.getName('LU', codeLang)\"\n                class=\"land\"\n                d=\"M492.2,301.29L492.76,302.27L492.6,304.16L491.79,304.26L491.16,303.88L491.47,301.45z\"\n            />\n            <path\n                id=\"LV\"\n                :title=\"countries.getName('LV', codeLang)\"\n                class=\"land\"\n                d=\"M534.29,273.75L534.39,269.94L535.77,266.7L538.41,264.92L540.63,268.8L542.88,268.7L543.42,264.71L545.81,263.78L547.04,264.43L549.45,266.37L551.77,266.38L553.12,267.57L553.35,270.06L554.26,273.05L551.24,274.98L549.54,275.82L546.84,273.4L545.35,273.08L544.96,272.03L542.2,272.53L537.5,272.2z\"\n            />\n            <path\n                id=\"LY\"\n                :title=\"countries.getName('LY', codeLang)\"\n                class=\"land\"\n                d=\"M516.89,397.93L514.91,399.05L513.33,397.39L508.9,396.08L507.67,394.17L505.45,392.75L504.14,393.31L503.15,391.6L503.04,390.28L501.38,388.02L502.5,386.73L502.25,384.76L502.61,383.04L502.41,381.6L502.9,379.01L502.75,377.53L501.84,374.69L503.21,373.94L503.45,372.56L503.15,371.21L505.08,369.95L505.94,368.9L507.31,367.95L507.47,365.4L510.76,366.55L511.94,366.26L514.28,366.82L518,368.29L519.31,371.21L521.83,371.85L525.78,373.21L528.77,374.82L530.14,373.98L531.48,372.49L530.83,369.98L531.71,368.38L533.73,366.83L535.66,366.38L539.45,367.06L540.41,368.54L541.45,368.55L542.34,369.11L545.13,369.5L545.81,370.58L544.8,372.15L545.23,373.54L544.51,375.54L545.35,378.12L545.35,389.3L545.35,400.53L545.35,406.49L542.13,406.5L542.09,407.74L530.91,402.04L519.72,396.27z\"\n            />\n            <path\n                id=\"MA\"\n                :title=\"countries.getName('MA', codeLang)\"\n                class=\"land\"\n                d=\"M450.96,383.14L450.93,379.39L455.46,377.03L458.26,376.54L460.55,375.68L461.63,374.06L464.91,372.77L465.03,370.36L466.65,370.07L467.92,368.86L471.59,368.3L472.1,367.02L471.36,366.31L470.39,362.78L470.23,360.73L469.17,358.55L467.95,358.51L465.05,357.76L462.38,358L460.69,356.54L458.63,356.52L457.74,358.63L455.87,362.14L453.79,363.53L450.98,365.06L449.18,367.3L448.8,369.04L447.73,371.86L448.43,375.89L446.09,378.57L444.69,379.42L442.48,381.59L439.87,381.94L438.57,383.06L442.19,383.07L450.94,383.1L450.94,383.1L450.94,383.1L442.19,383.07L438.57,383.06z\"\n            />\n            <path\n                id=\"MD\"\n                :title=\"countries.getName('MD', codeLang)\"\n                class=\"land\"\n                d=\"M549.89,309.45L550.56,308.83L552.42,308.41L554.49,309.72L555.64,309.88L556.91,311L556.71,312.41L557.73,313.08L558.13,314.8L559.11,315.84L558.92,316.44L559.44,316.86L558.7,317.15L557.04,317.04L556.77,316.47L556.18,316.8L556.38,317.52L555.61,318.81L555.12,320.18L554.42,320.62L553.91,318.79L554.21,317.07L554.12,315.28L552.5,312.84L551.61,311.09L550.74,309.85z\"\n            />\n            <path\n                id=\"ME\"\n                :title=\"countries.getName('ME', codeLang)\"\n                class=\"land\"\n                d=\"M530.77,332.23L530.6,331.51L529.38,333.38L529.57,334.57L528.98,334.28L528.2,333.05L526.98,332.3L527.29,331.66L527.7,329.56L528.61,328.67L529.14,328.31L529.88,328.97L530.29,329.51L531.21,329.92L532.28,330.71L532.05,331.04L531.53,331.89z\"\n            />\n            <path\n                id=\"MG\"\n                :title=\"countries.getName('MG', codeLang)\"\n                class=\"land\"\n                d=\"M614.17,498.4L614.91,499.61L615.6,501.5L616.06,504.96L616.78,506.31L616.5,507.69L616.01,508.55L615.05,506.85L614.53,507.71L615.06,509.85L614.81,511.09L614.04,511.76L613.86,514.24L612.76,517.66L611.38,521.75L609.64,527.42L608.57,531.63L607.3,535.18L605.02,535.91L602.57,537.22L600.96,536.43L598.73,535.33L597.96,533.71L597.77,531L596.79,528.58L596.53,526.41L597.03,524.25L598.32,523.73L598.33,522.74L599.67,520.48L599.92,518.6L599.27,517.2L598.74,515.35L598.52,512.65L599.5,511.02L599.87,509.17L601.27,509.07L602.84,508.47L603.87,507.95L605.11,507.91L606.7,506.26L609.01,504.48L609.85,503.04L609.47,501.81L610.66,502.16L612.21,500.17L612.26,498.45L613.19,497.17z\"\n            />\n            <path\n                id=\"MK\"\n                :title=\"countries.getName('MK', codeLang)\"\n                class=\"land\"\n                d=\"M532.98,334.66L533.34,334.69L533.47,333.92L535.12,333.33L535.75,333.19L536.71,332.97L538,332.91L539.41,334.12L539.61,336.59L539.07,336.71L538.61,337.36L537.09,337.29L536.02,338.1L534.19,338.42L533.03,337.52L532.63,335.93z\"\n            />\n            <path\n                id=\"ML\"\n                :title=\"countries.getName('ML', codeLang)\"\n                class=\"land\"\n                d=\"M441.13,422.22L442.07,421.7L442.54,420L443.43,419.93L445.39,420.73L446.97,420.16L448.05,420.35L448.48,419.71L459.73,419.67L460.35,417.64L459.86,417.28L458.51,404.6L457.16,391.54L461.45,391.49L470.91,398.14L480.37,404.69L481.03,406.08L482.78,406.93L484.08,407.41L484.11,409.29L487.22,409L487.23,415.75L485.69,417.69L485.45,419.48L482.96,419.93L479.14,420.18L478.1,421.21L476.3,421.32L474.51,421.33L473.81,420.78L472.26,421.19L469.64,422.39L469.11,423.29L466.93,424.57L466.55,425.31L465.38,425.89L464.02,425.51L463.25,426.21L462.84,428.17L460.61,430.53L460.68,431.49L459.91,432.7L460.1,434.34L458.94,434.76L458.29,435.12L457.85,433.91L457.04,434.23L456.56,434.17L456.04,435L453.88,434.97L453.1,434.55L452.74,434.81L451.88,433.99L452.03,433.15L451.68,432.81L451.08,433.09L451.19,432.17L451.77,431.44L450.62,430.25L450.28,429.46L449.66,428.84L449.1,428.76L448.43,429.16L447.52,429.54L446.75,430.16L445.55,429.93L444.77,429.21L444.31,429.11L443.58,429.49L443.13,429.5L442.97,428.45L443.1,427.56L442.86,426.46L441.81,425.65L441.26,424.01z\"\n            />\n            <path\n                id=\"MM\"\n                :title=\"countries.getName('MM', codeLang)\"\n                class=\"land\"\n                d=\"M754.36,405.95L752.72,407.23L750.74,407.37L749.46,410.56L748.28,411.09L749.64,413.66L751.42,415.79L752.56,417.71L751.54,420.23L750.57,420.76L751.24,422.21L753.11,424.49L753.43,426.09L753.38,427.42L754.48,430.02L752.94,432.67L751.58,435.58L751.31,433.48L752.17,431.3L751.23,429.62L751.46,426.51L750.32,425.03L749.41,421.59L748.9,417.93L747.69,415.53L745.84,416.99L742.65,419.05L741.08,418.79L739.34,418.12L740.31,414.51L739.73,411.77L737.53,408.38L737.87,407.31L736.23,406.93L734.24,404.51L734.06,402.1L735.04,402.56L735.09,400.41L736.48,399.69L736.18,398.41L736.81,397.38L736.92,394.23L739.11,394.93L740.36,392.41L740.51,390.91L742.05,388.31L741.97,386.53L745.6,384.37L747.6,384.94L747.37,383.01L748.36,382.43L748.14,381.23L749.78,380.99L750.72,382.85L751.94,383.6L752.03,386L751.91,388.57L749.26,391.15L748.92,394.78L751.88,394.28L752.55,397.08L754.33,397.67L753.51,400.17L755.59,401.3L756.81,401.85L758.86,400.98L758.95,402.22L756.56,404.16L755.96,405.26z\"\n            />\n            <path\n                id=\"MN\"\n                :title=\"countries.getName('MN', codeLang)\"\n                class=\"land\"\n                d=\"M721.29,304.88L724.25,304.14L729.6,300.4L733.87,298.33L736.3,299.68L739.23,299.74L741.1,301.79L743.9,301.94L747.96,303.03L750.68,300L749.54,297.4L752.45,292.74L755.59,294.61L758.13,295.14L761.43,296.29L761.96,299.61L765.95,301.45L768.6,300.64L772.14,300.07L774.95,300.65L777.7,302.74L779.4,304.94L782,304.9L785.53,305.59L788.11,304.53L791.8,303.82L795.91,300.76L797.59,301.23L799.06,302.69L802.4,302.33L801.04,305.58L799.06,309.8L799.78,311.51L801.37,310.98L804.13,311.63L806.29,310.09L808.54,311.42L811.08,314.31L810.77,315.76L808.56,315.3L804.49,315.84L802.51,317L800.46,319.66L796.18,321.21L793.39,323.31L790.51,322.51L788.93,322.15L787.46,324.69L788.35,326.19L788.81,327.47L786.84,328.77L784.83,330.82L781.56,332.15L777.35,332.3L772.82,333.61L769.56,335.62L768.32,334.46L764.93,334.46L760.78,332.17L758.01,331.6L754.28,332.13L748.49,331.28L745.4,331.37L743.76,329.1L742.48,325.53L740.75,325.1L737.36,322.65L733.58,322.1L730.25,321.42L729.24,319.69L730.32,314.96L728.39,311.65L724.39,310.08L722.03,307.85z\"\n            />\n            <path\n                id=\"MR\"\n                :title=\"countries.getName('MR', codeLang)\"\n                class=\"land\"\n                d=\"M441.13,422.22L439.28,420.24L437.58,418.11L435.72,417.34L434.38,416.49L432.81,416.52L431.45,417.15L430.05,416.9L429.09,417.83L428.85,416.27L429.63,414.83L429.98,412.08L429.67,409.17L429.33,407.7L429.61,406.23L428.89,404.81L427.41,403.53L428.02,402.53L439,402.55L438.47,398.2L439.16,396.65L441.78,396.38L441.69,388.52L450.9,388.69L450.9,383.96L461.45,391.49L457.16,391.54L458.51,404.6L459.86,417.28L460.35,417.64L459.73,419.67L448.48,419.71L448.05,420.35L446.97,420.16L445.39,420.73L443.43,419.93L442.54,420L442.07,421.7z\"\n            />\n            <path\n                id=\"MW\"\n                :title=\"countries.getName('MW', codeLang)\"\n                class=\"land\"\n                d=\"M572.15,495.69L571.37,497.85L572.15,501.57L573.13,501.53L574.14,502.45L575.31,504.53L575.55,508.25L574.34,508.86L573.48,510.87L571.65,509.08L571.45,507.04L572.04,505.69L571.87,504.54L570.77,503.81L569.99,504.07L568.38,502.69L566.91,501.95L567.76,499.29L568.64,498.3L568.1,495.94L568.66,493.64L569.14,492.87L568.43,490.47L567.11,489.21L569.85,489.73L570.42,490.51L571.37,491.83z\"\n            />\n            <path\n                id=\"MX\"\n                :title=\"countries.getName('MX', codeLang)\"\n                class=\"land\"\n                d=\"M202.89,388.72L201.8,391.43L201.31,393.64L201.1,397.72L200.83,399.19L201.32,400.83L202.19,402.3L202.75,404.61L204.61,406.82L205.26,408.51L206.36,409.96L209.34,410.75L210.5,411.97L212.96,411.15L215.09,410.86L217.19,410.33L218.96,409.82L220.74,408.62L221.41,406.89L221.64,404.4L222.13,403.53L224.02,402.74L226.99,402.05L229.47,402.15L231.17,401.9L231.84,402.53L231.75,403.97L230.24,405.74L229.58,407.55L230.09,408.06L229.67,409.34L228.97,411.63L228.26,410.88L227.67,410.93L227.14,410.97L226.14,412.74L225.63,412.39L225.29,412.53L225.31,412.96L222.72,412.93L220.1,412.93L220.1,414.58L218.83,414.58L219.87,415.56L220.91,416.23L221.22,416.86L221.68,417.04L221.6,418.02L218.01,418.03L216.66,420.39L217.05,420.93L216.73,421.61L216.66,422.45L213.49,419.34L212.04,418.4L209.75,417.64L208.19,417.85L205.93,418.94L204.52,419.23L202.54,418.47L200.44,417.91L197.82,416.58L195.72,416.17L192.54,414.82L190.2,413.42L189.49,412.64L187.92,412.47L185.05,411.54L183.88,410.2L180.87,408.53L179.47,406.66L178.8,405.21L179.73,404.92L179.44,404.07L180.09,403.3L180.1,402.26L179.16,400.92L178.9,399.72L177.96,398.2L175.49,395.18L172.67,392.79L171.31,390.88L168.9,389.62L168.39,388.86L168.82,386.94L167.39,386.21L165.73,384.69L165.03,382.5L163.52,382.24L161.9,380.58L160.58,379.03L160.46,378.03L158.95,375.61L157.96,373.13L158,371.88L155.97,370.59L155.04,370.73L153.44,369.83L152.99,371.16L153.45,372.72L153.72,375.15L154.69,376.48L156.77,378.69L157.23,379.44L157.66,379.66L158.02,380.76L158.52,380.71L159.09,382.75L159.94,383.55L160.53,384.66L162.3,386.26L163.23,389.15L164.06,390.5L164.84,391.94L164.99,393.56L166.34,393.66L167.47,395.05L168.49,396.41L168.42,396.95L167.24,398.06L166.74,398.05L166,396.2L164.17,394.47L162.15,392.99L160.71,392.21L160.8,389.96L160.38,388.28L159.04,387.32L157.11,385.93L156.74,386.33L156.04,385.51L154.31,384.76L152.66,382.93L152.86,382.69L154.01,382.87L155.05,381.69L155.16,380.26L153,377.99L151.36,377.1L150.32,375.09L149.28,372.97L147.98,370.36L146.84,367.4L150.03,367.15L153.59,366.79L153.33,367.43L157.56,369.04L163.96,371.35L169.54,371.32L171.76,371.32L171.76,369.97L176.62,369.97L177.64,371.14L179.08,372.17L180.74,373.6L181.67,375.29L182.37,377.05L183.82,378.02L186.15,378.98L187.91,376.45L190.21,376.39L192.18,377.67L193.59,379.85L194.56,381.71L196.21,383.51L196.83,385.7L197.62,387.17L199.8,388.13L201.79,388.81z\"\n            />\n            <path\n                id=\"MY\"\n                :title=\"countries.getName('MY', codeLang)\"\n                class=\"land\"\n                d=\"M758.65,446.07l0.22,1.44l1.85,-0.33l0.92,-1.15l0.64,0.26l1.66,1.69l1.18,1.87l0.16,1.88l-0.3,1.27l0.27,0.96l0.21,1.65l0.99,0.77l1.1,2.46l-0.05,0.94l-1.99,0.19l-2.65,-2.06l-3.32,-2.21l-0.33,-1.42l-1.62,-1.87l-0.39,-2.31l-1.01,-1.52l0.31,-2.04l-0.62,-1.19l0.49,-0.5L758.65,446.07zM807.84,450.9l-2.06,0.95l-2.43,-0.47l-3.22,0l-0.97,3.17l-1.08,0.97l-1.44,3.88l-2.29,0.59l-2.65,-0.78l-1.34,0.24l-1.63,1.41l-1.79,-0.2l-1.81,0.57l-1.92,-1.57l-0.47,-1.86l2.05,0.96l2.17,-0.52l0.56,-2.36l1.2,-0.53l3.36,-0.6l2.01,-2.21l1.38,-1.77l1.28,1.45l0.59,-0.95l1.34,0.09l0.16,-1.78l0.13,-1.38l2.16,-1.95l1.41,-2.19l1.13,-0.01l1.44,1.42l0.13,1.22l1.85,0.78l2.34,0.84l-0.2,1.1l-1.88,0.14L807.84,450.9z\"\n            />\n            <path\n                id=\"MZ\"\n                :title=\"countries.getName('MZ', codeLang)\"\n                class=\"land\"\n                d=\"M572.15,495.69L574.26,495.46L577.63,496.26L578.37,495.9L580.32,495.83L581.32,494.98L583,495.02L586.06,493.92L588.29,492.28L588.75,493.55L588.63,496.38L588.98,498.88L589.09,503.36L589.58,504.76L588.75,506.83L587.66,508.84L585.87,510.64L583.31,511.75L580.15,513.16L576.98,516.31L575.9,516.85L573.94,518.94L572.79,519.63L572.55,521.75L573.88,524L574.43,525.76L574.47,526.66L574.96,526.51L574.88,529.47L574.43,530.88L575.09,531.4L574.67,532.67L573.5,533.76L571.19,534.8L567.82,536.46L566.59,537.61L566.83,538.91L567.54,539.12L567.3,540.76L565.18,540.74L564.94,539.36L564.52,537.97L564.28,536.86L564.78,533.43L564.05,531.26L562.71,527L565.66,523.59L566.4,521.44L566.83,521.17L567.14,519.43L566.69,518.55L566.81,516.35L567.36,514.31L567.35,510.62L565.9,509.68L564.56,509.47L563.96,508.75L562.66,508.14L560.32,508.2L560.14,507.12L559.87,505.07L568.38,502.69L569.99,504.07L570.77,503.81L571.87,504.54L572.04,505.69L571.45,507.04L571.65,509.08L573.48,510.87L574.34,508.86L575.55,508.25L575.31,504.53L574.14,502.45L573.13,501.53L572.15,501.57L571.37,497.85z\"\n            />\n            <path\n                id=\"NA\"\n                :title=\"countries.getName('NA', codeLang)\"\n                class=\"land\"\n                d=\"M521.08,546.54L519,544.15L517.9,541.85L517.28,538.82L516.59,536.57L515.65,531.85L515.59,528.22L515.23,526.58L514.14,525.34L512.69,522.87L511.22,519.3L510.61,517.45L508.32,514.58L508.15,512.33L509.5,511.78L511.18,511.28L513,511.37L514.67,512.69L515.09,512.48L526.46,512.36L528.4,513.76L535.19,514.17L540.34,512.98L542.64,512.31L544.46,512.48L545.56,513.14L545.59,513.38L544.01,514.04L543.15,514.05L541.37,515.2L540.29,513.99L535.97,515.02L533.88,515.11L533.8,525.68L531.04,525.79L531.04,534.65L531.03,546.17L528.53,547.8L527.03,548.03L525.26,547.43L524,547.2L523.53,545.84L522.42,544.97z\"\n            />\n            <path\n                id=\"NC\"\n                :title=\"countries.getName('NC', codeLang)\"\n                class=\"land\"\n                d=\"M940.08,523.48L942.38,525.34L943.83,526.72L942.77,527.45L941.22,526.63L939.22,525.28L937.41,523.69L935.56,521.59L935.17,520.58L936.37,520.63L937.95,521.64L939.18,522.65z\"\n            />\n            <path\n                id=\"NE\"\n                :title=\"countries.getName('NE', codeLang)\"\n                class=\"land\"\n                d=\"M481.29,429.88L481.36,427.93L478.12,427.28L478.04,425.9L476.46,424.03L476.08,422.72L476.3,421.32L478.1,421.21L479.14,420.18L482.96,419.93L485.45,419.48L485.69,417.69L487.23,415.75L487.22,409L491.17,407.68L499.29,401.83L508.9,396.08L513.33,397.39L514.91,399.05L516.89,397.93L517.58,402.6L518.63,403.38L518.68,404.33L519.84,405.35L519.23,406.63L518.15,412.61L518.01,416.4L514.43,419.14L513.22,422.94L514.39,424L514.38,425.85L516.18,425.92L515.9,427.26L515.11,427.43L515.02,428.33L514.49,428.4L512.6,425.27L511.94,425.15L509.75,426.75L507.58,425.92L506.07,425.75L505.26,426.15L503.61,426.07L501.96,427.29L500.53,427.36L497.14,425.88L495.81,426.58L494.38,426.53L493.33,425.45L490.51,424.38L487.5,424.72L486.77,425.34L486.38,426.99L485.57,428.14L485.38,430.68L483.24,429.04L482.23,429.05z\"\n            />\n            <path\n                id=\"NG\"\n                :title=\"countries.getName('NG', codeLang)\"\n                class=\"land\"\n                d=\"M499.09,450.08L496.18,451.08L495.11,450.94L494.03,451.56L491.79,451.5L490.29,449.75L489.37,447.73L487.38,445.89L485.27,445.92L482.8,445.92L482.96,441.39L482.89,439.6L483.42,437.83L484.28,436.96L485.64,435.21L485.35,434.45L485.9,433.31L485.27,431.63L485.38,430.68L485.57,428.14L486.38,426.99L486.77,425.34L487.5,424.72L490.51,424.38L493.33,425.45L494.38,426.53L495.81,426.58L497.14,425.88L500.53,427.36L501.96,427.29L503.61,426.07L505.26,426.15L506.07,425.75L507.58,425.92L509.75,426.75L511.94,425.15L512.6,425.27L514.49,428.4L515.02,428.33L516.13,429.47L515.82,429.98L515.67,430.93L513.31,433.13L512.57,434.94L512.17,436.41L511.58,437.04L511.01,439.01L509.51,440.17L509.08,441.59L508.45,442.73L508.19,443.89L506.26,444.84L504.69,443.69L503.62,443.73L501.95,445.37L501.14,445.4L499.81,448.1z\"\n            />\n            <path\n                id=\"NI\"\n                :title=\"countries.getName('NI', codeLang)\"\n                class=\"land\"\n                d=\"M234.93,432.31L233.96,431.41L232.65,430.26L232.03,429.3L230.85,428.41L229.44,427.12L229.75,426.68L230.22,427.11L230.43,426.9L231.3,426.79L231.65,426.13L232.06,426.11L232,424.7L232.66,424.63L233.25,424.65L233.85,423.89L234.68,424.47L234.97,424.11L235.48,423.77L236.46,422.98L236.51,422.38L236.78,422.41L237.14,421.72L237.43,421.64L237.91,422.08L238.47,422.21L239.09,421.84L239.8,421.84L240.77,421.46L241.16,421.07L242.12,421.13L241.88,421.41L241.74,422.05L242.02,423.1L241.38,424.08L241.08,425.23L240.98,426.5L241.14,427.23L241.21,428.52L240.78,428.8L240.52,430.02L240.71,430.77L240.13,431.5L240.27,432.26L240.69,432.73L240.02,433.33L239.2,433.14L238.73,432.56L237.84,432.32L237.2,432.69L235.35,431.94z\"\n            />\n            <path\n                id=\"NL\"\n                :title=\"countries.getName('NL', codeLang)\"\n                class=\"land\"\n                d=\"M492.28,285.98L494.61,286.11L495.14,287.69L494.44,291.92L493.73,293.63L492.04,293.63L492.52,298.32L490.97,297.28L489.2,295.33L486.6,296.26L484.55,295.91L485.99,294.67L488.45,287.93z\"\n            />\n            <path\n                id=\"NO\"\n                :title=\"countries.getName('NO', codeLang)\"\n                class=\"land\"\n                d=\"M554.23,175.61l8.77,6.24l-3.61,2.23l3.07,5.11l-4.77,3.19l-2.26,0.72l1.19,-5.59l-3.6,-3.25l-4.35,2.78l-1.38,5.85l-2.67,3.44l-3.01,-1.87l-3.66,0.38l-3.12,-4.15l-1.68,2.09l-1.74,0.32l-0.41,5.08l-5.28,-1.22l-0.74,4.22l-2.69,-0.03l-1.85,5.24l-2.8,7.87l-4.35,9.5l1.02,2.23l-0.98,2.55l-2.78,-0.11l-1.82,5.91l0.17,8.04l1.79,2.98l-0.93,6.73l-2.33,3.81l-1.24,3.15l-1.88,-3.35l-5.54,6.27l-3.74,1.24l-3.88,-2.71l-1,-5.86l-0.89,-13.26l2.58,-3.88l7.4,-5.18l5.54,-6.59l5.13,-9.3l6.74,-13.76l4.7,-5.67l7.71,-9.89l6.15,-3.59l4.61,0.44l4.27,-6.99l5.11,0.38L554.23,175.61z\"\n            />\n            <path\n                id=\"NP\"\n                :title=\"countries.getName('NP', codeLang)\"\n                class=\"land\"\n                d=\"M722.33,382.45L722.11,383.8L722.48,385.79L722.16,387.03L719.83,387.08L716.45,386.35L714.29,386.06L712.67,384.47L708.83,384.06L705.17,382.29L702.53,380.74L699.81,379.54L700.9,376.55L702.68,375.09L703.84,374.31L706.09,375.31L708.92,377.4L710.49,377.86L711.43,379.39L713.61,380.02L715.89,381.41L719.06,382.14z\"\n            />\n            <path\n                id=\"NZ\"\n                :title=\"countries.getName('NZ', codeLang)\"\n                class=\"land\"\n                d=\"M960.38,588.63l0.64,1.53l1.99,-1.5l0.81,1.57l0,1.57l-1.04,1.74l-1.83,2.8l-1.43,1.54l1.03,1.86l-2.16,0.05l-2.4,1.46l-0.75,2.57l-1.59,4.03l-2.2,1.8l-1.4,1.16l-2.58,-0.09l-1.82,-1.34l-3.05,-0.28l-0.47,-1.48l1.51,-2.96l3.53,-3.87l1.81,-0.73l2.01,-1.47l2.4,-2.01l1.68,-1.98l1.25,-2.81l1.06,-0.95l0.42,-2.07l1.97,-1.7L960.38,588.63zM964.84,571.61l2.03,3.67l0.06,-2.38l1.27,0.95l0.42,2.65l2.26,1.15l1.89,0.28l1.6,-1.35l1.42,0.41l-0.68,3.15l-0.85,2.09l-2.14,-0.07l-0.75,1.1l0.26,1.56l-0.41,0.68l-1.06,1.97l-1.39,2.53l-2.17,1.49l-0.48,-0.98l-1.17,-0.54l1.62,-3.04l-0.92,-2.01l-3.02,-1.45l0.08,-1.31l2.03,-1.25l0.47,-2.74l-0.13,-2.28l-1.14,-2.34l0.08,-0.61l-1.34,-1.43l-2.21,-3.04l-1.17,-2.41l1.04,-0.27l1.53,1.89l2.18,0.89L964.84,571.61z\"\n            />\n            <path\n                id=\"OM\"\n                :title=\"countries.getName('OM', codeLang)\"\n                class=\"land\"\n                d=\"M640.29,403.18l-1.05,2.04l-1.27,-0.16l-0.58,0.71l-0.45,1.5l0.34,1.98l-0.26,0.36l-1.29,-0.01l-1.75,1.1l-0.27,1.43l-0.64,0.62l-1.74,-0.02l-1.1,0.74l0.01,1.18l-1.36,0.81l-1.55,-0.27l-1.88,0.98l-1.3,0.16l-0.92,-2.04l-2.19,-4.84l8.41,-2.96l1.87,-5.97l-1.29,-2.14l0.07,-1.22l0.82,-1.26l0.01,-1.25l1.27,-0.6l-0.5,-0.42l0.23,-2l1.43,-0.01l1.26,2.09l1.57,1.11l2.06,0.4l1.66,0.55l1.27,1.74l0.76,1l1,0.38l-0.01,0.67l-1.02,1.79l-0.45,0.84L640.29,403.18zM633.37,388.64L633,389.2l-0.53,-1.06l0.82,-1.06l0.35,0.27L633.37,388.64z\"\n            />\n            <path\n                id=\"PA\"\n                :title=\"countries.getName('PA', codeLang)\"\n                class=\"land\"\n                d=\"M256.88,443.21L255.95,442.4L255.35,440.88L256.04,440.13L255.33,439.94L254.81,439.01L253.41,438.23L252.18,438.41L251.62,439.39L250.48,440.09L249.87,440.19L249.6,440.78L250.93,442.3L250.17,442.66L249.76,443.08L248.46,443.22L247.97,441.54L247.61,442.02L246.68,441.86L246.12,440.72L244.97,440.54L244.24,440.21L243.04,440.21L242.95,440.82L242.63,440.4L242.78,439.84L243.01,439.27L242.9,438.76L243.32,438.42L242.74,438L242.72,436.87L243.81,436.62L244.81,437.63L244.75,438.23L245.87,438.35L246.14,438.12L246.91,438.82L248.29,438.61L249.48,437.9L251.18,437.33L252.14,436.49L253.69,436.65L253.58,436.93L255.15,437.03L256.4,437.52L257.31,438.36L258.37,439.14L258.03,439.56L258.68,441.21L258.15,442.05L257.24,441.85z\"\n            />\n            <path\n                id=\"PE\"\n                :title=\"countries.getName('PE', codeLang)\"\n                class=\"land\"\n                d=\"M280.13,513.14L279.38,514.65L277.94,515.39L275.13,513.71L274.88,512.51L269.33,509.59L264.3,506.42L262.13,504.64L260.97,502.27L261.43,501.44L259.06,497.69L256.29,492.45L253.65,486.83L252.5,485.54L251.62,483.48L249.44,481.64L247.44,480.51L248.35,479.26L246.99,476.59L247.86,474.64L250.1,472.87L250.43,474.04L249.63,474.7L249.7,475.72L250.86,475.5L252,475.8L253.17,477.21L254.76,476.06L255.29,474.18L257.01,471.75L260.38,470.65L263.44,467.73L264.31,465.92L263.92,463.81L264.67,463.54L266.53,464.86L267.42,466.18L268.72,466.9L270.37,469.82L272.46,470.17L274.01,469.43L275.02,469.91L276.7,469.67L278.85,470.98L277.04,473.82L277.88,473.88L279.28,475.37L276.75,475.24L276.38,475.66L274.08,476.19L270.88,478.1L270.67,479.4L269.96,480.38L270.24,481.89L268.54,482.7L268.54,483.89L267.8,484.4L268.97,486.93L270.53,488.65L269.94,489.86L271.8,490.02L272.86,491.53L275.33,491.6L277.63,489.94L277.44,494.24L278.72,494.57L280.3,494.08L282.73,498.66L282.12,499.62L281.99,501.64L281.93,504.08L280.83,505.52L281.34,506.59L280.69,507.56L281.9,510z\"\n            />\n            <path\n                id=\"PG\"\n                :title=\"countries.getName('PG', codeLang)\"\n                class=\"land\"\n                d=\"M912.32,482.42l-0.79,0.28l-1.21,-1.08l-1.23,-1.78l-0.6,-2.13l0.39,-0.27l0.3,0.83l0.85,0.63l1.36,1.77l1.32,0.95L912.32,482.42zM901.39,478.67l-1.47,0.23l-0.44,0.79l-1.53,0.68l-1.44,0.66l-1.49,0l-2.3,-0.81l-1.6,-0.78l0.23,-0.87l2.51,0.41l1.53,-0.22l0.42,-1.34l0.4,-0.07l0.27,1.49l1.6,-0.21l0.79,-0.96l1.57,-1l-0.31,-1.65l1.68,-0.05l0.57,0.46l-0.06,1.55L901.39,478.67zM887.96,484.02l2.5,1.84l1.82,2.99l1.61,-0.09l-0.11,1.25l2.17,0.48l-0.84,0.53l2.98,1.19l-0.31,0.82l-1.86,0.2l-0.69,-0.73l-2.41,-0.32l-2.83,-0.43l-2.18,-1.8l-1.59,-1.55l-1.46,-2.46l-3.66,-1.23l-2.38,0.8l-1.71,0.93l0.36,2.08l-2.2,0.97l-1.57,-0.47l-2.9,-0.12l-0.05,-9.16l-0.05,-9.1l4.87,1.92l5.18,1.6l1.93,1.43l1.56,1.41l0.43,1.65l4.67,1.73l0.68,1.49l-2.58,0.3L887.96,484.02zM904.63,475.93l-0.88,0.74l-0.53,-1.65l-0.65,-1.08l-1.27,-0.91l-1.6,-1.19l-2.02,-0.82l0.78,-0.67l1.51,0.78l0.95,0.61l1.18,0.67l1.12,1.17l1.07,0.89L904.63,475.93z\"\n            />\n            <path\n                id=\"PH\"\n                :title=\"countries.getName('PH', codeLang)\"\n                class=\"land\"\n                d=\"M829.59,439.86l0.29,1.87l0.17,1.58l-0.96,2.57l-1.02,-2.86l-1.31,1.42l0.9,2.06l-0.8,1.31l-3.3,-1.63l-0.79,-2.03l0.86,-1.33l-1.78,-1.33l-0.88,1.17l-1.32,-0.11l-2.08,1.57l-0.46,-0.82l1.1,-2.37l1.77,-0.79l1.53,-1.06l0.99,1.27l2.13,-0.77l0.46,-1.26l1.98,-0.08l-0.17,-2.18l2.27,1.34l0.24,1.42L829.59,439.86zM822.88,434.6l-1.01,0.93l-0.88,1.79l-0.88,0.84l-1.73,-1.95l0.58,-0.76l0.7,-0.79l0.31,-1.76l1.55,-0.17l-0.45,1.91l2.08,-2.74L822.88,434.6zM807.52,437.32l-3.73,2.67l1.38,-1.97l2.03,-1.74l1.68,-1.96l1.47,-2.82l0.5,2.31l-1.85,1.56L807.52,437.32zM817,430.02l1.68,0.88l1.78,0l-0.05,1.19l-1.3,1.2l-1.78,0.85l-0.1,-1.32l0.2,-1.45L817,430.02zM827.14,429.25l0.79,3.18l-2.16,-0.75l0.06,0.95l0.69,1.75l-1.33,0.63l-0.12,-1.99l-0.84,-0.15l-0.44,-1.72l1.65,0.23l-0.04,-1.08l-1.71,-2.18l2.69,0.06L827.14,429.25zM816,426.66l-0.74,2.47l-1.2,-1.42l-1.43,-2.18l2.4,0.1L816,426.66zM815.42,410.92l1.73,0.84l0.86,-0.76l0.25,0.75l-0.46,1.22l0.96,2.09l-0.74,2.42l-1.65,0.96l-0.44,2.33l0.63,2.29l1.49,0.32l1.24,-0.34l3.5,1.59l-0.27,1.56l0.92,0.69l-0.29,1.32l-2.18,-1.4l-1.04,-1.5l-0.72,1.05l-1.79,-1.72l-2.55,0.42l-1.4,-0.63l0.14,-1.19l0.88,-0.73l-0.84,-0.67l-0.36,1.04l-1.38,-1.65l-0.42,-1.26l-0.1,-2.77l1.13,0.96l0.29,-4.55l0.91,-2.66L815.42,410.92z\"\n            />\n            <path\n                id=\"PL\"\n                :title=\"countries.getName('PL', codeLang)\"\n                class=\"land\"\n                d=\"M517.36,296.97L516.21,294.11L516.43,292.55L515.73,290.1L514.72,288.45L515.5,287.2L514.84,284.81L516.76,283.42L521.13,281.2L524.67,279.56L527.46,280.38L527.67,281.56L530.38,281.62L533.83,282.17L538.99,282.09L540.43,282.61L541.1,284.07L541.22,286.16L542,287.94L541.98,289.79L540.3,290.73L541.17,292.85L541.22,294.86L542.63,298.75L542.33,299.99L540.94,300.5L538.39,304.11L539.11,306.03L538.5,305.78L535.84,304.14L533.82,304.74L532.5,304.3L530.84,305.22L529.43,303.7L528.27,304.28L528.11,304.02L526.82,301.89L524.74,301.63L524.47,300.26L522.55,299.77L522.13,300.9L520.61,300L520.78,298.79L518.69,298.4z\"\n            />\n            <path\n                id=\"PK\"\n                :title=\"countries.getName('PK', codeLang)\"\n                class=\"land\"\n                d=\"M685.99,351.76L688.06,353.39L688.89,356.05L693.5,357.44L690.79,360.3L687.67,360.81L683.41,359.98L682.04,361.44L683.03,364.39L684,366.64L686.27,368.27L683.88,370.18L683.92,372.51L681.2,375.75L679.44,379.01L676.51,382.33L673.25,382.09L670.16,385.39L672,386.79L672.32,389.18L673.89,390.74L674.45,393.38L668.28,393.37L666.41,395.41L664.36,394.64L663.52,392.44L661.35,390.1L656.19,390.68L651.63,390.73L647.68,391.17L648.74,387.57L652.78,385.96L652.55,384.52L651.21,384.01L651.13,381.24L648.45,379.84L647.32,377.91L645.94,376.23L650.63,377.87L653.44,377.39L655.11,377.79L655.68,377.09L657.63,377.37L661.28,376.04L661.38,373.29L662.94,371.45L665.03,371.45L665.33,370.54L667.48,370.11L668.51,370.41L669.61,369.49L669.46,367.51L670.65,365.51L672.43,364.66L671.33,362.44L674,362.55L674.77,361.33L674.65,360.03L676.05,358.6L675.72,356.9L675.06,355.44L676.7,353.93L679.71,353.2L682.93,352.8L684.35,352.15z\"\n            />\n            <path\n                id=\"PR\"\n                :title=\"countries.getName('PR', codeLang)\"\n                class=\"land\"\n                d=\"M289.41,410.89L290.84,411.15L291.35,411.73L290.63,412.47L288.52,412.45L286.88,412.55L286.72,411.3L287.11,410.87z\"\n            />\n            <path\n                id=\"PS\"\n                :title=\"countries.getName('PS', codeLang)\"\n                class=\"land\"\n                d=\"M574.92,367.87L574.92,369.88L574.5,370.84L573.18,371.29L573.31,370.43L574.02,369.97L573.32,369.61L573.9,367.41z\"\n            />\n            <path\n                id=\"PT\"\n                :title=\"countries.getName('PT', codeLang)\"\n                class=\"land\"\n                d=\"M449.92,334.56L450.94,333.61L452.08,333.06L452.79,334.9L454.44,334.89L454.92,334.42L456.56,334.55L457.34,336.43L456.04,337.43L456.01,340.31L455.55,340.84L455.44,342.56L454.23,342.86L455.35,345.03L454.58,347.38L455.54,348.44L455.16,349.4L454.12,350.72L454.35,351.88L453.23,352.79L451.75,352.3L450.3,352.68L450.73,349.94L450.47,347.76L449.21,347.43L448.54,346.08L448.77,343.72L449.88,342.41L450.08,340.94L450.67,338.73L450.6,337.16L450.04,335.82z\"\n            />\n            <path\n                id=\"PY\"\n                :title=\"countries.getName('PY', codeLang)\"\n                class=\"land\"\n                d=\"M299.49,526.99L300.6,523.4L300.67,521.8L302.01,519.18L306.9,518.32L309.5,518.37L312.12,519.88L312.16,520.79L312.99,522.45L312.81,526.51L315.77,527.09L316.91,526.5L318.8,527.32L319.33,528.22L319.59,530.99L319.92,532.17L320.96,532.3L322.01,531.81L323.02,532.36L323.02,534.04L322.64,535.86L322.09,537.64L321.63,540.39L319.09,542.79L316.87,543.29L313.72,542.81L310.9,541.96L313.66,537.23L313.25,535.86L310.37,534.66L306.94,532.4L304.65,531.94z\"\n            />\n            <path\n                id=\"QA\"\n                :title=\"countries.getName('QA', codeLang)\"\n                class=\"land\"\n                d=\"M617.72,392.16L617.53,389.92L618.29,388.3L619.05,387.96L619.9,388.93L619.95,390.74L619.34,392.55L618.56,392.77z\"\n            />\n            <path\n                id=\"RO\"\n                :title=\"countries.getName('RO', codeLang)\"\n                class=\"land\"\n                d=\"M538.93,310.86L540.14,309.97L541.88,310.43L543.67,310.45L544.97,311.46L545.93,310.82L548,310.42L548.71,309.44L549.89,309.45L550.74,309.85L551.61,311.09L552.5,312.84L554.12,315.28L554.21,317.07L553.91,318.79L554.42,320.62L555.67,321.35L556.98,320.71L558.26,321.39L558.32,322.42L556.96,323.26L556.11,322.9L555.33,327.61L553.68,327.2L551.64,325.79L548.34,326.69L546.95,327.68L542.83,327.48L540.67,326.87L539.59,327.16L538.78,325.56L538.27,324.88L538.92,324.22L538.22,323.73L537.34,324.61L535.71,323.47L535.49,321.84L533.78,320.9L533.47,319.63L531.95,318.05L534.2,317.29L535.89,314.53L537.22,311.73z\"\n            />\n            <path\n                id=\"RS\"\n                :title=\"countries.getName('RS', codeLang)\"\n                class=\"land\"\n                d=\"M533.78,320.9L535.49,321.84L535.71,323.47L537.34,324.61L538.22,323.73L538.92,324.22L538.27,324.88L538.78,325.56L538.09,326.44L538.34,327.86L539.7,329.52L538.63,330.71L538.16,331.92L538.47,332.37L538,332.91L536.71,332.97L535.75,333.19L535.66,332.91L535.99,332.46L536.31,331.53L535.91,331.55L535.36,330.85L534.9,330.67L534.54,330.06L534.01,329.82L533.61,329.28L533.11,329.5L532.72,330.76L532.05,331.04L532.28,330.71L531.21,329.92L530.29,329.51L529.88,328.97L529.14,328.31L529.8,328.14L530.21,326.32L528.86,324.82L529.56,323.1L528.54,323.11L529.62,321.62L528.73,320.48L528.05,318.93L530.2,317.88L531.95,318.05L533.47,319.63z\"\n            />\n            <path\n                id=\"RU\"\n                :title=\"countries.getName('RU', codeLang)\"\n                class=\"land\"\n                d=\"M1008.27,215.75l-2.78,2.97l-4.6,0.7l-0.07,6.46l-1.12,1.35l-2.63,-0.19l-2.14,-2.26l-3.73,-1.92l-0.63,-2.89l-2.85,-1.1l-3.19,0.87l-1.52,-2.37l0.61,-2.55l-3.36,1.64l1.26,3.19l-1.59,2.83l-0.02,0.04l-3.6,2.89l-3.63,-0.48l2.53,3.44l1.67,5.2l1.29,1.67l0.33,2.53l-0.72,1.6l-5.23,-1.32l-7.84,4.51l-2.49,0.69l-4.29,4.1l-4.07,3.5l-1.03,2.55l-4.01,-3.9l-7.31,4.42l-1.28,-2.08l-2.7,2.39l-3.75,-0.76l-0.9,3.63l-3.36,5.22l0.1,2.14l3.19,1.17l-0.38,7.46l-2.6,0.19l-1.2,4.15l1.17,2.1l-4.9,2.47l-0.97,5.4l-4.18,1.14l-0.84,4.66l-4.04,4.18l-1.04,-3.08l-1.2,-6.69l-1.56,-10.65l1.35,-6.95l2.37,-3.07l0.15,-2.44l4.36,-1.18l5.01,-6.78l4.83,-5.73l5.04,-4.57l2.25,-8.37l-3.41,0.51l-1.68,4.92l-7.11,6.36l-2.3,-7.14l-7.24,2l-7.02,9.56l2.32,3.38l-6.26,1.42l-4.33,0.56l0.2,-3.95l-4.36,-0.84l-3.47,2.7l-8.57,-0.94l-9.22,1.62l-9.08,10.33l-10.75,11.78l4.42,0.61l1.38,3l2.72,1.05l1.79,-2.38l3.08,0.31l4.05,5.19l0.09,3.92l-2.19,4.51l-0.24,5.27l-1.26,6.85l-4.23,6.01l-0.94,2.82l-3.81,4.66l-3.78,4.53l-1.81,2.28l-3.74,2.25l-1.77,0.05l-1.76,-1.86l-3.76,2.79l-0.44,1.26l-0.39,-0.66l-0.02,-1.93l1.43,-0.1l0.4,-4.55l-0.74,-3.36l2.41,-1.4l3.4,0.7l1.89,-3.89l0.96,-4.46l1.09,-1.51l1.47,-3.76l-4.63,1.24l-2.43,1.65l-4.26,0l-1.13,-3.95l-3.32,-3.03l-4.88,-1.38l-1.04,-4.28l-0.98,-2.73l-1.05,-1.94l-1.73,-4.61l-2.46,-1.71l-4.2,-1.39l-3.72,0.13l-3.48,0.84l-2.32,2.31l1.54,1.1l0.04,2.52l-1.56,1.45l-2.53,4.72l0.03,1.93l-3.95,2.74l-3.37,-1.63l-3.35,0.36l-1.47,-1.46l-1.68,-0.47l-4.11,3.06l-3.69,0.71l-2.58,1.06l-3.53,-0.7l-2.6,0.04l-1.7,-2.2l-2.75,-2.09l-2.81,-0.58l-3.55,0.57l-2.65,0.81l-3.98,-1.84l-0.53,-3.32l-3.3,-1.15l-2.54,-0.53l-3.14,-1.87l-2.9,4.66l1.14,2.6l-2.73,3.03l-4.05,-1.09l-2.8,-0.16l-1.87,-2.04l-2.92,-0.06l-2.44,-1.35l-4.26,2.07l-5.35,3.74l-2.96,0.74l-1.1,0.35l-1.49,-2.63l-3.61,0.58l-1.19,-1.84l-1.96,-0.85l-1.35,-2.55l-1.55,-0.8l-4.03,1.14l-3.86,-2.57l-1.49,2.33l-6.27,-11.58l-3.58,-3.66l1.03,-1.5l-7.03,4.49l-2.69,0.27l0.23,-2.58l-3.6,-1.63l-2.93,1.17l-0.88,-5.01l-5.04,-1.06l-2.52,2.03l-7.02,1.79l-1.37,1.19l-10.49,1.66l-1.29,1.62l2.02,3.21l-2.69,1.2l0.53,1.25l-2.69,2.22l4.54,3.1l-0.7,2.11l-3.94,-0.19l-0.81,1.31l-3.59,-2.29l-4.45,0.09l-2.98,1.87l-3.32,-1.79l-6.18,-3.1l-4.38,0.12l-5.79,4.85l-0.35,3.19l-2.88,-2.53l-2.24,4.77l0.82,0.87l-1.62,3.21l2.38,2.84l2.08,-0.12l1.79,2.76l-0.28,2.1l1.42,0.66l-1.28,2.39l-2.72,0.66l-2.79,4.09l2.55,3.7l-0.28,2.59l3.06,4.46l-1.67,1.51l-0.48,0.95l-1.24,-0.25l-1.93,-2.27l-0.79,-0.13l-1.76,-0.87l-0.86,-1.55l-2.62,-0.79l-1.7,0.6l-0.49,-0.71l-3.82,-1.83l-4.13,-0.62l-2.37,-0.66l-0.34,0.45l-3.57,-3.27l-3.2,-1.48l-2.42,-2.32l2.04,-0.64l2.33,-3.35l-1.57,-1.6l4.13,-1.67l-0.07,-0.9l-2.52,0.66l0.09,-1.83l1.45,-1.16l2.71,-0.31l0.44,-1.4l-0.62,-2.33l1.14,-2.23l-0.03,-1.26l-4.13,-1.41l-1.64,0.05l-1.73,-2.04l-2.15,0.69l-3.56,-1.54l0.06,-0.87l-1,-1.93l-2.24,-0.22l-0.23,-1.39l0.7,-0.91l-1.79,-2.58l-2.91,0.44l-0.85,-0.23l-0.71,1.04l-1.05,-0.18l-0.69,-2.94l-0.66,-1.54l0.54,-0.44l2.26,0.16l1.09,-1.02l-0.81,-1.25l-1.89,-0.83l0.17,-0.86l-1.14,-0.87l-1.76,-3.15l0.6,-1.31l-0.27,-2.31l-2.74,-1.18l-1.47,0.59l-0.4,-1.24l-2.95,-1.26l-0.9,-2.99l-0.24,-2.49l-1.35,-1.19l1.2,-1.66l-0.83,-4.96l2,-3.13l-0.42,-0.96l3.19,-3.07l-2.94,-2.68l6,-7.41l2.6,-3.45l1.05,-3.1l-4.15,-4.26l1.15,-4.15l-2.52,-4.85l1.89,-5.76l-3.26,-7.96l2.59,-5.48l-4.29,-4.99l0.41,-5.4l2.26,-0.72l4.77,-3.19l2.89,-2.81l4.61,4.86l7.68,1.88l10.59,8.65l2.15,3.51l0.19,4.8l-3.11,3.69l-4.58,1.85l-12.52,-5.31l-2.06,0.9l4.57,5.1l0.18,3.15l0.18,6.75l3.61,1.97l2.19,1.66l0.36,-3.11l-1.69,-2.8l1.78,-2.51l6.78,4.1l2.36,-1.59l-1.89,-4.88l6.53,-6.74l2.59,0.4l2.62,2.43l1.63,-4.81l-2.34,-4.28l1.37,-4.41l-2.06,-4.69l7.84,2.44l1.6,4.18l-3.55,0.91l0.02,4.04l2.21,2.44l4.33,-1.54l0.69,-4.61l5.86,-3.52l9.79,-6.54l2.11,0.38l-2.76,4.64l3.48,0.78l2.01,-2.58l5.25,-0.21l4.16,-3.19l3.2,4.62l3.19,-5.09l-2.94,-4.58l1.46,-2.66l8.28,2.44l3.88,2.49l10.16,8.8l1.88,-3.97l-2.85,-4.11l-0.08,-1.68l-3.38,-0.78l0.92,-3.83l-1.5,-6.49l-0.08,-2.74l5.17,-7.99l1.84,-8.42l2.08,-1.88l7.42,2.51l0.58,5.18l-2.66,7.28l1.74,2.78l0.9,5.94l-0.64,11.07l3.09,4.73l-1.2,5.01l-5.49,10.2l3.21,1.02l1.12,-2.51l3.08,-1.82l0.74,-3.55l2.43,-3.49l-1.63,-4.26l1.31,-5.08l-3.07,-0.64l-0.67,-4.42l2.24,-8.28l-3.64,-7.03l5.02,-6.04l-0.65,-6.62l1.4,-0.22l1.47,5.19l-1.11,8.67l3,1.59l-1.28,-6.37l4.69,-3.58l5.82,-0.49l5.18,5.18l-2.49,-7.62l-0.28,-10.28l4.88,-2.02l6.74,0.44l6.08,-1.32l-2.28,-5.38l3.25,-7.02l3.22,-0.3l5.45,-5.51l7.4,-1.51l0.94,-3.15l7.36,-1.08l2.29,2.61l6.29,-6.24l5.15,0.2l0.77,-5.24l2.68,-5.33l6.62,-5.31l4.81,4.21l-3.82,3.13l6.35,1.92l0.76,6.03l2.56,-2.94l8.2,0.16l6.32,5.84l2.25,4.35l-0.7,5.85l-3.1,3.24l-7.37,5.92l-2.11,3.08l3.48,1.43l4.15,2.55l2.52,-1.91l1.43,6.39l1.23,-2.56l4.48,-1.57l9,1.65l0.68,4.58l11.72,1.43l0.16,-7.47l5.95,1.74l4.48,-0.05l4.53,5.14l1.29,6.04l-1.66,3.84l3.52,6.98l4.41,3.49l2.71,-9.18l4.5,4l4.78,-2.38l5.43,2.72l2.07,-2.47l4.59,1.24l-2.02,-8.4l3.7,-4.07l25.32,6.06l2.39,5.35l7.34,6.65l11.32,-1.62l5.58,1.41l2.33,3.5l-0.34,6.02l3.45,2.29l3.75,-1.64l4.97,-0.21l5.29,1.57l5.31,-0.89l4.88,6.99l3.47,-2.48l-2.27,-5.07l1.25,-3.62l8.95,2.29l5.83,-0.49l8.06,3.84l3.92,3.44l6.87,5.86l7.35,7.34l-0.24,4.44l1.89,1.74l-0.65,-5.15l7.61,1.07L1008.27,215.75zM880.84,306.25l-2.82,-7.68l-1.16,-4.51l0.07,-4.5l-0.97,-4.5l-0.73,-3.15l-1.25,0.67l1.11,2.21l-2.59,2.17l-0.25,6.3l1.64,4.41l-0.12,5.85l-0.65,3.24l0.32,4.54l-0.31,4.01l0.52,3.4l1.84,-3.13l2.13,2.44l0.08,-2.84l-2.73,-4.23l1.72,-6.11L880.84,306.25zM537.82,278.77l-2.94,-0.86l-3.87,1.58l-0.64,2.13l3.45,0.55l5.16,-0.07l-0.22,-1.23l0.3,-1.33L537.82,278.77zM979.95,178.65l3.66,-0.52l2.89,-2.06l0.24,-1.19l-4.06,-2.51l-2.38,-0.02l-0.36,0.37l-3.57,3.64l0.5,2.73L979.95,178.65zM870.07,151.56l-2.66,3.92l0.49,0.52l5.75,1.08l4.25,-0.07l-0.34,-2.57l-3.98,-3.81L870.07,151.56zM894.64,142.03l3.24,-4.25l-7.04,-2.88l-5.23,-1.68l-0.67,3.59l5.21,4.27L894.64,142.03zM869.51,140.34l10.33,0.3l2.21,-8.14l-10.13,-6.07l-7.4,-0.51l-3.7,2.18l-1.51,7.75l5.55,7.01L869.51,140.34zM622.39,166.28l-2.87,1.96l0.41,4.83l5.08,2.35l0.74,3.82l9.16,1.1l1.66,-0.74l-5.36,-7.11l-0.57,-7.52l4.39,-9.14l4.18,-9.82l8.71,-10.17l8.56,-5.34l9.93,-5.74l1.88,-3.71l-1.95,-4.83l-5.46,1.6l-4.8,4.49l-9.33,2.22l-9.26,7.41l-6.27,5.85l0.76,4.87l-6.71,9.03l2.58,1.22l-5.56,8.27L622.39,166.28zM769.87,98.34l0.83,-5.72l-7.11,-8.34l-2.11,-0.98l-2.3,1.7l-5.12,18.6L769.87,98.34zM605.64,69.03l3.04,3.88l3.28,-2.69l0.39,-2.72l2.52,-1.27l3.76,-2.23l1.08,-2.62l-4.16,-3.85l-2.64,2.9l-1.61,4.12l-0.57,-4.65l-4.26,0.21L601,63.25l6.24,0.52L605.64,69.03zM736.89,82.07l4.65,5.73l7.81,4.2l6.12,-1.8l0.69,-13.62l-6.46,-16.04l-5.45,-9.02l-6.07,4.11l-7.28,11.83l3.83,3.27L736.89,82.07z\"\n            />\n            <path\n                id=\"RW\"\n                :title=\"countries.getName('RW', codeLang)\"\n                class=\"land\"\n                d=\"M560.54,466.55L561.66,468.12L561.49,469.76L560.69,470.11L559.2,469.93L558.34,471.52L556.63,471.3L556.89,469.77L557.28,469.56L557.38,467.9L558.19,467.12L558.87,467.41z\"\n            />\n            <path\n                id=\"SA\"\n                :title=\"countries.getName('SA', codeLang)\"\n                class=\"land\"\n                d=\"M595.2,417.22L594.84,415.98L593.99,415.1L593.77,413.93L592.33,412.89L590.83,410.43L590.04,408.02L588.1,405.98L586.85,405.5L584.99,402.65L584.67,400.57L584.79,398.78L583.18,395.42L581.87,394.23L580.35,393.6L579.43,391.84L579.58,391.15L578.8,389.55L577.98,388.86L576.89,386.54L575.18,384.02L573.75,381.86L572.36,381.87L572.79,380.13L572.92,379.02L573.26,377.74L576.38,378.25L577.6,377.27L578.27,376.11L580.41,375.67L580.87,374.58L581.8,374.04L579,370.78L584.62,369.13L585.15,368.64L588.53,369.53L592.71,371.82L600.61,378.31L605.82,378.57L608.32,378.88L609.02,380.39L611,380.31L612.1,383.04L613.48,383.75L613.96,384.86L615.87,386.17L616.04,387.46L615.76,388.49L616.12,389.53L616.92,390.4L617.3,391.41L617.72,392.16L618.56,392.77L619.34,392.55L619.87,393.72L619.98,394.43L621.06,397.51L629.48,399.03L630.05,398.39L631.33,400.53L629.46,406.5L621.05,409.46L612.97,410.59L610.35,411.91L608.34,414.98L607.03,415.46L606.33,414.49L605.26,414.64L602.55,414.35L602.03,414.05L598.8,414.12L598.04,414.39L596.89,413.63L596.14,415.06L596.43,416.29z\"\n            />\n            <path\n                id=\"SB\"\n                :title=\"countries.getName('SB', codeLang)\"\n                class=\"land\"\n                d=\"M929.81,492.75l0.78,0.97l-1.96,-0.02l-1.07,-1.74l1.67,0.69L929.81,492.75zM926.26,491.02l-1.09,0.06l-1.72,-0.29l-0.59,-0.44l0.18,-1.12l1.85,0.44l0.91,0.59L926.26,491.02zM928.58,490.25l-0.42,0.52l-2.08,-2.45l-0.58,-1.68h0.95l1.01,2.25L928.58,490.25zM923.52,486.69l0.12,0.57l-2.2,-1.19l-1.54,-1.01l-1.05,-0.94l0.42,-0.29l1.29,0.67l2.3,1.29L923.52,486.69zM916.97,483.91l-0.56,0.16l-1.23,-0.64l-1.15,-1.15l0.14,-0.47l1.67,1.18L916.97,483.91z\"\n            />\n            <path\n                id=\"SD\"\n                :title=\"countries.getName('SD', codeLang)\"\n                class=\"land\"\n                d=\"M570.48,436.9L570.09,436.85L570.14,435.44L569.8,434.47L568.36,433.35L568.02,431.3L568.36,429.2L567.06,429.01L566.87,429.64L565.18,429.79L565.86,430.62L566.1,432.33L564.56,433.89L563.16,435.93L561.72,436.22L559.36,434.57L558.3,435.15L558.01,435.98L556.57,436.51L556.47,437.09L553.68,437.09L553.29,436.51L551.27,436.41L550.26,436.9L549.49,436.65L548.05,435L547.57,434.23L545.54,434.62L544.77,435.93L544.05,438.45L543.09,438.98L542.23,439.29L542,439.15L541.03,438.34L540.85,437.47L541.3,436.29L541.3,435.14L539.68,433.37L539.36,432.15L539.39,431.46L538.36,430.63L538.33,428.97L537.75,427.87L536.76,428.04L537.04,426.99L537.77,425.79L537.45,424.61L538.37,423.73L537.79,423.06L538.53,421.28L539.81,419.15L542.23,419.35L542.09,407.74L542.13,406.5L545.35,406.49L545.35,400.53L556.62,400.53L567.5,400.53L578.62,400.53L579.52,403.47L578.91,404.01L579.32,407.07L580.35,410.59L581.41,411.32L582.95,412.4L581.53,414.07L579.46,414.55L578.58,415.45L578.31,417.38L577.1,421.63L577.4,422.78L576.95,425.25L575.81,428.06L574.12,429.48L572.92,431.65L572.63,432.81L571.31,433.61L570.48,436.57z\"\n            />\n            <path\n                id=\"SE\"\n                :title=\"countries.getName('SE', codeLang)\"\n                class=\"land\"\n                d=\"M537.45,217.49L534.73,222.18L535.17,226.2L530.71,231.33L525.3,236.67L523.25,245.08L525.25,249.15L527.93,252.29L525.36,258.52L522.44,259.78L521.37,268.62L519.78,273.38L516.38,272.89L514.79,276.84L511.54,277.07L510.65,272.36L508.3,266.55L506.17,259.05L507.41,255.9L509.74,252.09L510.67,245.36L508.88,242.38L508.7,234.34L510.53,228.43L513.31,228.54L514.28,225.99L513.26,223.76L517.61,214.26L520.42,206.39L522.27,201.15L524.96,201.17L525.71,196.96L530.99,198.18L531.4,193.1L533.14,192.77L536.88,196.58L541.25,201.73L541.33,212.85L542.27,215.55z\"\n            />\n            <path\n                id=\"SI\"\n                :title=\"countries.getName('SI', codeLang)\"\n                class=\"land\"\n                d=\"M513.96,316.51L516.28,316.82L517.7,315.9L520.15,315.8L520.68,315.11L521.15,315.16L521.7,316.53L519.47,317.61L519.19,319.23L518.22,319.64L518.23,320.76L517.13,320.68L516.18,320.03L515.66,320.71L513.71,320.57L514.33,320.21L513.66,318.5z\"\n            />\n            <path\n                id=\"SJ\"\n                :title=\"countries.getName('SJ', codeLang)\"\n                class=\"land\"\n                d=\"M544.58,104.49l-6.26,5.36l-4.95,-3.02l1.94,-3.42l-1.69,-4.34l5.81,-2.78l1.11,5.18L544.58,104.49zM526.43,77.81l9.23,11.29l-7.06,5.66l-1.56,10.09l-2.46,2.49l-1.33,10.51l-3.38,0.48l-6.03,-7.64l2.54,-4.62l-4.2,-3.86l-5.46,-11.82l-2.18,-11.79l7.64,-5.69l1.54,5.56l3.99,-0.22l1.06,-5.43l4.12,-0.56L526.43,77.81zM546.6,66.35l5.5,5.8l-4.16,8.52l-8.13,1.81l-8.27,-2.56l-0.5,-4.32l-4.02,-0.28l-3.07,-7.48l8.66,-4.72l4.07,4.08l2.84,-5.09L546.6,66.35z\"\n            />\n            <path\n                id=\"SK\"\n                :title=\"countries.getName('SK', codeLang)\"\n                class=\"land\"\n                d=\"M528.11,304.02L528.27,304.28L529.43,303.7L530.84,305.22L532.5,304.3L533.82,304.74L535.84,304.14L538.5,305.78L537.73,306.89L537.18,308.6L536.58,309.03L533.58,307.75L532.66,308L532,309L530.68,309.52L530.38,309.25L529.02,309.9L527.9,310.03L527.68,310.87L525.32,311.38L524.29,310.92L522.86,309.85L522.58,308.4L522.81,307.86L523.2,306.93L524.45,307L525.4,306.56L525.48,306.17L526.02,305.96L526.2,304.99L526.84,304.8L527.28,304.03z\"\n            />\n            <path\n                id=\"SL\"\n                :title=\"countries.getName('SL', codeLang)\"\n                class=\"land\"\n                d=\"M443.18,444.44L442.42,444.23L440.41,443.1L438.95,441.6L438.46,440.57L438.11,438.49L439.61,437.25L439.93,436.46L440.41,435.85L441.19,435.79L441.84,435.26L444.08,435.26L444.86,436.27L445.47,437.46L445.38,438.28L445.83,439.02L445.8,440.05L446.57,439.89L445.26,441.2L444,442.73L443.85,443.54z\"\n            />\n            <path\n                id=\"SN\"\n                :title=\"countries.getName('SN', codeLang)\"\n                class=\"land\"\n                d=\"M428.39,425.16L427.23,422.92L425.83,421.9L427.07,421.35L428.43,419.32L429.09,417.83L430.05,416.9L431.45,417.15L432.81,416.52L434.38,416.49L435.72,417.34L437.58,418.11L439.28,420.24L441.13,422.22L441.26,424.01L441.81,425.65L442.86,426.46L443.1,427.56L442.97,428.45L442.56,428.61L441.04,428.39L440.83,428.7L440.21,428.77L438.19,428.07L436.84,428.04L431.66,427.92L430.91,428.24L429.98,428.15L428.49,428.62L428.03,426.43L430.58,426.49L431.26,426.09L431.76,426.06L432.8,425.4L434,426.01L435.22,426.06L436.43,425.41L435.87,424.59L434.94,425.07L434.07,425.06L432.97,424.35L432.08,424.4L431.44,425.07z\"\n            />\n            <path\n                id=\"SO\"\n                :title=\"countries.getName('SO', codeLang)\"\n                class=\"land\"\n                d=\"M618.63,430.43L618.56,429.64L617.5,429.65L616.17,430.63L614.68,430.91L613.39,431.33L612.5,431.39L610.9,431.49L609.9,432.01L608.51,432.2L606.04,433.08L602.99,433.41L600.34,434.14L598.95,434.13L597.69,432.94L597.14,431.77L596.23,431.24L595.19,432.76L594.58,433.77L595.62,435.33L596.65,436.69L597.72,437.7L606.89,441.04L609.25,441.02L601.32,449.44L597.67,449.56L595.17,451.53L593.38,451.58L592.61,452.46L590.16,455.63L590.19,465.78L591.85,468.07L592.48,467.41L593.13,465.95L596.2,462.57L598.81,460.45L603.01,457.69L605.81,455.43L609.11,451.62L611.5,448.49L613.91,444.39L615.64,440.8L616.99,437.65L617.78,434.6L618.38,433.58L618.37,432.08z\"\n            />\n            <path\n                id=\"SR\"\n                :title=\"countries.getName('SR', codeLang)\"\n                class=\"land\"\n                d=\"M315.02,446.72L318.38,447.28L318.68,446.77L320.95,446.57L323.96,447.33L322.5,449.73L322.72,451.64L323.83,453.3L323.34,454.5L323.09,455.77L322.37,456.94L320.77,456.35L319.44,456.64L318.31,456.39L318.03,457.2L318.5,457.75L318.25,458.32L316.72,458.09L315.01,455.67L314.64,454.1L313.75,454.09L312.5,452.07L313.02,450.62L312.87,449.97L314.57,449.24z\"\n            />\n            <path\n                id=\"SS\"\n                :title=\"countries.getName('SS', codeLang)\"\n                class=\"land\"\n                d=\"M570.48,436.9L570.51,439.1L570.09,439.96L568.61,440.03L567.65,441.64L569.37,441.84L570.79,443.21L571.29,444.33L572.57,444.98L574.22,448.03L572.32,449.87L570.6,451.54L568.87,452.82L566.9,452.82L564.64,453.47L562.86,452.84L561.71,453.61L559.24,451.75L558.57,450.56L557.01,451.15L555.71,450.96L554.96,451.43L553.7,451.1L552.01,448.79L551.56,447.9L549.46,446.79L548.75,445.11L547.58,443.9L545.7,442.44L545.67,441.52L544.14,440.39L542.23,439.29L543.09,438.98L544.05,438.45L544.77,435.93L545.54,434.62L547.57,434.23L548.05,435L549.49,436.65L550.26,436.9L551.27,436.41L553.29,436.51L553.68,437.09L556.47,437.09L556.57,436.51L558.01,435.98L558.3,435.15L559.36,434.57L561.72,436.22L563.16,435.93L564.56,433.89L566.1,432.33L565.86,430.62L565.18,429.79L566.87,429.64L567.06,429.01L568.36,429.2L568.02,431.3L568.36,433.35L569.8,434.47L570.14,435.44L570.09,436.85z\"\n            />\n            <path\n                id=\"SV\"\n                :title=\"countries.getName('SV', codeLang)\"\n                class=\"land\"\n                d=\"M229.09,425.76L228.78,426.43L227.16,426.39L226.15,426.12L224.99,425.55L223.43,425.37L222.64,424.75L222.73,424.33L223.69,423.61L224.21,423.29L224.06,422.95L224.72,422.78L225.55,423.02L226.15,423.59L227,424.05L227.1,424.44L228.33,424.1L228.91,424.3L229.29,424.61z\"\n            />\n            <path\n                id=\"SY\"\n                :title=\"countries.getName('SY', codeLang)\"\n                class=\"land\"\n                d=\"M584.02,364.6L578.53,368.14L575.41,366.82L575.35,366.8L575.73,366.3L575.69,364.93L576.38,363.1L577.91,361.83L577.45,360.51L576.19,360.33L575.93,357.72L576.61,356.31L577.36,355.56L578.11,354.8L578.27,352.86L579.18,353.54L582.27,352.57L583.76,353.22L586.07,353.21L589.29,351.9L590.81,351.96L594,351.42L592.56,353.6L591.02,354.46L591.29,356.98L590.23,361.1z\"\n            />\n            <path\n                id=\"SZ\"\n                :title=\"countries.getName('SZ', codeLang)\"\n                class=\"land\"\n                d=\"M565.18,540.74L564.61,542.13L562.97,542.46L561.29,540.77L561.27,539.69L562.03,538.52L562.3,537.62L563.11,537.4L564.52,537.97L564.94,539.36z\"\n            />\n            <path\n                id=\"TD\"\n                :title=\"countries.getName('TD', codeLang)\"\n                class=\"land\"\n                d=\"M515.9,427.26L516.18,425.92L514.38,425.85L514.39,424L513.22,422.94L514.43,419.14L518.01,416.4L518.15,412.61L519.23,406.63L519.84,405.35L518.68,404.33L518.63,403.38L517.58,402.6L516.89,397.93L519.72,396.27L530.91,402.04L542.09,407.74L542.23,419.35L539.81,419.15L538.53,421.28L537.79,423.06L538.37,423.73L537.45,424.61L537.77,425.79L537.04,426.99L536.76,428.04L537.75,427.87L538.33,428.97L538.36,430.63L539.39,431.46L539.36,432.15L537.59,432.64L536.16,433.78L534.14,436.87L531.5,438.18L528.79,438L528,438.26L528.28,439.25L526.81,440.24L525.62,441.34L522.09,442.41L521.39,441.78L520.93,441.72L520.41,442.44L518.09,442.66L518.53,441.89L517.65,439.96L517.25,438.79L516.03,438.31L514.38,436.66L514.99,435.33L516.27,435.61L517.06,435.41L518.62,435.44L517.1,432.87L517.2,430.98L517.01,429.09z\"\n            />\n            <path\n                id=\"TF\"\n                :title=\"countries.getName('TF', codeLang)\"\n                class=\"land\"\n                d=\"M668.54,619.03L670.34,620.36L672.99,620.9L673.09,621.71L672.31,623.67L668,623.95L667.93,621.66L668.35,619.9z\"\n            />\n            <path\n                id=\"TG\"\n                :title=\"countries.getName('TG', codeLang)\"\n                class=\"land\"\n                d=\"M480.48,446.25L478.23,446.84L477.6,445.86L476.85,444.08L476.63,442.68L477.25,440.15L476.55,439.12L476.28,436.9L476.28,434.85L475.11,433.39L475.32,432.5L477.78,432.56L477.42,434.06L478.27,434.89L479.25,435.88L479.35,437.27L479.92,437.85L479.79,444.31z\"\n            />\n            <path\n                id=\"TH\"\n                :title=\"countries.getName('TH', codeLang)\"\n                class=\"land\"\n                d=\"M762.89,429.18L760.37,427.87L757.97,427.93L758.38,425.68L755.91,425.7L755.69,428.84L754.18,432.99L753.27,435.49L753.46,437.54L755.28,437.63L756.42,440.2L756.93,442.63L758.49,444.24L760.19,444.57L761.64,446.02L760.73,447.17L758.87,447.51L758.65,446.07L756.37,444.84L755.88,445.34L754.77,444.27L754.29,442.88L752.8,441.29L751.44,439.96L750.98,441.61L750.45,440.05L750.76,438.29L751.58,435.58L752.94,432.67L754.48,430.02L753.38,427.42L753.43,426.09L753.11,424.49L751.24,422.21L750.57,420.76L751.54,420.23L752.56,417.71L751.42,415.79L749.64,413.66L748.28,411.09L749.46,410.56L750.74,407.37L752.72,407.23L754.36,405.95L755.96,405.26L757.18,406.18L757.34,407.96L759.23,408.09L758.54,411.2L758.61,413.82L761.56,412.08L762.4,412.59L764.05,412.51L764.61,411.49L766.73,411.69L768.86,414.07L769.04,416.94L771.31,419.47L771.18,421.91L770.27,423.21L767.64,422.8L764.02,423.35L762.22,425.73z\"\n            />\n            <path\n                id=\"TJ\"\n                :title=\"countries.getName('TJ', codeLang)\"\n                class=\"land\"\n                d=\"M674.37,340.62L673.34,341.75L670.29,341.14L670.02,343.24L673.06,342.96L676.53,344.13L681.83,343.58L682.54,346.91L683.46,346.55L685.16,347.36L685.07,348.74L685.49,350.75L682.59,350.75L680.66,350.49L678.92,352.06L677.67,352.4L676.69,353.14L675.58,351.99L675.85,349.04L675,348.87L675.3,347.78L673.79,346.98L672.58,348.21L672.28,349.64L671.85,350.16L670.17,350.09L669.27,351.69L668.32,351.02L666.29,352.14L665.44,351.72L667.01,348.15L666.41,345.49L664.35,344.63L665.08,343.04L667.42,343.21L668.75,341.2L669.64,338.85L673.39,337.99L672.81,339.7L673.21,340.72z\"\n            />\n            <path\n                id=\"TL\"\n                :title=\"countries.getName('TL', codeLang)\"\n                class=\"land\"\n                d=\"M825.65,488.25L825.98,487.59L828.39,486.96L830.35,486.86L831.22,486.51L832.28,486.86L831.25,487.62L828.33,488.85L825.98,489.67L825.93,488.81z\"\n            />\n            <path\n                id=\"TM\"\n                :title=\"countries.getName('TM', codeLang)\"\n                class=\"land\"\n                d=\"M646.88,356.9L646.63,353.99L644.54,353.87L641.34,350.78L639.1,350.39L636,348.6L634,348.27L632.77,348.93L630.9,348.83L628.91,350.85L626.44,351.53L625.92,349.04L626.33,345.31L624.14,344.09L624.86,341.61L623,341.39L623.62,338.3L626.26,339.21L628.73,338.02L626.68,335.79L625.88,333.65L623.62,334.61L623.34,337.34L622.46,334.93L623.7,333.68L626.88,332.89L628.78,333.95L630.74,336.88L632.18,336.7L635.34,336.65L634.88,334.77L637.28,333.47L639.64,331.27L643.42,333.27L643.72,336.26L644.79,337.03L647.82,336.86L648.76,337.53L650.14,341.32L653.35,343.83L655.18,345.52L658.11,347.27L661.84,348.79L661.76,350.95L660.92,350.84L659.59,349.9L659.15,351.15L656.79,351.83L656.23,354.62L654.65,355.67L652.44,356.19L651.85,357.74L649.74,358.2z\"\n            />\n            <path\n                id=\"TN\"\n                :title=\"countries.getName('TN', codeLang)\"\n                class=\"land\"\n                d=\"M501.84,374.69L500.64,368.83L498.92,367.5L498.89,366.69L496.6,364.71L496.35,362.18L498.08,360.3L498.74,357.48L498.29,354.2L498.86,352.41L501.92,351L503.88,351.42L503.8,353.19L506.18,351.9L506.38,352.57L504.97,354.28L504.96,355.88L505.93,356.73L505.56,359.69L503.71,361.4L504.24,363.23L505.69,363.29L506.4,364.88L507.47,365.4L507.31,367.95L505.94,368.9L505.08,369.95L503.15,371.21L503.45,372.56L503.21,373.94z\"\n            />\n            <path\n                id=\"TR\"\n                :title=\"countries.getName('TR', codeLang)\"\n                class=\"land\"\n                d=\"M578.75,336.6l4.02,1.43l3.27,-0.57l2.41,0.33l3.31,-1.94l2.99,-0.18l2.7,1.83l0.48,1.3l-0.27,1.79l2.08,0.91l1.1,1.06l-1.92,1.03l0.88,4.11l-0.55,1.1l1.53,2.82l-1.34,0.59l-0.98,-0.89l-3.26,-0.45l-1.2,0.55l-3.19,0.54l-1.51,-0.06l-3.23,1.31l-2.31,0.01l-1.49,-0.66l-3.09,0.97l-0.92,-0.68l-0.15,1.94l-0.75,0.76l-0.75,0.76l-1.03,-1.57l1.06,-1.3l-1.71,0.3l-2.35,-0.8l-1.93,2l-4.26,0.39l-2.27,-1.86l-3.02,-0.12l-0.65,1.44l-1.94,0.41l-2.71,-1.85l-3.06,0.06l-1.66,-3.48l-2.05,-1.96l1.36,-2.78l-1.78,-1.72l3.11,-3.48l4.32,-0.15l1.18,-2.81l5.34,0.49l3.37,-2.42l3.27,-1.06l4.64,-0.08L578.75,336.6zM551.5,338.99l-2.34,1.98l-0.88,-1.71l0.04,-0.76l0.67,-0.41l0.87,-2.33l-1.37,-0.99l2.86,-1.18l2.41,0.5l0.33,1.44l2.45,1.2l-0.51,0.91l-3.33,0.2L551.5,338.99z\"\n            />\n            <path\n                id=\"TT\"\n                :title=\"countries.getName('TT', codeLang)\"\n                class=\"land\"\n                d=\"M302.31,433.24L303.92,432.87L304.51,432.97L304.4,435.08L302.06,435.39L301.55,435.14L302.37,434.36z\"\n            />\n            <path\n                id=\"TW\"\n                :title=\"countries.getName('TW', codeLang)\"\n                class=\"land\"\n                d=\"M816.7,393.27L815.01,398.14L813.81,400.62L812.33,398.07L812.01,395.82L813.66,392.82L815.91,390.5L817.19,391.41z\"\n            />\n            <path\n                id=\"TZ\"\n                :title=\"countries.getName('TZ', codeLang)\"\n                class=\"land\"\n                d=\"M570.31,466.03L570.79,466.34L580.95,472.01L581.15,473.63L585.17,476.42L583.88,479.87L584.04,481.46L585.84,482.48L585.92,483.21L585.15,484.91L585.31,485.76L585.13,487.11L586.11,488.87L587.27,491.66L588.29,492.28L586.06,493.92L583,495.02L581.32,494.98L580.32,495.83L578.37,495.9L577.63,496.26L574.26,495.46L572.15,495.69L571.37,491.83L570.42,490.51L569.85,489.73L567.11,489.21L565.51,488.36L563.73,487.89L562.61,487.41L561.44,486.7L559.93,483.15L558.3,481.58L557.74,479.96L558.02,478.5L557.52,475.93L558.68,475.8L559.69,474.79L560.79,473.33L561.48,472.75L561.45,471.84L560.85,471.21L560.69,470.11L561.49,469.76L561.66,468.12L560.54,466.55L561.53,466.21L564.6,466.25z\"\n            />\n            <path\n                id=\"UA\"\n                :title=\"countries.getName('UA', codeLang)\"\n                class=\"land\"\n                d=\"M564.38,292.49L565.42,292.68L566.13,291.64L566.98,291.87L569.89,291.43L571.68,294L570.98,294.92L571.21,296.31L573.45,296.52L574.45,298.45L574.39,299.32L577.95,300.86L580.1,300.17L581.83,302.21L583.47,302.17L587.6,303.57L587.63,304.84L586.5,307.07L587.11,309.4L586.67,310.79L583.96,311.1L582.52,312.26L582.43,314.09L580.19,314.42L578.32,315.74L575.7,315.95L573.28,317.47L571.96,318.5L573.45,319.97L574.82,320.93L577.68,320.69L577.13,322.11L574.06,322.79L570.25,325.06L568.7,324.27L569.31,322.42L566.25,321.26L566.75,320.49L569.91,318.86L569.51,318.05L569.06,318.46L568.62,318.24L564.26,317.22L564.07,315.71L561.47,316.21L560.43,318.44L558.26,321.39L556.98,320.71L555.67,321.35L554.42,320.62L555.12,320.18L555.61,318.81L556.38,317.52L556.18,316.8L556.77,316.48L557.04,317.04L558.7,317.15L559.44,316.86L558.92,316.44L559.11,315.84L558.13,314.8L557.73,313.08L556.71,312.41L556.91,311L555.64,309.88L554.49,309.72L552.42,308.41L550.56,308.83L549.89,309.45L548.71,309.44L548,310.42L545.93,310.82L544.98,311.46L543.67,310.45L541.88,310.43L540.14,309.97L538.93,310.86L538.73,309.74L537.18,308.6L537.73,306.89L538.5,305.79L539.12,306.03L538.39,304.11L540.94,300.5L542.33,299.99L542.63,298.75L541.22,294.86L542.56,294.69L544.1,293.46L546.27,293.36L549.1,293.72L552.23,294.8L554.44,294.89L555.49,295.54L556.54,294.76L557.28,295.81L559.81,295.59L560.92,296.02L561.11,293.76L561.97,292.76z\"\n            />\n            <path\n                id=\"UG\"\n                :title=\"countries.getName('UG', codeLang)\"\n                class=\"land\"\n                d=\"M564.6,466.25L561.53,466.21L560.54,466.55L558.87,467.41L558.19,467.12L558.21,465.02L558.86,463.96L559.02,461.72L559.61,460.43L560.68,458.97L561.76,458.23L562.66,457.24L561.54,456.87L561.71,453.61L562.86,452.84L564.64,453.47L566.9,452.82L568.87,452.82L570.6,451.54L571.93,453.48L572.26,454.88L573.49,458.08L572.47,460.11L571.09,461.95L570.29,463.08L570.31,466.03z\"\n            />\n            <path\n                id=\"US\"\n                :title=\"countries.getName('US', codeLang)\"\n                class=\"land\"\n                d=\"M109.25,279.8L109.25,279.8l-1.54,-1.83l-2.47,-1.57l-0.79,-4.36l-3.61,-4.13l-1.51,-4.94l-2.69,-0.34l-4.46,-0.13l-3.29,-1.54l-5.8,-5.64l-2.68,-1.05l-4.9,-1.99l-3.88,0.48l-5.51,-2.59l-3.33,-2.43l-3.11,1.21l0.58,3.93l-1.55,0.36l-3.24,1.16l-2.47,1.86l-3.11,1.16l-0.4,-3.24l1.26,-5.53l2.98,-1.77l-0.77,-1.46l-3.57,3.22l-1.91,3.77l-4.04,3.95l2.05,2.65l-2.65,3.85l-3.01,2.21l-2.81,1.59l-0.69,2.29l-4.38,2.63l-0.89,2.36l-3.28,2.13l-1.92,-0.38l-2.62,1.38l-2.85,1.67l-2.33,1.63l-4.81,1.38l-0.44,-0.81l3.07,-2.27l2.74,-1.51l2.99,-2.71l3.48,-0.56l1.38,-2.06l3.89,-3.05l0.63,-1.03l2.07,-1.83l0.48,-4l1.43,-3.17l-3.23,1.64l-0.9,-0.93l-1.52,1.95l-1.83,-2.73l-0.76,1.94l-1.05,-2.7l-2.8,2.17l-1.72,0l-0.24,-3.23l0.51,-2.02l-1.81,-1.98l-3.65,1.07l-2.37,-2.63l-1.92,-1.36l-0.01,-3.25l-2.16,-2.48l1.08,-3.41l2.29,-3.37l1,-3.15l2.27,-0.45l1.92,0.99l2.26,-3.01l2.04,0.54l2.14,-1.96l-0.52,-2.92l-1.57,-1.16l2.08,-2.52l-1.72,0.07l-2.98,1.43l-0.85,1.43l-2.21,-1.43l-3.97,0.73l-4.11,-1.56l-1.18,-2.65l-3.55,-3.91l3.94,-2.87l6.25,-3.41h2.31l-0.38,3.48l5.92,-0.27l-2.28,-4.34l-3.45,-2.72l-1.99,-3.64l-2.69,-3.17l-3.85,-2.38l1.57,-4.03l4.97,-0.25l3.54,-3.58l0.67,-3.92l2.86,-3.91l2.73,-0.95l5.31,-3.76l2.58,0.57l4.31,-4.61l4.24,1.83l2.03,3.87l1.25,-1.65l4.74,0.51l-0.17,1.95l4.29,1.43l2.86,-0.84l5.91,2.64l5.39,0.78l2.16,1.07l3.73,-1.34l4.25,2.46l3.05,1.13l-0.02,27.65l-0.01,35.43l2.76,0.17l2.73,1.56l1.96,2.44l2.49,3.6l2.73,-3.05l2.81,-1.79l1.49,2.85l1.89,2.23l2.57,2.42l1.75,3.79l2.87,5.88l4.77,3.2l0.08,3.12L109.25,279.8zM285.18,314.23l-1.25,-1.19l-1.88,0.7l-0.93,-1.08l-2.14,3.1l-0.86,3.15l-1,1.82l-1.19,0.62l-0.9,0.2l-0.28,0.98l-5.17,0l-4.26,0.03l-1.27,0.73l-2.87,2.73l0.29,0.54l0.17,1.51l-2.1,1.27l-2.3,-0.32l-2.2,-0.14l-1.33,0.44l0.25,1.15l0,0l0.05,0.37l-2.42,2.27l-2.11,1.09l-1.44,0.51l-1.66,1.03l-2.03,0.5l-1.4,-0.19l-1.73,-0.77l0.96,-1.45l0.62,-1.32l1.32,-2.09l-0.14,-1.57l-0.5,-2.24l-1.04,-0.39l-1.74,1.7l-0.56,-0.03l-0.14,-0.97l1.54,-1.56l0.26,-1.79l-0.23,-1.79l-2.08,-1.55l-2.38,-0.8l-0.39,1.52l-0.62,0.4l-0.5,1.95l-0.26,-1.33l-1.12,0.95l-0.7,1.32l-0.73,1.92l-0.14,1.64l0.93,2.38l-0.08,2.51l-1.14,1.84l-0.57,0.52l-0.76,0.41l-0.95,0.02l-0.26,-0.25l-0.76,-1.98l-0.02,-0.98l0.08,-0.94l-0.35,-1.87l0.53,-2.18l0.63,-2.71l1.46,-3.03l-0.42,0.01l-2.06,2.54l-0.38,-0.46l1.1,-1.42l1.67,-2.57l1.91,-0.36l2.19,-0.8l2.21,0.42l0.09,0.02l2.47,-0.36l-1.4,-1.61l-0.75,-0.13l-0.86,-0.16l-0.59,-1.14l-2.75,0.36l-2.49,0.9l-1.97,-1.55l-1.59,-0.52l0.9,-2.17l-2.48,1.37l-2.25,1.33l-2.16,1.04l-1.72,-1.4l-2.81,0.85l0.01,-0.6l1.9,-1.73l1.99,-1.65l2.86,-1.37l-3.45,-1.09l-2.27,0.55l-2.72,-1.3l-2.86,-0.67l-1.96,-0.26l-0.87,-0.72l-0.5,-2.35l-0.95,0.02l-0.01,1.64l-5.8,0l-9.59,0l-9.53,0l-8.42,0h-8.41h-8.27h-8.55h-2.76h-8.32h-7.96l0.95,3.47l0.45,3.41l-0.69,1.09l-1.49,-3.91l-4.05,-1.42l-0.34,0.82l0.82,1.94l0.89,3.53l0.51,5.42l-0.34,3.59l-0.34,3.54l-1.1,3.61l0.9,2.9l0.1,3.2l-0.61,3.05l1.49,1.99l0.39,2.95l2.17,2.99l1.24,1.17l-0.1,0.82l2.34,4.85l2.72,3.45l0.34,1.87l0.71,0.55l2.6,0.33l1,0.91l1.57,0.17l0.31,0.96l1.31,0.4l1.82,1.92l0.47,1.7l3.19,-0.25l3.56,-0.36l-0.26,0.65l4.23,1.6l6.4,2.31l5.58,-0.02l2.22,0l0.01,-1.35l4.86,0l1.02,1.16l1.43,1.03l1.67,1.43l0.93,1.69l0.7,1.77l1.45,0.97l2.33,0.96l1.77,-2.53l2.29,-0.06l1.98,1.28l1.41,2.18l0.97,1.86l1.65,1.8l0.62,2.19l0.79,1.47l2.19,0.96l1.99,0.68l1.09,-0.09l-0.53,-1.06l-0.14,-1.5l0.03,-2.16l0.65,-1.42l1.53,-1.51l2.79,-1.37l2.55,-2.37l2.36,-0.75l1.74,-0.23l2.04,0.74l2.45,-0.4l2.09,1.69l2.03,0.1l1.05,-0.61l1.04,0.47l0.53,-0.42l-0.6,-0.63l0.05,-1.3l-0.5,-0.86l1.16,-0.5l2.14,-0.22l2.49,0.36l3.17,-0.41l1.76,0.8l1.36,1.5l0.5,0.16l2.83,-1.46l1.09,0.49l2.19,2.68l0.79,1.75l-0.58,2.1l0.42,1.23l1.3,2.4l1.49,2.68l1.07,0.71l0.44,1.35l1.38,0.37l0.84,-0.39l0.7,-1.89l0.12,-1.21l0.09,-2.1l-1.33,-3.65l-0.02,-1.37l-1.25,-2.25l-0.94,-2.75l-0.5,-2.25l0.43,-2.31l1.32,-1.94l1.58,-1.57l3.08,-2.16l0.4,-1.12l1.42,-1.23l1.4,-0.22l1.84,-1.98l2.9,-1.01l1.78,-2.53l-0.39,-3.46l-0.29,-1.21l-0.8,-0.24l-0.12,-3.35l-1.93,-1.14l1.85,0.56l-0.6,-2.26l0.54,-1.55l0.33,2.97l1.43,1.36l-0.87,2.4l0.26,0.14l1.58,-2.81l0.9,-1.38l-0.04,-1.35l-0.7,-0.64l-0.58,-1.94l0.92,0.9l0.62,0.19l0.21,0.92l2.04,-2.78l0.61,-2.62l-0.83,-0.17l0.85,-1.02l-0.08,0.45l1.79,-0.01l3.93,-1.11l-0.83,-0.7l-4.12,0.7l2.34,-1.07l1.63,-0.18l1.22,-0.19l2.07,-0.65l1.35,0.07l1.89,-0.61l0.22,-1.07l-0.84,-0.84l0.29,1.37l-1.16,-0.09l-0.93,-1.99l0.03,-2.01l0.48,-0.86l1.48,-2.28l2.96,-1.15l2.88,-1.34l2.99,-1.9l-0.48,-1.29l-1.83,-2.25L285.18,314.23zM45.62,263.79l-1.5,0.8l-2.55,1.86l0.43,2.42l1.43,1.32l2.8,-1.95l2.43,-2.47l-1.19,-1.63L45.62,263.79zM0,235.22l2.04,-1.26l0.23,-0.68L0,232.61V235.22zM8.5,250.59l-2.77,0.97l1.7,1.52l1.84,1.04l1.72,-0.87l-0.27,-2.15L8.5,250.59zM105.85,283.09l-2.69,0.38l-1.32,-0.62l-0.17,1.52l0.52,2.07l1.42,1.46l1.04,2.13l1.69,2.1l1.12,0.01l-2.44,-3.7L105.85,283.09zM37.13,403.77l-1,-0.28l-0.27,0.26l0.02,0.19l0.32,0.24l0.48,0.63l0.94,-0.21l0.23,-0.36L37.13,403.77zM34.14,403.23l1.5,0.09l0.09,-0.32l-1.38,-0.13L34.14,403.23zM40.03,406.52l-0.5,-0.26l-1.07,-0.5l-0.21,-0.06l-0.16,0.28l0.19,0.58l-0.49,0.48l-0.14,0.33l0.46,1.08l-0.08,0.83l0.7,0.42l0.41,-0.49l0.9,-0.46l1.1,-0.63l0.07,-0.16l-0.71,-1.04L40.03,406.52zM32.17,401.38l-0.75,0.41l0.11,0.12l0.36,0.68l0.98,0.11l0.2,0.04l0.15,-0.17l-0.81,-0.99L32.17,401.38zM27.77,399.82l-0.43,0.3l-0.15,0.22l0.94,0.55l0.33,-0.3l-0.06,-0.7L27.77,399.82z\"\n            />\n            <path\n                id=\"UY\"\n                :title=\"countries.getName('UY', codeLang)\"\n                class=\"land\"\n                d=\"M313.68,551.79L315.5,551.45L318.31,553.95L319.35,553.86L322.24,555.94L324.44,557.76L326.06,560.01L324.82,561.58L325.6,563.48L324.39,565.6L321.22,567.48L319.15,566.8L317.63,567.17L315.04,565.71L313.14,565.82L311.43,563.95L311.65,561.79L312.26,561.05L312.23,557.75L312.98,554.38z\"\n            />\n            <path\n                id=\"UZ\"\n                :title=\"countries.getName('UZ', codeLang)\"\n                class=\"land\"\n                d=\"M661.76,350.95L661.84,348.79L658.11,347.27L655.18,345.52L653.35,343.83L650.14,341.32L648.76,337.53L647.82,336.86L644.79,337.03L643.72,336.26L643.42,333.27L639.64,331.27L637.28,333.47L634.88,334.77L635.34,336.65L632.18,336.7L632.07,322.57L639.29,320.22L639.81,320.57L644.16,323.41L646.45,324.89L649.13,328.39L652.42,327.83L657.23,327.53L660.58,330.33L660.37,334.13L661.74,334.16L662.31,337.22L665.88,337.34L666.64,339.09L667.69,339.07L668.92,336.42L672.61,333.81L674.22,333.11L675.05,333.48L672.7,335.91L674.77,337.31L676.77,336.38L680.09,338.34L676.5,340.98L674.37,340.62L673.21,340.72L672.81,339.7L673.39,337.99L669.64,338.85L668.75,341.2L667.42,343.21L665.08,343.04L664.35,344.63L666.41,345.49L667.01,348.15L665.44,351.72L663.32,350.98z\"\n            />\n            <path\n                id=\"VE\"\n                :title=\"countries.getName('VE', codeLang)\"\n                class=\"land\"\n                d=\"M275.25,430.35L275.17,431.02L273.52,431.35L274.44,432.64L274.4,434.13L273.17,435.77L274.23,438.01L275.44,437.83L276.07,435.79L275.2,434.79L275.06,432.65L278.55,431.49L278.16,430.15L279.14,429.25L280.15,431.25L282.12,431.3L283.94,432.88L284.05,433.82L286.56,433.84L289.56,433.55L291.17,434.82L293.31,435.17L294.88,434.29L294.91,433.57L298.39,433.4L301.75,433.36L299.37,434.2L300.32,435.54L302.57,435.75L304.69,437.14L305.14,439.4L306.6,439.33L307.7,440L305.48,441.65L305.23,442.68L306.19,443.72L305.5,444.24L303.77,444.69L303.83,445.99L303.07,446.76L304.96,448.88L305.34,449.67L304.31,450.74L301.17,451.78L299.16,452.22L298.35,452.88L296.12,452.18L294.04,451.82L293.52,452.08L294.77,452.8L294.66,454.67L295.05,456.43L297.42,456.67L297.58,457.25L295.57,458.05L295.25,459.23L294.09,459.68L292.01,460.33L291.47,461.19L289.29,461.37L287.74,459.89L286.89,457.12L286.14,456.14L285.12,455.53L286.54,454.14L286.45,453.51L285.65,452.68L285.09,450.83L285.31,448.82L285.93,447.88L286.44,446.38L285.45,445.89L283.85,446.21L281.83,446.06L280.7,446.36L278.72,443.95L277.09,443.59L273.49,443.86L272.82,442.88L272.13,442.65L272.03,442.06L272.36,441.02L272.14,439.89L271.52,439.27L271.16,437.97L269.72,437.79L270.49,436.13L270.84,434.12L271.65,433.06L272.74,432.25L273.45,430.83z\"\n            />\n            <path\n                id=\"VN\"\n                :title=\"countries.getName('VN', codeLang)\"\n                class=\"land\"\n                d=\"M778.21,401.87L774.47,404.43L772.13,407.24L771.51,409.29L773.66,412.38L776.28,416.2L778.82,417.99L780.53,420.32L781.81,425.64L781.43,430.66L779.1,432.53L775.88,434.36L773.6,436.72L770.1,439.34L769.08,437.53L769.87,435.62L767.79,434.01L770.22,432.87L773.16,432.67L771.93,430.94L776.64,428.75L776.99,425.33L776.34,423.41L776.85,420.53L776.14,418.49L774.02,416.47L772.25,413.9L769.92,410.44L766.56,408.68L767.37,407.61L769.16,406.84L768.07,404.25L764.62,404.22L763.36,401.5L761.72,399.13L763.23,398.39L765.46,398.41L768.19,398.06L770.58,396.44L771.93,397.58L774.5,398.13L774.05,399.87L775.39,401.09z\"\n            />\n            <path\n                id=\"VU\"\n                :title=\"countries.getName('VU', codeLang)\"\n                class=\"land\"\n                d=\"M945.87,509.9l-0.92,0.38l-0.94,-1.27l0.1,-0.78L945.87,509.9zM943.8,505.46l0.46,2.33l-0.75,-0.36l-0.58,0.16l-0.4,-0.8l-0.06,-2.21L943.8,505.46z\"\n            />\n            <path\n                id=\"YE\"\n                :title=\"countries.getName('YE', codeLang)\"\n                class=\"land\"\n                d=\"M624.16,416.33L622.13,417.12L621.59,418.4L621.52,419.39L618.73,420.61L614.25,421.96L611.74,423.99L610.51,424.14L609.67,423.97L608.03,425.17L606.24,425.72L603.89,425.87L603.18,426.03L602.57,426.78L601.83,426.99L601.4,427.72L600.01,427.66L599.11,428.04L597.17,427.9L596.44,426.23L596.52,424.66L596.07,423.81L595.52,421.69L594.71,420.5L595.27,420.36L594.98,419.04L595.32,418.48L595.2,417.22L596.43,416.29L596.14,415.06L596.89,413.63L598.04,414.39L598.8,414.12L602.03,414.05L602.55,414.35L605.26,414.64L606.33,414.49L607.03,415.46L608.34,414.98L610.35,411.91L612.97,410.59L621.05,409.46L623.25,414.3z\"\n            />\n            <path\n                id=\"ZA\"\n                :title=\"countries.getName('ZA', codeLang)\"\n                class=\"land\"\n                d=\"M563.63,548.71l-0.55,0.46l-1.19,1.63l-0.78,1.66l-1.59,2.33l-3.17,3.38l-1.98,1.98l-2.12,1.51l-2.93,1.3l-1.43,0.17l-0.36,0.93l-1.7,-0.5l-1.39,0.64l-3.04,-0.65l-1.7,0.41l-1.16,-0.18l-2.89,1.33l-2.39,0.54l-1.73,1.28l-1.28,0.08l-1.19,-1.21l-0.95,-0.06l-1.21,-1.51l-0.13,0.47l-0.37,-0.91l0.02,-1.96l-0.91,-2.23l0.9,-0.6l-0.07,-2.53l-1.84,-3.05l-1.41,-2.74l0,-0.01l-2.01,-4.15l1.34,-1.57l1.11,0.87l0.47,1.36l1.26,0.23l1.76,0.6l1.51,-0.23l2.5,-1.63l0,-11.52l0.76,0.46l1.66,2.93l-0.26,1.89l0.63,1.1l2.01,-0.32l1.4,-1.39l1.33,-0.93l0.69,-1.48l1.37,-0.72l1.18,0.38l1.34,0.87l2.28,0.15l1.79,-0.72l0.28,-0.96l0.49,-1.47l1.53,-0.25l0.84,-1.15l0.93,-2.03l2.52,-2.26l3.97,-2.22l1.14,0.03l1.36,0.51l0.94,-0.36l1.49,0.3l1.34,4.26l0.73,2.17l-0.5,3.43l0.24,1.11l-1.42,-0.57l-0.81,0.22l-0.26,0.9l-0.77,1.17l0.03,1.08l1.67,1.7l1.64,-0.34l0.57,-1.39l2.13,0.03l-0.7,2.28l-0.33,2.62l-0.73,1.43L563.63,548.71zM556.5,547.75l-1.22,-0.98l-1.31,0.65l-1.52,1.25l-1.5,2.03l2.1,2.48l1,-0.32l0.52,-1.03l1.56,-0.5l0.48,-1.05l0.86,-1.56L556.5,547.75z\"\n            />\n            <path\n                id=\"ZM\"\n                :title=\"countries.getName('ZM', codeLang)\"\n                class=\"land\"\n                d=\"M567.11,489.21L568.43,490.47L569.14,492.87L568.66,493.64L568.1,495.94L568.64,498.3L567.76,499.29L566.91,501.95L568.38,502.69L559.87,505.07L560.14,507.12L558.01,507.52L556.42,508.67L556.08,509.68L555.07,509.9L552.63,512.3L551.08,514.19L550.13,514.26L549.22,513.92L546.09,513.6L545.59,513.38L545.56,513.14L544.46,512.48L542.64,512.31L540.34,512.98L538.51,511.16L536.62,508.78L536.75,499.62L542.59,499.66L542.35,498.67L542.77,497.6L542.28,496.27L542.6,494.89L542.3,494.01L543.27,494.08L543.43,494.96L544.74,494.89L546.52,495.15L547.46,496.44L549.7,496.84L551.42,495.94L552.05,497.43L554.2,497.83L555.23,499.05L556.38,500.62L558.53,500.65L558.29,497.57L557.52,498.08L555.56,496.98L554.8,496.47L555.15,493.62L555.65,490.27L555.02,489.02L555.82,487.22L556.57,486.89L560.34,486.41L561.44,486.7L562.61,487.41L563.73,487.89L565.51,488.36z\"\n            />\n            <path\n                id=\"ZW\"\n                :title=\"countries.getName('ZW', codeLang)\"\n                class=\"land\"\n                d=\"M562.71,527L561.22,526.7L560.27,527.06L558.92,526.55L557.78,526.52L555.99,525.16L553.82,524.7L553,522.8L552.99,521.75L551.79,521.43L548.62,518.18L547.73,516.47L547.17,515.95L546.09,513.6L549.22,513.92L550.13,514.26L551.08,514.19L552.63,512.3L555.07,509.9L556.08,509.68L556.42,508.67L558.01,507.52L560.14,507.12L560.32,508.2L562.66,508.14L563.96,508.75L564.56,509.47L565.9,509.68L567.35,510.62L567.36,514.31L566.81,516.35L566.69,518.55L567.14,519.43L566.83,521.17L566.4,521.44L565.66,523.59z\"\n            />\n        </g>\n    </svg>\n</template>\n\n<script>\nvar countries = require('i18n-iso-countries');\n\nexport default {\n    props: {\n        codeLang: {\n            type: String,\n            default: 'en',\n        },\n    },\n    data() {\n        return {\n            countries: countries,\n        };\n    },\n    created() {\n        this.countries.registerLocale(\n            require(`i18n-iso-countries/langs/${this.codeLang}.json`)\n        );\n    },\n    mounted() {\n        const paths = document.getElementsByClassName('land');\n        const _this = this;\n\n        Array.from(paths).forEach((path) => {\n            path.addEventListener('click', (e) => {\n                _this.$emit('hoverCountry', {\n                    code: e.target.id,\n                    name: e.target.attributes.title.value,\n                    position: {\n                        // 11 - width of legend container (in rem / we need px)\n                        left:\n                            e.offsetX + 11 * 16 + 20 > document.body.clientWidth\n                                ? e.offsetX - 11 * 16\n                                : e.offsetX,\n                        top: e.offsetY,\n                    },\n                });\n            });\n        });\n        window.addEventListener('click', (e) => {\n            let targetElement = e.target || e.srcElement;\n            if(targetElement.localName != \"path\") {\n                _this.$emit('hoverLeaveCountry');\n\t\t\t}\n        });\n    },\n};\n</script>","import mod from \"-!../../cache-loader/dist/cjs.js??ref--12-0!../../thread-loader/dist/cjs.js!../../babel-loader/lib/index.js!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../cache-loader/dist/cjs.js??ref--12-0!../../thread-loader/dist/cjs.js!../../babel-loader/lib/index.js!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Map.vue?vue&type=template&id=1b2e884c&\"\nimport script from \"./Map.vue?vue&type=script&lang=js&\"\nexport * from \"./Map.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// We multiply this unit by the (value of a country - min) to get the\n// decimal value to provide to the Chroma scale instance.\nconst getColorScaleUnit = (min, max) => 1 / (max - min);\n\nconst getMaxAndMinCountryDataValues = (countryData) => {\n  let min, max;\n\n  Object.keys(countryData).forEach((key) => {\n    if (key === 'unknown') return;\n\n    const value = countryData[key];\n\n    if (value < min || min === undefined) min = value;\n    if (value > max || max === undefined) max = value;\n  });\n\n  return { min, max };\n};\n\nexport const getBaseCss = ({ defaultCountryFillColor, countryStrokeColor, legendHeaderBackgroundColor, legendContentBackgroundColor, legendFontColorHeader, legendFontColorContent, legendBorderRadius, legendBorderColor, legendBoxShadow }) => (\n  `.vue-world-map .land{\n    fill:${defaultCountryFillColor};\n    stroke:${countryStrokeColor};\n  }\n  .vue-map-legend-header{\n    background:${legendHeaderBackgroundColor}\n  }\n  .vue-map-legend .vue-map-legend-content{\n    background:${legendContentBackgroundColor}\n  }\n  .vue-map-legend-content span{\n    color:${legendFontColorContent}\n  }\n  .vue-map-legend-header span{\n    color:${legendFontColorHeader}\n  }\n  .vue-map-legend{\n    border-color: ${legendBorderColor}!important;\n    border-radius:${legendBorderRadius}px;\n    box-shadow: ${legendBoxShadow ? '3px 4px #00000017' : 'none'};\n  }\n  `\n);\n\nexport const getDynamicMapCss = (countryData, chromaScale, highColor, chromaScaleOn) => {\n  const { min, max } = getMaxAndMinCountryDataValues(countryData);\n  const colorScaleUnit = getColorScaleUnit(min, max);\n  const css = [];\n  Object.keys(countryData).forEach((key) => {\n    if (key === 'unknown') return;\n\n    const value = countryData[key];\n    const scaleValue = colorScaleUnit * (value - min);\n    const hex = chromaScale(scaleValue).hex();\n    css.push(`.vue-world-map #${key} { fill: ${!chromaScaleOn ? hex : highColor}; }`);\n  });\n  return css;\n};\n\nexport const getCombinedCssString = (baseCss, dynamicCss) => {\n  dynamicCss.push(baseCss);\n\n  return dynamicCss.join(' ');\n};\n","<template>\n  <div class=\"vue-world-map h-full\">\n    <Map\n      :codeLang=\"LangUser\"\n      @hoverCountry=\"onHoverCountry\"\n      @hoverLeaveCountry=\"onHoverLeaveCountry\"\n    />\n    <transition name=\"fade\">\n      <div\n        v-show=\"legend.name && notShow\"\n        class=\"vue-map-legend text-xs md:text-sm w-36 md:w-44 min-h-0\"\n        :style=\"\n          'left:' +\n            (position.left + positionLeftTooltip) +\n            'px; top: ' +\n            (position.top + positionTopTooltip) +\n            'px;' +\n            `box-shadow:${legendBoxShadowCss}; border: ${legendBorderCss};`\n        \"\n      >\n        <div\n          class=\"vue-map-legend-header\"\n          :style=\"\n            `background: ${legendHeaderBackgroundColor}; color: ${legendFontColorHeader}`\n          \"\n        >\n          <span v-if=\"notShow\">{{ legend.name }}</span>\n        </div>\n        <div\n          class=\"vue-map-legend-content\"\n          :style=\"\n            `background: ${legendContentBackgroundColor}; color: ${legendFontColorContent}`\n          \"\n        >\n          <span v-if=\"notShow\">{{\n            renderValue(countryData[legend.code]) || 0\n          }}</span>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport chroma from 'chroma-js'\nimport Map from './Map'\nimport {\n  getDynamicMapCss,\n  getBaseCss,\n  getCombinedCssString\n} from './dynamic-map-css'\n\nlet legend = {\n  data: null,\n  code: null,\n  name: null\n}\n\nlet position = {\n  left: 0,\n  top: 0\n}\n\nexport default {\n  name: 'MapChart',\n  components: { Map },\n  watch: {\n    countryData () {\n      this.renderMapCSS()\n    }\n  },\n  props: {\n    lowColor: {\n      type: String,\n      default: '#fde2e2'\n    },\n    LangUser: {\n      type: String,\n      default: 'en'\n    },\n    highColor: {\n      type: String,\n      default: '#d83737'\n    },\n    countryData: {\n      type: Object,\n      required: true\n    },\n    defaultCountryFillColor: {\n      type: String,\n      default: '#dadada'\n    },\n    countryStrokeColor: {\n      type: String,\n      default: '#909090'\n    },\n    showEmptyValue: {\n      type: Boolean,\n      default: true\n    },\n    legendHeaderBackgroundColor: {\n      type: String,\n      default: ''\n    },\n    legendContentBackgroundColor: {\n      type: String,\n      default: ''\n    },\n    legendBorderCss: {\n      type: String,\n      default: '0px solid #acacad'\n    },\n    positionLeftTooltip: {\n      type: Number,\n      default: 30\n    },\n    positionTopTooltip: {\n      type: Number,\n      default: -20\n    },\n    legendBoxShadowCss: {\n      type: String,\n      default: '0px 0px 15px rgba(182, 182, 182, 0.407)'\n    },\n    legendFontColorHeader: {\n      type: String,\n      default: ''\n    },\n    legendFontColorContent: {\n      type: String,\n      default: ''\n    },\n    currencyAdd: {\n      type: Boolean,\n      default: true\n    },\n    currencyOnlySign: {\n      type: Boolean,\n      default: true\n    },\n    currencyCurrent: {\n      type: String,\n      default: 'USD'\n    }\n  },\n  data () {\n    return {\n      legend: legend,\n      position: position,\n      node: document.createElement('style'),\n      chromaScale: chroma.scale([this.$props.lowColor, this.$props.highColor]),\n      keysLegend: [],\n      notShow: true\n    }\n  },\n  computed: {\n    getKeyLegend () {\n      Object.keys(this.$props.countryData).forEach(key => {\n        if (key === 'unknown') return\n        this.keysLegend.push(key)\n      })\n      return this.keysLegend\n    }\n  },\n  methods: {\n    onHoverCountry (country) {\n      this.legend = country\n      this.notShowLegendEmpty()\n      this.position = country.position\n      this.$emit('hoverCountry', country)\n    },\n    onHoverLeaveCountry (country) {\n      this.legend = {\n        data: null,\n        code: null, \n        name: null\n      }\n      this.notShow = false;\n      this.$emit('hoverLeaveCountry', country)\n    },\n\n    notShowLegendEmpty () {\n      if (!this.countryData[this.legend.code] && !this.showEmptyValue) {\n        this.notShow = false\n      } else {\n        this.notShow = true\n      }\n    },\n    renderMapCSS () {\n      const baseCss = getBaseCss(this.$props)\n      const dynamicMapCss = getDynamicMapCss(\n        this.$props.countryData,\n        this.chromaScale\n      )\n      this.$data.node.innerHTML = getCombinedCssString(baseCss, dynamicMapCss)\n    },\n    currencyNumber (value, currency, lang) {\n      let formatter\n      formatter = new Intl.NumberFormat(lang, {\n        style: 'currency',\n        currency: currency\n      })\n      if (this.currencyOnlySign) {\n        return formatter\n          .format(value)\n          .replace('USD', '')\n          .replace('US', '')\n      }\n      return formatter.format(value)\n    },\n    renderValue (value) {\n      if (!this.currencyAdd) {\n        return value\n      }\n      return this.currencyNumber(value, this.currencyCurrent, this.LangUser)\n    }\n  },\n  mounted () {\n    document.body.appendChild(this.$data.node)\n    this.renderMapCSS()\n    this.notShowLegendEmpty()\n  },\n  created () {\n    this.notShowLegendEmpty()\n  }\n}\n</script>\n\n<style scoped>\n.vue-world-map * {\n  transition: all 0.2s ease;\n}\n.vue-world-map {\n  position: relative;\n}\n\n.vue-map-legend {\n  /* changes start */\n  /* del prop here. add tailwind for responsive design */\n  /* changes end */\n  background: #fff;\n  border: 0px solid;\n  border-color: #acacad;\n  position: absolute;\n  z-index: 200;\n  font-weight: 600;\n  /* box-shadow: 0px 0px 15px rgba(182, 182, 182, 0.407); */\n  border-radius: 4px;\n}\n\n.vue-map-legend-header {\n  padding: 10px 15px;\n}\n\n.vue-map-legend-content {\n  padding: 10px 15px;\n  background: #fff;\n  font-weight: 500;\n  border-radius: 4px;\n  border-top: 0px solid #acacad;\n}\n\n.fade-left-enter-active,\n.fade-left-leave-active {\n  transition: all 0.3s;\n  opacity: 1;\n  transform: translateY(0px);\n}\n.fade-left-enter,\n.fade-left-leave-to {\n  opacity: 0;\n  transition: all 0.3s;\n  transform: translateX(50%);\n}\n</style>\n","import mod from \"-!../../cache-loader/dist/cjs.js??ref--12-0!../../thread-loader/dist/cjs.js!../../babel-loader/lib/index.js!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../cache-loader/dist/cjs.js??ref--12-0!../../thread-loader/dist/cjs.js!../../babel-loader/lib/index.js!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=8602dc46&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=8602dc46&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8602dc46\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"w-full py-32 sm:py-44 md:py-64 lg:py-80 bg-main-color opacity-50 dark:bg-dark-mode-bg2 dark:opacity-100\"},[_c('button',{staticClass:\"flex items-center mx-auto border border-transparent text-base leading-6 font-medium rounded-md text-white dark:text-gray-200 transition ease-in-out duration-150 cursor-default select-none\",attrs:{\"type\":\"button\",\"disabled\":\"\"}},[_c('svg',{staticClass:\"-ml-1 mr-3 h-5 w-5 text-white animate-spin\",attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"fill\":\"none\",\"viewBox\":\"0 0 24 24\"}},[_c('circle',{staticClass:\"opacity-25\",attrs:{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\",\"stroke\":\"currentColor\",\"stroke-width\":\"4\"}}),_c('path',{staticClass:\"opacity-75\",attrs:{\"fill\":\"currentColor\",\"d\":\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"}})]),_c('span',[_vm._v(\" Collecting data ... \")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div\r\n        class=\"w-full py-32 sm:py-44 md:py-64 lg:py-80 bg-main-color opacity-50 dark:bg-dark-mode-bg2 dark:opacity-100\"\r\n    >\r\n        <button\r\n            type=\"button\"\r\n            class=\"flex items-center mx-auto border border-transparent text-base leading-6 font-medium rounded-md text-white dark:text-gray-200 transition ease-in-out duration-150 cursor-default select-none\"\r\n            disabled\r\n        >\r\n            <svg\r\n                class=\"-ml-1 mr-3 h-5 w-5 text-white animate-spin\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n            >\r\n                <circle\r\n                    class=\"opacity-25\"\r\n                    cx=\"12\"\r\n                    cy=\"12\"\r\n                    r=\"10\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"4\"\r\n                ></circle>\r\n                <path\r\n                    class=\"opacity-75\"\r\n                    fill=\"currentColor\"\r\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                ></path>\r\n            </svg>\r\n            <span>\r\n                Collecting data ...\r\n            </span>\r\n        </button>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'ChartMapLoading',\r\n};\r\n</script>\r\n","import mod from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartMapLoading.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartMapLoading.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartMapLoading.vue?vue&type=template&id=048f5b09&\"\nimport script from \"./ChartMapLoading.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartMapLoading.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"w-full py-32 sm:py-44 md:py-64 lg:py-80 bg-main-color opacity-50 dark:bg-dark-mode-bg2 dark:opacity-100\"},[_c('button',{staticClass:\"flex items-center mx-auto border border-transparent text-base leading-6 font-medium rounded-md text-white dark:text-gray-200 transition ease-in-out duration-150 cursor-default select-none\",attrs:{\"type\":\"button\",\"disabled\":\"\"}},[_c('div',{staticClass:\"select-text\"},[_vm._v(\" Try again later or \"),_c('span',{staticClass:\"underline cursor-pointer\",on:{\"click\":_vm.showContacts}},[_vm._v(\"contact us\")]),_vm._v(\" with the following error message: \"),_c('br'),_c('span',{staticClass:\"text-xs\"},[_vm._v(_vm._s(_vm.error.join('')))])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div\r\n        class=\"w-full py-32 sm:py-44 md:py-64 lg:py-80 bg-main-color opacity-50 dark:bg-dark-mode-bg2 dark:opacity-100\"\r\n    >\r\n        <button\r\n            type=\"button\"\r\n            class=\"flex items-center mx-auto border border-transparent text-base leading-6 font-medium rounded-md text-white dark:text-gray-200 transition ease-in-out duration-150 cursor-default select-none\"\r\n            disabled\r\n        >\r\n            <div class=\"select-text\">\r\n                Try again later or\r\n                <span v-on:click=\"showContacts\" class=\"underline cursor-pointer\"\r\n                    >contact us</span\r\n                >\r\n                with the following error message:\r\n                <br />\r\n                <span class=\"text-xs\">{{ error.join('') }}</span>\r\n            </div>\r\n        </button>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { mapActions } from 'vuex';\r\nexport default {\r\n    name: 'ChartMapError',\r\n    props: ['error'],\r\n    methods: {\r\n        ...mapActions(['showContacts']),\r\n    },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartMapError.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartMapError.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartMapError.vue?vue&type=template&id=d0c057f8&\"\nimport script from \"./ChartMapError.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartMapError.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"pb-4\">\r\n        <div ref=\"loading\" v-if=\"isLoading && !error\">\r\n            <chart-map-loading></chart-map-loading>\r\n        </div>\r\n        <div v-else-if=\"error\">\r\n            <chart-map-error :error=\"error\"></chart-map-error>\r\n        </div>\r\n        <div v-else>\r\n            <div\r\n                id=\"chartMap\"\r\n                class=\"w-full max-w-full bg-pink-50 dark:bg-dark-mode-bg2 py-4 md:pt-16\"\r\n                :key=\"theme\"\r\n            >\r\n                <MapChart\r\n                    :countryData=\"countryData\"\r\n                    :highColor=\"highColor\"\r\n                    :lowColor=\"lowColor\"\r\n                    countryStrokeColor=\"#909090\"\r\n                    :defaultCountryFillColor=\"defaultCountryFillColor\"\r\n                    LangUser=\"en\"\r\n                    :currencyAdd=\"false\"\r\n                    :showEmptyValue=\"false\"\r\n                    legendHeaderBackgroundColor=\"#FDF2F8\"\r\n                    :positionLeftTooltip=\"0\"\r\n                    class=\"w-full px-2 mx-auto sm:w-11/12 md:w-10/12 lg:w-9/12\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\n\r\nimport MapChart from 'vue-chart-map';\r\nimport ChartMapLoading from './components/ChartMapLoading';\r\nimport ChartMapError from './components/ChartMapError';\r\n\r\nexport default {\r\n    name: 'ChartMap',\r\n    components: {\r\n        MapChart,\r\n        ChartMapLoading,\r\n        ChartMapError,\r\n    },\r\n    // old dark-mode-check method\r\n    // data() {\r\n    //     return {\r\n    //         darkMode: window.matchMedia('(prefers-color-scheme: dark)').matches,\r\n    //     };\r\n    // },\r\n    props: {\r\n        chartToShow: {\r\n            type: String,\r\n            default: 'TotalConfirmed',\r\n        },\r\n    },\r\n    methods: {\r\n        // showContacts: function() {\r\n        //     this.showContacts();\r\n        //     // this.$store.dispatch('showContacts');\r\n        // },\r\n        // ...mapActions(['showContacts', 'getCountryData']),\r\n        ...mapActions(['getCountryData']),\r\n    },\r\n    watch: {\r\n        chartToShow: function(newChart) {\r\n            this.getCountryData(newChart);\r\n            // this.$store.dispatch('getCountryData', newChart);\r\n        },\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            countryData: 'GET_COUNTRY_DATA',\r\n            error: 'GET_CHART_MAP_ERROR',\r\n            isLoading: 'GET_CHART_DATA_LOADING_STATUS',\r\n            theme: 'GET_THEME',\r\n        }),\r\n        highColor: function() {\r\n            return this.theme == 'dark' ? '#4f3b78' : '#d83737';\r\n        },\r\n        lowColor: function() {\r\n            return this.theme == 'dark' ? '#c4bbf0' : '#fde2e2';\r\n        },\r\n        defaultCountryFillColor: function() {\r\n            return this.theme == 'dark' ? '#b5adc9' : '#dadada';\r\n        },\r\n    },\r\n    created: function() {\r\n        this.getCountryData(this.chartToShow);\r\n        // this.$store.dispatch('getCountryData', this.chartToShow);\r\n    },\r\n\r\n    // old dark-mode-check method\r\n    // mounted: function() {\r\n    //     window\r\n    //         .matchMedia('(prefers-color-scheme: dark)')\r\n    //         .addEventListener('change', e => {\r\n    //             this.darkMode = e.matches ? true : false;\r\n    //         });\r\n    // },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=3dc81cfa&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3dc81cfa\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"py-4\"},[_c('div',{staticClass:\"block md:hidden mx-auto py-4 text-center\"},[_c('div',{staticClass:\"w-full flex justify-center items-center dark:text-dark-mode-secondary-color\",attrs:{\"id\":_vm.casesTypeId}},[_c('font-awesome-icon',{staticClass:\"text-sm\",attrs:{\"icon\":['fas', 'arrow-left']},on:{\"click\":function($event){return _vm.changeCasesType('prev')}}}),_c('div',{staticClass:\"font-semibold w-4/12 sm:w-3/12\"},[_c('span',{staticClass:\"mx-2\"},[_vm._v(_vm._s(_vm.casesTypes[_vm.casesTypeId]))])]),_c('font-awesome-icon',{staticClass:\"text-sm\",attrs:{\"icon\":['fas', 'arrow-right']},on:{\"click\":function($event){return _vm.changeCasesType('next')}}})],1)]),_c('div',{staticClass:\"hidden py-4 md:grid grid-flow-col auto-cols-auto md:px-14 lg:px-44 xl:px-72 m-auto text-center md:text-base md:font-light divide-x-2 divide-main-color dark:text-gray-200 dark:divide-dark-mode-main-color select-none\"},[_c('span',{staticClass:\"cursor-pointer underline text-main-color dark:text-dark-mode-main-color\",on:{\"click\":function($event){return _vm.clickedTypeOfCasesData('TotalConfirmed', $event)}}},[_vm._v(\"Total Confirmed\")]),_c('span',{staticClass:\"cursor-pointer\",on:{\"click\":function($event){return _vm.clickedTypeOfCasesData('TotalDeaths', $event)}}},[_vm._v(\"Total Deaths\")]),_c('span',{staticClass:\"cursor-pointer\",on:{\"click\":function($event){return _vm.clickedTypeOfCasesData('TotalRecovered', $event)}}},[_vm._v(\"Total Recovered\")]),_c('span',{staticClass:\"cursor-pointer\",on:{\"click\":function($event){return _vm.clickedTypeOfCasesData('NewConfirmed', $event)}}},[_vm._v(\"New Confirmed\")]),_c('span',{staticClass:\"cursor-pointer\",on:{\"click\":function($event){return _vm.clickedTypeOfCasesData('NewDeaths', $event)}}},[_vm._v(\"New Deaths\")]),_c('span',{staticClass:\"cursor-pointer\",on:{\"click\":function($event){return _vm.clickedTypeOfCasesData('NewRecovered', $event)}}},[_vm._v(\"New Recovered\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"py-4\">\r\n        <div class=\"block md:hidden mx-auto py-4 text-center\">\r\n            <div\r\n                class=\"w-full flex justify-center items-center dark:text-dark-mode-secondary-color\"\r\n                :id=\"casesTypeId\"\r\n            >\r\n                <font-awesome-icon\r\n                    :icon=\"['fas', 'arrow-left']\"\r\n                    v-on:click=\"changeCasesType('prev')\"\r\n                    class=\"text-sm\"\r\n                ></font-awesome-icon>\r\n                <div class=\"font-semibold w-4/12 sm:w-3/12\">\r\n                    <span class=\"mx-2\">{{ casesTypes[casesTypeId] }}</span>\r\n                </div>\r\n                <font-awesome-icon\r\n                    :icon=\"['fas', 'arrow-right']\"\r\n                    v-on:click=\"changeCasesType('next')\"\r\n                    class=\"text-sm\"\r\n                ></font-awesome-icon>\r\n            </div>\r\n        </div>\r\n        <div\r\n            class=\"hidden py-4 md:grid grid-flow-col auto-cols-auto md:px-14 lg:px-44 xl:px-72 m-auto text-center md:text-base md:font-light divide-x-2 divide-main-color dark:text-gray-200 dark:divide-dark-mode-main-color select-none\"\r\n        >\r\n            <span\r\n                v-on:click=\"clickedTypeOfCasesData('TotalConfirmed', $event)\"\r\n                class=\"cursor-pointer underline text-main-color dark:text-dark-mode-main-color\"\r\n                >Total Confirmed</span\r\n            >\r\n            <!-- <span\r\n            class=\"h-10 border-0 border-r-2 border-main-color border-opacity-50\"\r\n        ></span> -->\r\n            <span\r\n                v-on:click=\"clickedTypeOfCasesData('TotalDeaths', $event)\"\r\n                class=\"cursor-pointer\"\r\n                >Total Deaths</span\r\n            >\r\n            <!-- <span\r\n            class=\"h-10 border-0 border-r-2 border-main-color border-opacity-50\"\r\n        ></span> -->\r\n            <span\r\n                v-on:click=\"clickedTypeOfCasesData('TotalRecovered', $event)\"\r\n                class=\"cursor-pointer\"\r\n                >Total Recovered</span\r\n            >\r\n            <!-- <span\r\n            class=\"h-10 border-0 border-r-2 border-main-color border-opacity-50\"\r\n        ></span> -->\r\n            <span\r\n                v-on:click=\"clickedTypeOfCasesData('NewConfirmed', $event)\"\r\n                class=\"cursor-pointer\"\r\n                >New Confirmed</span\r\n            >\r\n            <!-- <span\r\n            class=\"h-10 border-0 border-r-2 border-main-color border-opacity-50\"\r\n        ></span> -->\r\n            <span\r\n                v-on:click=\"clickedTypeOfCasesData('NewDeaths', $event)\"\r\n                class=\"cursor-pointer\"\r\n                >New Deaths</span\r\n            >\r\n            <!-- <span\r\n            class=\"h-10 border-0 border-r-2 border-main-color border-opacity-50\"\r\n        ></span> -->\r\n            <span\r\n                v-on:click=\"clickedTypeOfCasesData('NewRecovered', $event)\"\r\n                class=\"cursor-pointer\"\r\n                >New Recovered</span\r\n            >\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'NavBar',\r\n    data() {\r\n        return {\r\n            casesTypes: [\r\n                'Total Confirmed',\r\n                'Total Deaths',\r\n                'Total Recovered',\r\n                'New Confirmed',\r\n                'New Deaths',\r\n                'New Recovered',\r\n            ],\r\n            casesTypeId: 0,\r\n        };\r\n    },\r\n    methods: {\r\n        clickedTypeOfCasesData: function(casesType, event) {\r\n            if (event) {\r\n                let siblings = Array.prototype.slice.call(\r\n                    event.target.parentNode.children\r\n                );\r\n                siblings.forEach(el => {\r\n                    if (el.classList.contains('underline'))\r\n                        el.classList.toggle('underline');\r\n                    if (el.classList.contains('text-main-color'))\r\n                        el.classList.toggle('text-main-color');\r\n                    if (el.classList.contains('dark:text-dark-mode-main-color'))\r\n                        el.classList.toggle('dark:text-dark-mode-main-color');\r\n                });\r\n                event.target.classList.toggle('underline');\r\n                event.target.classList.toggle('text-main-color');\r\n                event.target.classList.toggle('dark:text-dark-mode-main-color');\r\n            }\r\n            this.$emit('clicked', casesType);\r\n        },\r\n        changeCasesType: function(condition) {\r\n            switch (condition) {\r\n                case 'prev':\r\n                    if (this.casesTypeId === 0)\r\n                        this.casesTypeId = this.casesTypes.length - 1;\r\n                    else this.casesTypeId--;\r\n                    break;\r\n                case 'next':\r\n                    if (this.casesTypeId === this.casesTypes.length - 1)\r\n                        this.casesTypeId = 0;\r\n                    else this.casesTypeId++;\r\n                    break;\r\n            }\r\n            this.$emit(\r\n                'clicked',\r\n                this.casesTypes[this.casesTypeId].replace(' ', '')\r\n            );\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NavBar.vue?vue&type=template&id=7233d425&scoped=true&\"\nimport script from \"./NavBar.vue?vue&type=script&lang=js&\"\nexport * from \"./NavBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7233d425\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.date)?_c('div',{staticClass:\"m-auto text-center pt-2 md:pt-4 pb-2\"},[_c('span',{staticClass:\"font-semibold text-xl md:text-3xl text-main-color text-opacity-70 dark:text-gray-200 dark:text-opacity-90\"},[_vm._v(_vm._s(_vm.date.substring(0, 10)))])]):_vm._e(),(_vm.error && !_vm.date)?_c('div',{staticClass:\"m-auto text-center pb-4\"},[_c('span',{staticClass:\"text-xs text-gray-600 dark:text-gray-200\"},[_vm._v(\"Error occured while trying to get Date. \"),_c('br'),_vm._v(\" \"+_vm._s(_vm.error))])]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <div v-if=\"date\" class=\"m-auto text-center pt-2 md:pt-4 pb-2\">\r\n            <span\r\n                class=\"font-semibold text-xl md:text-3xl text-main-color text-opacity-70 dark:text-gray-200 dark:text-opacity-90\"\r\n                >{{ date.substring(0, 10) }}</span\r\n            >\r\n        </div>\r\n        <div v-if=\"error && !date\" class=\"m-auto text-center pb-4\">\r\n            <span class=\"text-xs text-gray-600 dark:text-gray-200\"\r\n                >Error occured while trying to get Date. <br />\r\n                {{ error }}</span\r\n            >\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n    name: 'Date',\r\n    computed: {\r\n        ...mapGetters({\r\n            date: 'GET_DATE',\r\n            error: 'GET_DATE_ERROR',\r\n        }),\r\n    },\r\n    methods: {\r\n        ...mapActions(['getDate']),\r\n    },\r\n    created() {\r\n        this.getDate();\r\n        // this.$store.dispatch('getDate');\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Date.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Date.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Date.vue?vue&type=template&id=c2c2a0a8&scoped=true&\"\nimport script from \"./Date.vue?vue&type=script&lang=js&\"\nexport * from \"./Date.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c2c2a0a8\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.totalData)?_c('div',{staticClass:\"flex flex-col md:flex-row text-center justify-center py-4 md:px-14 lg:px-44 xl:px-72\"},_vm._l((_vm.totalData),function(ref){\nvar dataType = ref[0];\nvar totalValue = ref[1];\nvar string = ref[2];\nvar val = ref[3];\nreturn _c('div',{key:totalValue,staticClass:\"mx-auto md:mx-2 lg:mx-4 py-5 rounded shadow dark:shadow-2xl md:w-7/12 w-full bg-gradient-to-br from-pink-50 to-transparent dark:from-transparent dark:border dark:border-dark-mode-main-color dark:border-opacity-50\"},[_c('div',{staticClass:\"text-lg text-gray-600 dark:text-gray-400\"},[_vm._v(\" \"+_vm._s(dataType.replace(/([A-Z])/g, ' $1').trim())+\" \"),_c('br'),_c('span',{staticClass:\"mx-auto text-2xl font-bold text-gray-900 dark:text-gray-300\"},[_vm._v(\" \"+_vm._s(totalValue)+\" \")])]),_c('div',{staticClass:\"mt-7\"},[_c('span',{staticClass:\"text-gray-500 dark:text-gray-400 text-sm\"},[_vm._v(_vm._s(string.replace(/([A-Z])/g, ' $1').trim())+\" \"),_c('br'),_c('span',{staticClass:\"text-gray-400 dark:text-gray-500 text-xs proportional-nums place-self-start\"},[_vm._v(_vm._s(val))])])])])}),0):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div\r\n        v-if=\"totalData\"\r\n        class=\"flex flex-col md:flex-row text-center justify-center py-4 md:px-14 lg:px-44 xl:px-72\"\r\n    >\r\n        <div\r\n            class=\"mx-auto md:mx-2 lg:mx-4 py-5 rounded shadow dark:shadow-2xl md:w-7/12 w-full bg-gradient-to-br from-pink-50 to-transparent dark:from-transparent dark:border dark:border-dark-mode-main-color dark:border-opacity-50\"\r\n            v-for=\"[dataType, totalValue, string, val] of totalData\"\r\n            :key=\"totalValue\"\r\n        >\r\n            <div class=\"text-lg text-gray-600 dark:text-gray-400\">\r\n                {{ dataType.replace(/([A-Z])/g, ' $1').trim() }} <br />\r\n                <span\r\n                    class=\"mx-auto text-2xl font-bold text-gray-900 dark:text-gray-300\"\r\n                >\r\n                    {{ totalValue }}\r\n                </span>\r\n            </div>\r\n            <div class=\"mt-7\">\r\n                <span class=\"text-gray-500 dark:text-gray-400 text-sm\"\r\n                    >{{ string.replace(/([A-Z])/g, ' $1').trim() }} <br />\r\n                    <span\r\n                        class=\"text-gray-400 dark:text-gray-500 text-xs proportional-nums place-self-start\"\r\n                        >{{ val }}</span\r\n                    ></span\r\n                >\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\nclass=\"mx-auto md:mx-2 lg:mx-4 py-5 rounded shadow md:w-7/12 w-full\r\nbg-gradient-to-br from-pink-50 to-transparent\r\ndark:from-dark-mode-secondary-color dark:via-secondary-color\"\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\nexport default {\r\n    name: 'DataCards',\r\n    data() {\r\n        return {};\r\n    },\r\n    methods: {\r\n        ...mapActions({\r\n            getData: 'getTotalData',\r\n        }),\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            totalData: 'GET_TOTAL_DATA',\r\n            error: 'GET_CARDS_DATA_ERROR',\r\n        }),\r\n    },\r\n    created() {\r\n        this.getData();\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"\"></style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DataCards.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DataCards.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DataCards.vue?vue&type=template&id=663b6720&\"\nimport script from \"./DataCards.vue?vue&type=script&lang=js&\"\nexport * from \"./DataCards.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pt-4\"},[_c('button',{staticClass:\"group block mx-auto px-4 py-2 border-2 border-main-color dark:border-dark-mode-main-color overflow-hidden select-none\"},[_c('router-link',{staticClass:\"p-6\",attrs:{\"to\":\"/country\"}},[_c('font-awesome-icon',{staticClass:\"relative left-0 -ml-4 text-main-color dark:text-dark-mode-main-color group-hover:left-1/2 group-hover:text-3xl group-hover:-ml-9 group-hover:-mb-1 transition-font-size duration-500 lg:duration-700\",attrs:{\"icon\":['fas', 'chart-line']}}),_c('span',{staticClass:\"relative inline-block right-0 ml-2 pl-2 py-2 border-0 border-l-2 border-main-color dark:border-dark-mode-main-color text-main-color dark:text-dark-mode-main-color group-hover:-right-72 transition-inset duration-500 lg:duration-700\"},[_vm._v(\" View for my country\")])],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"pt-4\">\r\n        <button\r\n            class=\"group block mx-auto px-4 py-2 border-2 border-main-color dark:border-dark-mode-main-color overflow-hidden select-none\"\r\n        >\r\n            <router-link to=\"/country\" class=\"p-6\">\r\n                <font-awesome-icon\r\n                    :icon=\"['fas', 'chart-line']\"\r\n                    class=\"relative left-0 -ml-4 text-main-color dark:text-dark-mode-main-color group-hover:left-1/2 group-hover:text-3xl group-hover:-ml-9 group-hover:-mb-1 transition-font-size duration-500 lg:duration-700\"\r\n                ></font-awesome-icon>\r\n                <span\r\n                    class=\"relative inline-block right-0 ml-2 pl-2 py-2 border-0 border-l-2 border-main-color dark:border-dark-mode-main-color text-main-color dark:text-dark-mode-main-color group-hover:-right-72 transition-inset duration-500 lg:duration-700\"\r\n                >\r\n                    View for my country</span\r\n                >\r\n            </router-link>\r\n        </button>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n    name: 'RouterLinkToCountry',\r\n    computed: {\r\n        ...mapGetters({\r\n            date: 'GET_DATE',\r\n        }),\r\n    },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RouterLinkToCountry.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RouterLinkToCountry.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RouterLinkToCountry.vue?vue&type=template&id=7a1721a2&\"\nimport script from \"./RouterLinkToCountry.vue?vue&type=script&lang=js&\"\nexport * from \"./RouterLinkToCountry.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div id=\"chart-map\">\r\n        <date></date>\r\n        <data-cards />\r\n        <router-link-to-country></router-link-to-country>\r\n        <nav-bar @clicked=\"onClickTypeOfCasesData\"></nav-bar>\r\n        <chart-map :chartToShow=\"chartToShow\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ChartMap from './components/ChartMap';\r\nimport NavBar from './components/NavBar.vue';\r\nimport Date from './components/Date.vue';\r\nimport DataCards from './components/DataCards.vue';\r\nimport RouterLinkToCountry from './components/RouterLinkToCountry.vue';\r\n\r\nexport default {\r\n    name: 'StatsPageContent',\r\n    components: {\r\n        ChartMap,\r\n        NavBar,\r\n        Date,\r\n        DataCards,\r\n        RouterLinkToCountry,\r\n    },\r\n    data() {\r\n        return {\r\n            chartToShow: 'TotalConfirmed',\r\n        };\r\n    },\r\n    methods: {\r\n        onClickTypeOfCasesData: function(casesType) {\r\n            this.chartToShow = casesType;\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=0ace1330&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0ace1330\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div class=\"stats-page\">\r\n        <Header />\r\n        <stats-page-content />\r\n        <Footer />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from '@/components/Header';\r\nimport Footer from '@/components/Footer';\r\nimport StatsPageContent from '@/components/StatsPageContent';\r\n\r\nexport default {\r\n    name: 'StatsPage',\r\n    components: {\r\n        Header,\r\n        Footer,\r\n        StatsPageContent,\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatsPage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatsPage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StatsPage.vue?vue&type=template&id=23f5c955&scoped=true&\"\nimport script from \"./StatsPage.vue?vue&type=script&lang=js&\"\nexport * from \"./StatsPage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"23f5c955\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var map = {\n\t\"./af.json\": \"fb44\",\n\t\"./am.json\": \"b1cd\",\n\t\"./ar.json\": \"307c\",\n\t\"./az.json\": \"66a3\",\n\t\"./be.json\": \"804a\",\n\t\"./bg.json\": \"8d3c\",\n\t\"./bn.json\": \"b1fb\",\n\t\"./bs.json\": \"01af\",\n\t\"./ca.json\": \"854d\",\n\t\"./cs.json\": \"2a2c\",\n\t\"./da.json\": \"e1a7\",\n\t\"./de.json\": \"8781\",\n\t\"./el.json\": \"2d2c\",\n\t\"./en.json\": \"d13c\",\n\t\"./es.json\": \"566f\",\n\t\"./et.json\": \"8e35\",\n\t\"./fa.json\": \"1ca7\",\n\t\"./fi.json\": \"196d\",\n\t\"./fr.json\": \"20fc\",\n\t\"./gl.json\": \"2829\",\n\t\"./ha.json\": \"4f92\",\n\t\"./he.json\": \"35d3\",\n\t\"./hi.json\": \"c72f\",\n\t\"./hr.json\": \"a831\",\n\t\"./hu.json\": \"7d6e\",\n\t\"./hy.json\": \"e956\",\n\t\"./id.json\": \"04a4\",\n\t\"./is.json\": \"3bde\",\n\t\"./it.json\": \"5f7a\",\n\t\"./ja.json\": \"5119\",\n\t\"./ka.json\": \"58b5\",\n\t\"./kk.json\": \"db7f\",\n\t\"./km.json\": \"b52b\",\n\t\"./ko.json\": \"50c0\",\n\t\"./ku.json\": \"8b60\",\n\t\"./ky.json\": \"4756\",\n\t\"./lt.json\": \"37d3\",\n\t\"./lv.json\": \"5004\",\n\t\"./mk.json\": \"8296\",\n\t\"./ml.json\": \"fe89\",\n\t\"./mn.json\": \"3529\",\n\t\"./ms.json\": \"950a\",\n\t\"./nb.json\": \"b363\",\n\t\"./nl.json\": \"4699\",\n\t\"./nn.json\": \"7796\",\n\t\"./no.json\": \"6e78\",\n\t\"./pl.json\": \"1590\",\n\t\"./ps.json\": \"da8c\",\n\t\"./pt.json\": \"5408\",\n\t\"./ro.json\": \"3a4f\",\n\t\"./ru.json\": \"b401\",\n\t\"./sd.json\": \"0dca\",\n\t\"./sk.json\": \"0424\",\n\t\"./sl.json\": \"065d\",\n\t\"./so.json\": \"464a\",\n\t\"./sq.json\": \"fdf8\",\n\t\"./sr.json\": \"a019\",\n\t\"./sv.json\": \"4ff2\",\n\t\"./ta.json\": \"7e6d\",\n\t\"./tg.json\": \"8963\",\n\t\"./th.json\": \"21cf\",\n\t\"./tr.json\": \"118d\",\n\t\"./tt.json\": \"591b\",\n\t\"./ug.json\": \"5541\",\n\t\"./uk.json\": \"5571\",\n\t\"./ur.json\": \"c191\",\n\t\"./uz.json\": \"fdc6\",\n\t\"./vi.json\": \"b1fb0\",\n\t\"./zh.json\": \"643d\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"f8f1\";"],"sourceRoot":""}